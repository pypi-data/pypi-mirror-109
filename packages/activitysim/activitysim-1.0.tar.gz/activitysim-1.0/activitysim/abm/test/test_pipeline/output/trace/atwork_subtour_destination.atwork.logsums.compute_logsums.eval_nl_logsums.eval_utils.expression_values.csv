Expression,Label,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16
sov_available == False,util_DRIVEALONEFREE_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
auto_ownership == 0,util_DRIVEALONEFREE_Unavailable_for_zero_auto_households,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16,util_DRIVEALONEFREE_Unavailable_for_persons_less_than_16,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
is_joint == True,util_DRIVEALONEFREE_Unavailable_for_joint_tours,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
is_atwork_subtour & ~work_tour_is_SOV,util_DRIVEALONEFREE_Unavailable_if_didn't_drive_to_work,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@odt_skims['SOV_TIME'] + dot_skims['SOV_TIME'],util_DRIVEALONEFREE_In_vehicle_time,0.8799999952316284,1.809999942779541,1.6699999570846558,3.9700000286102295,5.010000228881836,5.880000114440918,9.680000305175781,6.809999942779541,3.9099998474121094,3.879999876022339,3.2100000381469727,5.069999694824219,7.590000152587891,3.619999885559082,6.050000190734863,2.490000009536743,3.4699997901916504
@2 * walktimeshort_multiplier * df.terminal_time,util_DRIVEALONEFREE_Terminal_time,23.39484,22.12924,22.5732,22.1022,20.00016,21.4174,20.90168,18.589560000000002,21.84808,22.05276,22.08588,19.00068,18.32624,19.75252,20.46808,21.43404,19.56452
@ivt_cost_multiplier * df.ivot * costPerMile * (odt_skims['SOV_DIST'] + dot_skims['SOV_DIST']),util_DRIVEALONEFREE_Operating_cost,0.7837215364373917,1.5674430728747835,1.4834728218604543,3.4707668161394296,4.534388883429419,5.17815986248149,8.145105506202398,5.905901259381617,3.330816675838426,3.106896117689366,2.7990054753597042,4.170518184979356,6.717613407797254,3.1908662018699685,5.374090726237803,2.1552341626401796,2.9669456437209085
@ivt_cost_multiplier * df.ivot * df.daily_parking_cost,util_DRIVEALONEFREE_Parking_cost,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['SOV_BTOLL'] + dot_skims['SOV_BTOLL']),util_DRIVEALONEFREE_Bridge_toll,0.061213898678362744,0.12242779735672549,0.11324571232693154,0.2479162866828551,0.31525156473923527,0.3626923267513255,0.5708195995887638,0.41625450918855034,0.24179488450088368,0.2326128085926713,0.20353619839700582,0.2922963567255412,0.48818084344219986,0.2372038465467775,0.39942070335682767,0.16068647433902178,0.2203700407150548
@(df.age >= 16) & (df.age <= 19),util_DRIVEALONEFREE_Person_is_between_16_and_19_years_old,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
sovtoll_available == False,util_DRIVEALONEPAY_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
auto_ownership == 0 # (2),util_DRIVEALONEPAY_Unavailable_for_zero_auto_households,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (2),util_DRIVEALONEPAY_Unavailable_for_persons_less_than_16,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
is_joint == True # (2),util_DRIVEALONEPAY_Unavailable_for_joint_tours,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
is_atwork_subtour & ~work_tour_is_SOV # (2),util_DRIVEALONEPAY_Unavailable_if_didn't_drive_to_work,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@odt_skims['SOVTOLL_TIME'] + dot_skims['SOVTOLL_TIME'],util_DRIVEALONEPAY_In_vehicle_time,0.8799999952316284,1.809999942779541,1.6699999570846558,3.9700000286102295,5.010000228881836,5.880000114440918,9.680000305175781,6.809999942779541,3.9099998474121094,3.879999876022339,3.2100000381469727,5.069999694824219,7.590000152587891,3.619999885559082,6.050000190734863,2.490000009536743,3.4699997901916504
@2 * walktimeshort_multiplier * df.terminal_time # (2),util_DRIVEALONEPAY_Terminal_time,23.39484,22.12924,22.5732,22.1022,20.00016,21.4174,20.90168,18.589560000000002,21.84808,22.05276,22.08588,19.00068,18.32624,19.75252,20.46808,21.43404,19.56452
@ivt_cost_multiplier * df.ivot * costPerMile * (odt_skims['SOVTOLL_DIST'] + dot_skims['SOVTOLL_DIST']),util_DRIVEALONEPAY_Operating_cost,0.7837215364373917,1.5674430728747835,1.4834728218604543,3.4707668161394296,4.534388883429419,5.17815986248149,8.145105506202398,5.905901259381617,3.330816675838426,3.106896117689366,2.7990054753597042,4.170518184979356,6.717613407797254,3.1908662018699685,5.374090726237803,2.1552341626401796,2.9669456437209085
@ivt_cost_multiplier * df.ivot * df.daily_parking_cost # (2),util_DRIVEALONEPAY_Parking_cost,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['SOVTOLL_BTOLL'] + dot_skims['SOVTOLL_BTOLL']),util_DRIVEALONEPAY_Bridge_toll,0.061213898678362744,0.12242779735672549,0.11324571232693154,0.2479162866828551,0.31525156473923527,0.3626923267513255,0.5708195995887638,0.41625450918855034,0.24179488450088368,0.2326128085926713,0.20353619839700582,0.2922963567255412,0.48818084344219986,0.2372038465467775,0.39942070335682767,0.16068647433902178,0.2203700407150548
@ivt_cost_multiplier * df.ivot * (odt_skims['SOVTOLL_VTOLL'] + dot_skims['SOVTOLL_VTOLL']),util_DRIVEALONEPAY_Value_toll,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.age >= 16) & (df.age <= 19) # (2),util_DRIVEALONEPAY_Person_is_between_16_and_19_years_old,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
hov2_available == False,util_SHARED2FREE_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
is_joint & (number_of_participants > 2),util_SHARED2FREE_Unavailable_based_on_party_size,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(odt_skims['HOV2_TIME'] + dot_skims['HOV2_TIME']),util_SHARED2FREE_In_vehicle_time,0.8799999952316284,1.809999942779541,1.6699999570846558,3.9700000286102295,5.010000228881836,5.880000114440918,9.680000305175781,6.809999942779541,3.9099998474121094,3.879999876022339,3.2100000381469727,5.069999694824219,7.590000152587891,3.619999885559082,6.050000190734863,2.490000009536743,3.4699997901916504
@2 * walktimeshort_multiplier * df.terminal_time # (3),util_SHARED2FREE_Terminal_time,23.39484,22.12924,22.5732,22.1022,20.00016,21.4174,20.90168,18.589560000000002,21.84808,22.05276,22.08588,19.00068,18.32624,19.75252,20.46808,21.43404,19.56452
@ivt_cost_multiplier * df.ivot * costPerMile * (odt_skims['HOV2_DIST'] + dot_skims['HOV2_DIST']),util_SHARED2FREE_Operating_cost,0.7837215364373917,1.5674430728747835,1.4834728218604543,3.4707668161394296,4.534388883429419,5.17815986248149,8.145105506202398,5.905901259381617,3.330816675838426,3.106896117689366,2.7990054753597042,4.170518184979356,6.717613407797254,3.1908662018699685,5.374090726237803,2.1552341626401796,2.9669456437209085
@ivt_cost_multiplier * df.ivot * df.daily_parking_cost / costShareSr2,util_SHARED2FREE_Parking_cost,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2_BTOLL'] + dot_skims['HOV2_BTOLL']) / costShareSr2,util_SHARED2FREE_Bridge_toll,0.03497937067335014,0.06995874134670028,0.06471183561538944,0.14166644953306004,0.180143751279563,0.20725275814361457,0.32618262833643646,0.2378597195363145,0.13816850542907638,0.13292160491009788,0.11630639908400332,0.1670264895574521,0.2789604819669714,0.13554505516958715,0.22824040191818723,0.09182084247944101,0.1259257375514599
hov2toll_available == False,util_SHARED2PAY_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
is_joint & (number_of_participants > 2) # (2),util_SHARED2PAY_Unavailable_based_on_party_size,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(odt_skims['HOV2TOLL_TIME'] + dot_skims['HOV2TOLL_TIME']),util_SHARED2PAY_In_vehicle_time,0.8799999952316284,1.809999942779541,1.6699999570846558,3.9700000286102295,5.010000228881836,5.880000114440918,9.680000305175781,6.809999942779541,3.9099998474121094,3.879999876022339,3.2100000381469727,5.069999694824219,7.590000152587891,3.619999885559082,6.050000190734863,2.490000009536743,3.4699997901916504
@2 * walktimeshort_multiplier * df.terminal_time # (4),util_SHARED2PAY_Terminal_time,23.39484,22.12924,22.5732,22.1022,20.00016,21.4174,20.90168,18.589560000000002,21.84808,22.05276,22.08588,19.00068,18.32624,19.75252,20.46808,21.43404,19.56452
@ivt_cost_multiplier * df.ivot * costPerMile * (odt_skims['HOV2TOLL_DIST'] + dot_skims['HOV2TOLL_DIST']),util_SHARED2PAY_Operating_cost,0.7837215364373917,1.5674430728747835,1.4834728218604543,3.4707668161394296,4.534388883429419,5.17815986248149,8.145105506202398,5.905901259381617,3.330816675838426,3.106896117689366,2.7990054753597042,4.170518184979356,6.717613407797254,3.1908662018699685,5.374090726237803,2.1552341626401796,2.9669456437209085
@ivt_cost_multiplier * df.ivot * df.daily_parking_cost / costShareSr2 # (2),util_SHARED2PAY_Parking_cost,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_BTOLL'] + dot_skims['HOV2TOLL_BTOLL']) / costShareSr2,util_SHARED2PAY_Bridge_toll,0.03497937067335014,0.06995874134670028,0.06471183561538944,0.14166644953306004,0.180143751279563,0.20725275814361457,0.32618262833643646,0.2378597195363145,0.13816850542907638,0.13292160491009788,0.11630639908400332,0.1670264895574521,0.2789604819669714,0.13554505516958715,0.22824040191818723,0.09182084247944101,0.1259257375514599
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_VTOLL'] + dot_skims['HOV2TOLL_VTOLL']) / costShareSr2,util_SHARED2PAY_Value_toll,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
hov3_available == False,util_SHARED3FREE_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(odt_skims['HOV3_TIME'] + dot_skims['HOV3_TIME']),util_SHARED3FREE_In_vehicle_time,0.8799999952316284,1.809999942779541,1.6699999570846558,3.9700000286102295,5.010000228881836,5.880000114440918,9.680000305175781,6.809999942779541,3.9099998474121094,3.879999876022339,3.2100000381469727,5.069999694824219,7.590000152587891,3.619999885559082,6.050000190734863,2.490000009536743,3.4699997901916504
@2 * walktimeshort_multiplier * df.terminal_time # (5),util_SHARED3FREE_Terminal_time,23.39484,22.12924,22.5732,22.1022,20.00016,21.4174,20.90168,18.589560000000002,21.84808,22.05276,22.08588,19.00068,18.32624,19.75252,20.46808,21.43404,19.56452
@ivt_cost_multiplier * df.ivot * costPerMile * (odt_skims['HOV3_DIST'] + dot_skims['HOV3_DIST']),util_SHARED3FREE_Operating_cost,0.7837215364373917,1.5674430728747835,1.4834728218604543,3.4707668161394296,4.534388883429419,5.17815986248149,8.145105506202398,5.905901259381617,3.330816675838426,3.106896117689366,2.7990054753597042,4.170518184979356,6.717613407797254,3.1908662018699685,5.374090726237803,2.1552341626401796,2.9669456437209085
@ivt_cost_multiplier * df.ivot *  df.daily_parking_cost / costShareSr3,util_SHARED3FREE_Parking_cost,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV3_BTOLL'] + dot_skims['HOV3_BTOLL']) / costShareSr3,util_SHARED3FREE_Bridge_toll,0.0244855594713451,0.0489711189426902,0.04529828493077261,0.09916651467314204,0.1261006258956941,0.1450769307005302,0.22832783983550553,0.16650180367542014,0.09671795380035347,0.09304512343706853,0.08141447935880233,0.11691854269021648,0.19527233737687993,0.094881538618711,0.15976828134273108,0.0642745897356087,0.08814801628602192
hov3toll_available == False,util_SHARED3PAY_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(odt_skims['HOV3TOLL_TIME'] + dot_skims['HOV3TOLL_TIME']),util_SHARED3PAY_In_vehicle_time,0.8799999952316284,1.809999942779541,1.6699999570846558,3.9700000286102295,5.010000228881836,5.880000114440918,9.680000305175781,6.809999942779541,3.9099998474121094,3.879999876022339,3.2100000381469727,5.069999694824219,7.590000152587891,3.619999885559082,6.050000190734863,2.490000009536743,3.4699997901916504
@2 * walktimeshort_multiplier * df.terminal_time # (6),util_SHARED3PAY_Terminal_time,23.39484,22.12924,22.5732,22.1022,20.00016,21.4174,20.90168,18.589560000000002,21.84808,22.05276,22.08588,19.00068,18.32624,19.75252,20.46808,21.43404,19.56452
@ivt_cost_multiplier * df.ivot * costPerMile * (odt_skims['HOV3TOLL_DIST'] + dot_skims['HOV3TOLL_DIST']),util_SHARED3PAY_Operating_cost,0.7837215364373917,1.5674430728747835,1.4834728218604543,3.4707668161394296,4.534388883429419,5.17815986248149,8.145105506202398,5.905901259381617,3.330816675838426,3.106896117689366,2.7990054753597042,4.170518184979356,6.717613407797254,3.1908662018699685,5.374090726237803,2.1552341626401796,2.9669456437209085
@ivt_cost_multiplier * df.ivot * df.daily_parking_cost / costShareSr3,util_SHARED3PAY_Parking_cost,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV3TOLL_BTOLL'] + dot_skims['HOV3TOLL_BTOLL']) / costShareSr3,util_SHARED3PAY_Bridge_toll,0.0244855594713451,0.0489711189426902,0.04529828493077261,0.09916651467314204,0.1261006258956941,0.1450769307005302,0.22832783983550553,0.16650180367542014,0.09671795380035347,0.09304512343706853,0.08141447935880233,0.11691854269021648,0.19527233737687993,0.094881538618711,0.15976828134273108,0.0642745897356087,0.08814801628602192
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV3TOLL_VTOLL'] + dot_skims['HOV3TOLL_VTOLL']) / costShareSr3,util_SHARED3PAY_Value_toll,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@walktimeshort_multiplier * (od_skims['DISTWALK'].clip(upper=walkThresh) + od_skims.reverse('DISTWALK').clip(upper=walkThresh))*60/walkSpeed,util_WALK_Time_up_to_2_miles,11.199999809265137,22.399999618530273,21.19999885559082,49.20000076293945,64.79999542236328,73.5999984741211,116.0,82.4000015258789,45.20000076293945,41.599998474121094,40.0,59.60000228881836,93.60000610351562,45.60000228881836,76.80000305175781,30.799997329711914,41.599998474121094
@walktimelong_multiplier * ((od_skims['DISTWALK'] - walkThresh).clip(lower=0) + (od_skims.reverse('DISTWALK') - walkThresh).clip(lower=0))*60/walkSpeed,util_WALK_Time_beyond_2_of_a_miles,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@density_index_multiplier * df.density_index,util_WALK_Destination_zone_densityIndex,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024
@coef_topology_walk_multiplier * df.dest_topology,util_WALK_Topology,7.5,7.5,15.0,7.5,7.5,7.5,15.0,22.5,22.5,22.5,22.5,15.0,7.5,22.5,7.5,7.5,7.5
is_atwork_subtour & ~work_tour_is_bike,util_BIKE_Unavailable_if_didn't_bike_to_work,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@biketimeshort_multiplier * (od_skims['DISTBIKE'].clip(upper=bikeThresh) + od_skims.reverse('DISTBIKE').clip(upper=bikeThresh))*60/bikeSpeed,util_BIKE_Time_up_to_6_miles,5.599999904632568,11.199999809265137,10.59999942779541,24.600000381469727,32.39999771118164,36.79999923706055,58.0,41.20000076293945,22.600000381469727,20.799999237060547,20.0,29.80000114440918,46.80000305175781,22.80000114440918,38.400001525878906,15.399998664855957,20.799999237060547
@biketimelong_multiplier * ((od_skims['DISTBIKE']-bikeThresh).clip(lower=0) + (od_skims.reverse('DISTBIKE')-bikeThresh).clip(lower=0))*60/bikeSpeed,util_BIKE_Time_beyond_6_of_a_miles,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@density_index_multiplier * df.density_index # (2),util_BIKE_Destination_zone_densityIndex,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024
@coef_topology_bike_multiplier * df.dest_topology,util_BIKE_Topology,10.0,10.0,20.0,10.0,10.0,10.0,20.0,30.0,30.0,30.0,30.0,20.0,10.0,30.0,10.0,10.0,10.0
walk_local_available == False,util_WALK_LOC_Unavailable,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(odt_skims['WLK_LOC_WLK_TOTIVT']/100 + dot_skims['WLK_LOC_WLK_TOTIVT']/100),util_WALK_LOC_In_vehicle_time,0.0,1.0823999643325806,1.821199893951416,4.006199836730957,8.44320011138916,6.898699760437012,13.440799713134766,8.336599349975586,4.584799766540527,4.94890022277832,2.468400001525879,4.442899703979492,14.288200378417969,3.1884000301361084,4.634200096130371,2.2451000213623047,5.150199890136719
@short_i_wait_multiplier * ((odt_skims['WLK_LOC_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_LOC_WLK_IWAIT']/100).clip(upper=waitThresh)),util_WALK_LOC_Short_iwait_time,0.0,15.542999267578125,15.068399429321289,2.6283998489379883,17.217599868774414,6.7484002113342285,3.1083998680114746,2.9883999824523926,8.588399887084961,15.068399429321289,6.168399810791016,6.24839973449707,30.068401336669922,10.068400382995605,15.068399429321289,15.068399429321289,12.568399429321289
@long_i_wait_multiplier * ((odt_skims['WLK_LOC_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_LOC_WLK_IWAIT']/100-waitThresh).clip(0)),util_WALK_LOC_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xwait_multiplier * (odt_skims['WLK_LOC_WLK_XWAIT']/100 + dot_skims['WLK_LOC_WLK_XWAIT']/100),util_WALK_LOC_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xfers_wlk_multiplier * ((odt_skims['WLK_LOC_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_LOC_WLK_BOARDS']-1).clip(0)),util_WALK_LOC_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@2 * wacc_multiplier * df.origin_walk_time,util_WALK_LOC_Walk_access_time,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64
@2 * wegr_multiplier * df.destination_walk_time,util_WALK_LOC_Walk_egress_time,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64
@waux_multiplier * (odt_skims['WLK_LOC_WLK_WAUX']/100 + dot_skims['WLK_LOC_WLK_WAUX']/100),util_WALK_LOC_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['WLK_LOC_WLK_FAR'] + dot_skims['WLK_LOC_WLK_FAR']),util_WALK_LOC_Fare,0.0,95.79975000411018,46.522562302315485,46.522562302315485,145.07693770590487,46.522562302315485,46.522562302315485,46.522562302315485,46.522562302315485,46.522562302315485,46.522562302315485,46.522562302315485,46.522562302315485,46.522562302315485,46.522562302315485,46.522562302315485,46.522562302315485
@density_index_multiplier * df.dest_density_index,util_WALK_LOC_Destination_zone_densityIndex,-1.0357444166364618,-14.509597411397941,-1.5788466961071044,-7.350735881521539,-18.77007795654337,-20.90647545699996,-16.584077339399578,-9.003570118082479,-8.866357153113483,-0.9760466982080911,-3.2970660361388866,-11.382221515693024,-9.398941930736965,-4.098682783737195,-4.408193706153198,-5.202383997687261,-19.737321937321937
@coef_topology_trn_multiplier * df.dest_topology,util_WALK_LOC_Topology,2.0,2.0,4.0,2.0,2.0,2.0,4.0,6.0,6.0,6.0,6.0,4.0,2.0,6.0,2.0,2.0,2.0
@(df.age <= 10),util_WALK_LOC_Person_is_less_than_10_years_old,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
walk_lrf_available == False,util_WALK_LRF_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,0.0,1.0,1.0,1.0,1.0,1.0,0.0,1.0,0.0,1.0,1.0
@(odt_skims['WLK_LRF_WLK_TOTIVT']/100 + dot_skims['WLK_LRF_WLK_TOTIVT']/100),util_WALK_LRF_In_vehicle_time,0.0,1.0823999643325806,1.821199893951416,4.006199836730957,8.44320011138916,6.898699760437012,9.050600051879883,8.336599349975586,4.584799766540527,3.7189998626708984,2.468400001525879,4.0782999992370605,18.894201278686523,3.1884000301361084,14.948800086975098,1.9724998474121094,1.7812000513076782
@(ivt_lrt_multiplier-1)*(odt_skims['WLK_LRF_WLK_KEYIVT']/100 + dot_skims['WLK_LRF_WLK_KEYIVT']/100),util_WALK_LRF_In_vehicle_time_on_Light_Rail,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.9050599932670593,-0.0,-0.0,-0.0,-0.0,-0.0,-1.8894201517105103,-0.0,-1.4948800802230835,-0.0,-0.0
@(ivt_ferry_multiplier-ivt_lrt_multiplier)*(odt_skims['WLK_LRF_WLK_FERRYIVT']/100 + dot_skims['WLK_LRF_WLK_FERRYIVT']/100),util_WALK_LRF_In_vehicle_time_on_Ferry,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@short_i_wait_multiplier * ((odt_skims['WLK_LRF_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_LRF_WLK_IWAIT']/100).clip(upper=waitThresh)),util_WALK_LRF_Short_iwait_time,0.0,15.542999267578125,15.068399429321289,2.6283998489379883,17.217599868774414,6.7484002113342285,4.529200077056885,2.9883999824523926,8.588399887084961,9.048399925231934,6.168399810791016,5.468400001525879,10.22920036315918,10.068400382995605,14.549200057983398,12.568399429321289,11.968400001525879
@long_i_wait_multiplier * ((odt_skims['WLK_LRF_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_LRF_WLK_IWAIT']/100-waitThresh).clip(0)),util_WALK_LRF_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xwait_multiplier * (odt_skims['WLK_LRF_WLK_XWAIT']/100 + dot_skims['WLK_LRF_WLK_XWAIT']/100),util_WALK_LRF_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xfers_wlk_multiplier * ((odt_skims['WLK_LRF_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_LRF_WLK_BOARDS']-1).clip(0)),util_WALK_LRF_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@2 * wacc_multiplier * df.origin_walk_time # (2),util_WALK_LRF_Walk_access_time,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64
@2 * wegr_multiplier * df.destination_walk_time # (2),util_WALK_LRF_Walk_egress_time,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64
@waux_multiplier * (odt_skims['WLK_LRF_WLK_WAUX']/100 + dot_skims['WLK_LRF_WLK_WAUX']/100),util_WALK_LRF_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['WLK_LRF_WLK_FAR'] + dot_skims['WLK_LRF_WLK_FAR']),util_WALK_LRF_Fare,0.0,95.79975000411018,46.522562302315485,46.522562302315485,145.07693770590487,46.522562302315485,0.0,46.522562302315485,46.522562302315485,46.522562302315485,46.522562302315485,46.522562302315485,23.261281151157743,46.522562302315485,46.522562302315485,46.522562302315485,46.522562302315485
@density_index_multiplier * df.dest_density_index # (2),util_WALK_LRF_Destination_zone_densityIndex,-1.0357444166364618,-14.509597411397941,-1.5788466961071044,-7.350735881521539,-18.77007795654337,-20.90647545699996,-16.584077339399578,-9.003570118082479,-8.866357153113483,-0.9760466982080911,-3.2970660361388866,-11.382221515693024,-9.398941930736965,-4.098682783737195,-4.408193706153198,-5.202383997687261,-19.737321937321937
@coef_topology_trn_multiplier * df.dest_topology # (2),util_WALK_LRF_Topology,2.0,2.0,4.0,2.0,2.0,2.0,4.0,6.0,6.0,6.0,6.0,4.0,2.0,6.0,2.0,2.0,2.0
@(df.age <= 10) # (2),util_WALK_LRF_Person_is_less_than_10_years_old,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
walk_express_available == False,util_WALK_EXP_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(odt_skims['WLK_EXP_WLK_TOTIVT']/100 + dot_skims['WLK_EXP_WLK_TOTIVT']/100),util_WALK_EXP_In_vehicle_time,0.0,1.0823999643325806,1.821199893951416,4.006199836730957,8.44320011138916,6.898699760437012,9.050600051879883,8.336599349975586,4.584799766540527,3.7189998626708984,2.468400001525879,4.0782999992370605,12.682300567626953,3.1884000301361084,8.31659984588623,1.9724998474121094,1.7812000513076782
@(ivt_exp_multiplier - 1)*(odt_skims['WLK_EXP_WLK_KEYIVT']/100 + dot_skims['WLK_EXP_WLK_KEYIVT']/100),util_WALK_EXP_In_vehicle_time_on_Express_bus,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@short_i_wait_multiplier * ((odt_skims['WLK_EXP_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_EXP_WLK_IWAIT']/100).clip(upper=waitThresh)),util_WALK_EXP_Short_iwait_time,0.0,15.542999267578125,15.068399429321289,2.6283998489379883,17.217599868774414,6.7484002113342285,4.529200077056885,2.9883999824523926,8.588399887084961,9.048399925231934,6.168399810791016,5.468400001525879,22.568401336669922,10.068400382995605,14.808799743652344,12.568399429321289,11.968400001525879
@long_i_wait_multiplier * ((odt_skims['WLK_EXP_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_EXP_WLK_IWAIT']/100-waitThresh).clip(0)),util_WALK_EXP_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xwait_multiplier * (odt_skims['WLK_EXP_WLK_XWAIT']/100 + dot_skims['WLK_EXP_WLK_XWAIT']/100),util_WALK_EXP_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xfers_wlk_multiplier * ((odt_skims['WLK_EXP_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_EXP_WLK_BOARDS']-1).clip(0)),util_WALK_EXP_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@2 * wacc_multiplier * df.origin_walk_time # (3),util_WALK_EXP_Walk_access_time,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64
@2 * wegr_multiplier * df.destination_walk_time # (3),util_WALK_EXP_Walk_egress_time,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64
@waux_multiplier * (odt_skims['WLK_EXP_WLK_WAUX']/100 + dot_skims['WLK_EXP_WLK_WAUX']/100),util_WALK_EXP_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['WLK_EXP_WLK_FAR'] + dot_skims['WLK_EXP_WLK_FAR']),util_WALK_EXP_Fare,0.0,95.79975000411018,46.522562302315485,46.522562302315485,145.07693770590487,46.522562302315485,0.0,46.522562302315485,46.522562302315485,46.522562302315485,46.522562302315485,46.522562302315485,46.522562302315485,46.522562302315485,46.522562302315485,46.522562302315485,46.522562302315485
@density_index_multiplier * df.dest_density_index # (3),util_WALK_EXP_Destination_zone_densityIndex,-1.0357444166364618,-14.509597411397941,-1.5788466961071044,-7.350735881521539,-18.77007795654337,-20.90647545699996,-16.584077339399578,-9.003570118082479,-8.866357153113483,-0.9760466982080911,-3.2970660361388866,-11.382221515693024,-9.398941930736965,-4.098682783737195,-4.408193706153198,-5.202383997687261,-19.737321937321937
@coef_topology_trn_multiplier * df.dest_topology # (3),util_WALK_EXP_Topology,2.0,2.0,4.0,2.0,2.0,2.0,4.0,6.0,6.0,6.0,6.0,4.0,2.0,6.0,2.0,2.0,2.0
@(df.age <= 10) # (3),util_WALK_EXP_Person_is_less_than_10_years_old,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
walk_heavyrail_available == False,util_WALK_HVY_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,0.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(odt_skims['WLK_HVY_WLK_TOTIVT']/100 + dot_skims['WLK_HVY_WLK_TOTIVT']/100),util_WALK_HVY_In_vehicle_time,0.0,1.0823999643325806,1.821199893951416,4.006199836730957,8.44320011138916,6.898699760437012,6.5106000900268555,8.336599349975586,4.584799766540527,3.7189998626708984,2.468400001525879,4.0782999992370605,12.682300567626953,3.1884000301361084,8.31659984588623,1.9724998474121094,1.7812000513076782
@(ivt_hvy_multiplier-1) * (odt_skims['WLK_HVY_WLK_KEYIVT']/100 + dot_skims['WLK_HVY_WLK_KEYIVT']/100),util_WALK_HVY_In_vehicle_time_on_heavy_rail,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-1.3021200895309448,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@short_i_wait_multiplier * ((odt_skims['WLK_HVY_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_HVY_WLK_IWAIT']/100).clip(upper=waitThresh)),util_WALK_HVY_Short_iwait_time,0.0,15.542999267578125,15.068399429321289,2.6283998489379883,17.217599868774414,6.7484002113342285,8.38479995727539,2.9883999824523926,8.588399887084961,9.048399925231934,6.168399810791016,5.468400001525879,22.568401336669922,10.068400382995605,14.808799743652344,12.568399429321289,11.968400001525879
@long_i_wait_multiplier * ((odt_skims['WLK_HVY_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_HVY_WLK_IWAIT']/100-waitThresh).clip(0)),util_WALK_HVY_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xwait_multiplier * (odt_skims['WLK_HVY_WLK_XWAIT']/100 + dot_skims['WLK_HVY_WLK_XWAIT']/100),util_WALK_HVY_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xfers_wlk_multiplier * ((odt_skims['WLK_HVY_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_HVY_WLK_BOARDS']-1).clip(0)),util_WALK_HVY_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@2 * wacc_multiplier * df.origin_walk_time # (4),util_WALK_HVY_Walk_access_time,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64
@wegr_multiplier * 2 *df.destination_walk_time,util_WALK_HVY_Walk_egress_time,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64
@waux_multiplier * (odt_skims['WLK_HVY_WLK_WAUX']/100 + dot_skims['WLK_HVY_WLK_WAUX']/100),util_WALK_HVY_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['WLK_HVY_WLK_FAR'] + dot_skims['WLK_HVY_WLK_FAR']),util_WALK_HVY_Fare,0.0,95.79975000411018,46.522562302315485,46.522562302315485,145.07693770590487,46.522562302315485,39.482964059201954,46.522562302315485,46.522562302315485,46.522562302315485,46.522562302315485,46.522562302315485,46.522562302315485,46.522562302315485,46.522562302315485,46.522562302315485,46.522562302315485
@density_index_multiplier * df.dest_density_index # (4),util_WALK_HVY_Destination_zone_densityIndex,-1.0357444166364618,-14.509597411397941,-1.5788466961071044,-7.350735881521539,-18.77007795654337,-20.90647545699996,-16.584077339399578,-9.003570118082479,-8.866357153113483,-0.9760466982080911,-3.2970660361388866,-11.382221515693024,-9.398941930736965,-4.098682783737195,-4.408193706153198,-5.202383997687261,-19.737321937321937
@coef_topology_trn_multiplier * df.dest_topology # (4),util_WALK_HVY_Topology,2.0,2.0,4.0,2.0,2.0,2.0,4.0,6.0,6.0,6.0,6.0,4.0,2.0,6.0,2.0,2.0,2.0
@(df.age <= 10) # (4),util_WALK_HVY_Person_is_less_than_10_years_old,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
walk_commuter_available == False,util_WALK_COM_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(odt_skims['WLK_COM_WLK_TOTIVT']/100 + dot_skims['WLK_COM_WLK_TOTIVT']/100),util_WALK_COM_In_vehicle_time,0.0,1.0823999643325806,1.821199893951416,4.006199836730957,8.44320011138916,6.898699760437012,9.050600051879883,8.336599349975586,4.584799766540527,3.7189998626708984,2.468400001525879,4.0782999992370605,12.682300567626953,3.1884000301361084,8.31659984588623,1.9724998474121094,1.7812000513076782
@(ivt_com_multiplier - 1) * (odt_skims['WLK_COM_WLK_KEYIVT']/100 + dot_skims['WLK_COM_WLK_KEYIVT']/100),util_WALK_COM_In_vehicle_time_on_commuter_rail,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@short_i_wait_multiplier * ((odt_skims['WLK_COM_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_COM_WLK_IWAIT']/100).clip(upper=waitThresh)),util_WALK_COM_Short_iwait_time,0.0,15.542999267578125,15.068399429321289,2.6283998489379883,17.217599868774414,6.7484002113342285,4.529200077056885,2.9883999824523926,8.588399887084961,9.048399925231934,6.168399810791016,5.468400001525879,22.568401336669922,10.068400382995605,14.808799743652344,12.568399429321289,11.968400001525879
@long_i_wait_multiplier * ((odt_skims['WLK_COM_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_COM_WLK_IWAIT']/100-waitThresh).clip(0)),util_WALK_COM_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xwait_multiplier * (odt_skims['WLK_COM_WLK_XWAIT']/100 + dot_skims['WLK_COM_WLK_XWAIT']/100),util_WALK_COM_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xfers_wlk_multiplier * ((odt_skims['WLK_COM_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_COM_WLK_BOARDS']-1).clip(0)),util_WALK_COM_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@2 * wacc_multiplier * df.origin_walk_time # (5),util_WALK_COM_Walk_access_time,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64
@2 * wegr_multiplier * df.destination_walk_time # (4),util_WALK_COM_Walk_egress_time,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64
@waux_multiplier * (odt_skims['WLK_COM_WLK_WAUX']/100 + dot_skims['WLK_COM_WLK_WAUX']/100),util_WALK_COM_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['WLK_COM_WLK_FAR'] + dot_skims['WLK_COM_WLK_FAR']),util_WALK_COM_Fare,0.0,95.79975000411018,46.522562302315485,46.522562302315485,145.07693770590487,46.522562302315485,0.0,46.522562302315485,46.522562302315485,46.522562302315485,46.522562302315485,46.522562302315485,46.522562302315485,46.522562302315485,46.522562302315485,46.522562302315485,46.522562302315485
@density_index_multiplier * df.dest_density_index # (5),util_WALK_COM_Destination_zone_densityIndex,-1.0357444166364618,-14.509597411397941,-1.5788466961071044,-7.350735881521539,-18.77007795654337,-20.90647545699996,-16.584077339399578,-9.003570118082479,-8.866357153113483,-0.9760466982080911,-3.2970660361388866,-11.382221515693024,-9.398941930736965,-4.098682783737195,-4.408193706153198,-5.202383997687261,-19.737321937321937
@coef_topology_trn_multiplier * df.dest_topology # (5),util_WALK_COM_Topology,2.0,2.0,4.0,2.0,2.0,2.0,4.0,6.0,6.0,6.0,6.0,4.0,2.0,6.0,2.0,2.0,2.0
@(df.age < 10),util_WALK_COM_Person_is_less_than_10_years_old,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
drive_local_available == False,util_DRIVE_LOC_Unavailable,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
auto_ownership == 0 # (3),util_DRIVE_LOC_Unavailable_for_zero_auto_households,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (3),util_DRIVE_LOC_Unavailable_for_persons_less_than_16,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(odt_skims['DRV_LOC_WLK_TOTIVT']/100 + dot_skims['WLK_LOC_DRV_TOTIVT']/100),util_DRIVE_LOC_In_vehicle_time,0.0,1.2652000188827515,1.6398999691009521,1.4158000946044922,2.1022000312805176,4.825500011444092,9.43440055847168,3.063800096511841,1.6991000175476074,2.3083999156951904,2.0543999671936035,4.0782999992370605,8.637300491333008,2.17579984664917,3.866300106048584,1.2351999282836914,1.7812000513076782
@short_i_wait_multiplier * ((odt_skims['DRV_LOC_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_LOC_DRV_IWAIT']/100).clip(upper=waitThresh)),util_DRIVE_LOC_Short_iwait_time,0.0,9.068399429321289,4.508399963378906,3.9284000396728516,9.217599868774414,6.7484002113342285,3.1083998680114746,8.368400573730469,6.348400115966797,8.368400573730469,3.6083998680114746,5.468400001525879,18.068401336669922,10.068400382995605,15.068399429321289,12.568399429321289,11.968400001525879
@long_i_wait_multiplier * ((odt_skims['DRV_LOC_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_LOC_DRV_IWAIT']/100-waitThresh).clip(0)),util_DRIVE_LOC_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xwait_multiplier * (odt_skims['DRV_LOC_WLK_XWAIT']/100 + dot_skims['WLK_LOC_DRV_XWAIT']/100),util_DRIVE_LOC_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xfers_wlk_multiplier * ((odt_skims['DRV_LOC_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_LOC_DRV_BOARDS']-1).clip(0)),util_DRIVE_LOC_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@dtim_multiplier * (odt_skims['DRV_LOC_WLK_DTIM']/100 + dot_skims['WLK_LOC_DRV_DTIM']/100),util_DRIVE_LOC_Drive_time,0.0,3.179999828338623,3.119999885559082,3.240000009536743,5.519999980926514,3.9600000381469727,4.679999828338623,8.279999732971191,4.739999771118164,4.079999923706055,4.440000057220459,2.820000171661377,4.739999771118164,2.5799999237060547,1.8000000715255737,3.7200002670288086,1.9200000762939453
@wacc_multiplier * df.destination_walk_time,util_DRIVE_LOC_Walk_access_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@wegr_multiplier * df.destination_walk_time,util_DRIVE_LOC_Walk_egress_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@waux_multiplier * (odt_skims['DRV_LOC_WLK_WAUX']/100 + dot_skims['WLK_LOC_DRV_WAUX']/100),util_DRIVE_LOC_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * ((odt_skims['DRV_LOC_WLK_FAR'] + dot_skims['WLK_LOC_DRV_FAR']) + ((odt_skims['DRV_LOC_WLK_DDIST']/100+dot_skims['WLK_LOC_DRV_DDIST']/100) * costPerMile)),util_DRIVE_LOC_Fare_and_operating_cost,0.0,48.00603444954376,47.978045642680904,48.03402325640662,147.65202002328232,48.369907619760006,48.70578731286361,50.38519044863145,48.73377611972648,48.42588523348572,48.593827415162416,47.83809693811684,48.73377611972648,47.72613237016587,47.3622638701994,48.2579477220588,47.41824615417489
@dacc_ratio * ((odt_skims['DRV_LOC_WLK_DDIST']/100+ dot_skims['WLK_LOC_DRV_DDIST']/100)/ (od_skims['DIST']*2)),util_DRIVE_LOC_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@density_index_multiplier * df.dest_density_index # (6),util_DRIVE_LOC_Destination_zone_densityIndex,-1.0357444166364618,-14.509597411397941,-1.5788466961071044,-7.350735881521539,-18.77007795654337,-20.90647545699996,-16.584077339399578,-9.003570118082479,-8.866357153113483,-0.9760466982080911,-3.2970660361388866,-11.382221515693024,-9.398941930736965,-4.098682783737195,-4.408193706153198,-5.202383997687261,-19.737321937321937
@coef_topology_trn_multiplier * df.dest_topology # (6),util_DRIVE_LOC_Topology,2.0,2.0,4.0,2.0,2.0,2.0,4.0,6.0,6.0,6.0,6.0,4.0,2.0,6.0,2.0,2.0,2.0
@(df.age < 10) # (2),util_DRIVE_LOC_Person_is_less_than_10_years_old,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
drive_lrf_available == False,util_DRIVE_LRF_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,0.0,0.0,0.0,1.0,1.0
auto_ownership == 0 # (4),util_DRIVE_LRF_Unavailable_for_zero_auto_households,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (4),util_DRIVE_LRF_Unavailable_for_persons_less_than_16,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(odt_skims['DRV_LRF_WLK_TOTIVT']/100 + dot_skims['WLK_LRF_DRV_TOTIVT']/100),util_DRIVE_LRF_In_vehicle_time,0.0,56.546600341796875,74.25550079345703,62.4844970703125,58.03529739379883,55.042598724365234,56.05860137939453,65.97740173339844,72.0728988647461,74.25550079345703,76.17829895019531,80.91490173339844,62.06100082397461,85.66380310058594,92.46009826660156,68.26699829101562,59.26239776611328
@(ivt_lrt_multiplier-1) * (odt_skims['DRV_LRF_WLK_KEYIVT']/100 + dot_skims['WLK_LRF_DRV_KEYIVT']/100),util_DRIVE_LRF_In_vehicle_time_on_Light_Rail,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-4.879839897155762,-7.240139961242676,-3.7422401905059814,-0.0,-0.0
@(ivt_ferry_multiplier-ivt_lrt_multiplier)*(odt_skims['DRV_LRF_WLK_FERRYIVT']/100 + dot_skims['WLK_LRF_DRV_FERRYIVT']/100),util_DRIVE_LRF_In_vehicle_time_on_Ferry,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@short_i_wait_multiplier * ((odt_skims['DRV_LRF_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_LRF_DRV_IWAIT']/100).clip(upper=waitThresh)),util_DRIVE_LRF_Short_iwait_time,0.0,27.047000885009766,40.0,27.047000885009766,27.047000885009766,27.047000885009766,40.0,40.0,40.0,40.0,40.0,40.0,30.287399291992188,30.287399291992188,27.287399291992188,40.0,27.047000885009766
@long_i_wait_multiplier * ((odt_skims['DRV_LRF_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_LRF_DRV_IWAIT']/100-waitThresh).clip(0)),util_DRIVE_LRF_Long_iwait_time,0.0,5.023499488830566,10.012800216674805,5.006400108337402,5.006400108337402,5.006400108337402,10.012800216674805,10.012800216674805,10.012800216674805,10.012800216674805,10.012800216674805,10.012800216674805,5.143699645996094,5.143699645996094,5.143699645996094,10.029899597167969,5.023499488830566
@xwait_multiplier * (odt_skims['DRV_LRF_WLK_XWAIT']/100 + dot_skims['WLK_LRF_DRV_XWAIT']/100),util_DRIVE_LRF_transfer_wait_time,0.0,36.900001525878906,0.0,30.0,30.0,30.0,0.0,0.0,0.0,0.0,0.0,0.0,40.0,40.0,37.0,6.900000095367432,36.900001525878906
@xfers_drv_multiplier * ((odt_skims['DRV_LRF_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_LRF_DRV_BOARDS']-1).clip(0)),util_DRIVE_LRF_number_of_transfers,0.0,40.0,0.0,20.0,20.0,20.0,0.0,0.0,0.0,0.0,0.0,0.0,40.0,40.0,40.0,20.0,40.0
@dtim_multiplier * (odt_skims['DRV_LRF_WLK_DTIM']/100 + dot_skims['WLK_LRF_DRV_DTIM']/100),util_DRIVE_LRF_Drive_time,0.0,53.0,53.0,53.0,53.0,53.0,53.0,53.0,53.0,53.0,53.0,53.0,53.0,53.0,53.0,53.0,53.0
@wacc_multiplier * df.destination_walk_time # (2),util_DRIVE_LRF_Walk_access_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@wegr_multiplier * df.destination_walk_time # (2),util_DRIVE_LRF_Walk_egress_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@waux_multiplier * (odt_skims['DRV_LRF_WLK_WAUX']/100 + dot_skims['WLK_LRF_DRV_WAUX']/100),util_DRIVE_LRF_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,9.600000381469727,0.0,0.0
@ivt_cost_multiplier * df.ivot * ((odt_skims['DRV_LRF_WLK_FAR']+dot_skims['WLK_LRF_DRV_FAR']) + ((odt_skims['DRV_LRF_WLK_DDIST']/100+dot_skims['WLK_LRF_DRV_DDIST']/100) *costPerMile)),util_DRIVE_LRF_Fare_and_operating_cost,0.0,150.0037429752296,110.67381366044316,133.9350948116009,133.9350948116009,133.9350948116009,110.67381366044316,110.67381366044316,110.67381366044316,110.67381366044316,110.67381366044316,110.67381366044316,157.19638530325818,133.9350948116009,157.19638530325818,126.74246182407187,150.0037429752296
@dacc_ratio * ((odt_skims['DRV_LRF_WLK_DDIST']/100+ dot_skims['WLK_LRF_DRV_DDIST']/100)/ (od_skims['DIST']*2)),util_DRIVE_LRF_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@density_index_multiplier * df.dest_density_index # (7),util_DRIVE_LRF_Destination_zone_densityIndex,-1.0357444166364618,-14.509597411397941,-1.5788466961071044,-7.350735881521539,-18.77007795654337,-20.90647545699996,-16.584077339399578,-9.003570118082479,-8.866357153113483,-0.9760466982080911,-3.2970660361388866,-11.382221515693024,-9.398941930736965,-4.098682783737195,-4.408193706153198,-5.202383997687261,-19.737321937321937
@coef_topology_trn_multiplier * df.dest_topology # (7),util_DRIVE_LRF_Topology,2.0,2.0,4.0,2.0,2.0,2.0,4.0,6.0,6.0,6.0,6.0,4.0,2.0,6.0,2.0,2.0,2.0
@(df.age < 10) # (3),util_DRIVE_LRF_Person_is_less_than_10_years_old,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
drive_express_available == False,util_DRIVE_EXP_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
auto_ownership == 0 # (5),util_DRIVE_EXP_Unavailable_for_zero_auto_households,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (5),util_DRIVE_EXP_Unavailable_for_persons_less_than_16,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(odt_skims['DRV_EXP_WLK_TOTIVT']/100 + dot_skims['WLK_EXP_DRV_TOTIVT']/100),util_DRIVE_EXP_In_vehicle_time,0.0,56.546600341796875,74.25550079345703,62.4844970703125,58.03529739379883,55.042598724365234,56.05860137939453,65.97740173339844,72.0728988647461,74.25550079345703,76.17829895019531,80.91490173339844,62.06100082397461,76.17829895019531,91.12319946289062,68.26699829101562,59.26239776611328
@(ivt_exp_multiplier-1) * (odt_skims['DRV_EXP_WLK_KEYIVT']/100 + dot_skims['WLK_EXP_DRV_KEYIVT']/100),util_DRIVE_EXP_In_vehicle_time_on_Express_bus,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@short_i_wait_multiplier * ((odt_skims['DRV_EXP_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_EXP_DRV_IWAIT']/100).clip(upper=waitThresh)),util_DRIVE_EXP_Short_iwait_time,0.0,27.047000885009766,40.0,27.047000885009766,27.047000885009766,27.047000885009766,40.0,40.0,40.0,40.0,40.0,40.0,30.287399291992188,40.0,27.287399291992188,40.0,27.047000885009766
@long_i_wait_multiplier * ((odt_skims['DRV_EXP_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_EXP_DRV_IWAIT']/100-waitThresh).clip(0)),util_DRIVE_EXP_Long_iwait_time,0.0,5.023499488830566,10.012800216674805,5.006400108337402,5.006400108337402,5.006400108337402,10.012800216674805,10.012800216674805,10.012800216674805,10.012800216674805,10.012800216674805,10.012800216674805,5.143699645996094,10.012800216674805,5.143699645996094,10.029899597167969,5.023499488830566
@xwait_multiplier * (odt_skims['DRV_EXP_WLK_XWAIT']/100 + dot_skims['WLK_EXP_DRV_XWAIT']/100),util_DRIVE_EXP_transfer_wait_time,0.0,36.900001525878906,0.0,30.0,30.0,30.0,0.0,0.0,0.0,0.0,0.0,0.0,40.0,0.0,37.0,6.900000095367432,36.900001525878906
@xfers_drv_multiplier * ((odt_skims['DRV_EXP_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_EXP_DRV_BOARDS']-1).clip(0)),util_DRIVE_EXP_number_of_transfers,0.0,40.0,0.0,20.0,20.0,20.0,0.0,0.0,0.0,0.0,0.0,0.0,40.0,0.0,40.0,20.0,40.0
@dtim_multiplier * (odt_skims['DRV_EXP_WLK_DTIM']/100 + dot_skims['WLK_EXP_DRV_DTIM']/100),util_DRIVE_EXP_Drive_time,0.0,53.0,53.0,53.0,53.0,53.0,53.0,53.0,53.0,53.0,53.0,53.0,53.0,53.0,53.0,53.0,53.0
@wacc_multiplier * df.destination_walk_time # (3),util_DRIVE_EXP_Walk_access_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@wegr_multiplier * df.destination_walk_time # (3),util_DRIVE_EXP_Walk_egress_ime,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@waux_multiplier * (odt_skims['DRV_EXP_WLK_WAUX']/100 + dot_skims['WLK_EXP_DRV_WAUX']/100),util_DRIVE_EXP_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,9.600000381469727,0.0,0.0
@ivt_cost_multiplier * df.ivot * ((odt_skims['DRV_EXP_WLK_FAR']+dot_skims['WLK_EXP_DRV_FAR']) + ((odt_skims['DRV_EXP_WLK_DDIST']/100+dot_skims['WLK_EXP_DRV_DDIST']/100) *costPerMile)),util_DRIVE_EXP_Fare_and_operating_cost,0.0,150.0037429752296,110.67381366044316,133.9350948116009,133.9350948116009,133.9350948116009,110.67381366044316,110.67381366044316,110.67381366044316,110.67381366044316,110.67381366044316,110.67381366044316,157.19638530325818,110.67381366044316,157.19638530325818,126.74246182407187,150.0037429752296
@dacc_ratio * ((odt_skims['DRV_EXP_WLK_DDIST']/100+ dot_skims['WLK_EXP_DRV_DDIST']/100)/ (od_skims['DIST']*2)),util_DRIVE_EXP_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@density_index_multiplier * df.dest_density_index # (8),util_DRIVE_EXP_Destination_zone_densityIndex,-1.0357444166364618,-14.509597411397941,-1.5788466961071044,-7.350735881521539,-18.77007795654337,-20.90647545699996,-16.584077339399578,-9.003570118082479,-8.866357153113483,-0.9760466982080911,-3.2970660361388866,-11.382221515693024,-9.398941930736965,-4.098682783737195,-4.408193706153198,-5.202383997687261,-19.737321937321937
@coef_topology_trn_multiplier * df.dest_topology # (8),util_DRIVE_EXP_Topology,2.0,2.0,4.0,2.0,2.0,2.0,4.0,6.0,6.0,6.0,6.0,4.0,2.0,6.0,2.0,2.0,2.0
@(df.age < 10) # (4),util_DRIVE_EXP_Person_is_less_than_10_years_old,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
drive_heavyrail_available == False,util_DRIVE_HVY_Unavailable,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
auto_ownership == 0 # (6),util_DRIVE_HVY_Unavailable_for_zero_auto_households,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (6),util_DRIVE_HVY_Unavailable_for_persons_less_than_16,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(odt_skims['DRV_HVY_WLK_TOTIVT']/100 + dot_skims['WLK_HVY_DRV_TOTIVT']/100),util_DRIVE_HVY_In_vehicle_time,0.0,37.961002349853516,37.961002349853516,37.961002349853516,35.00559997558594,35.00559997558594,31.450401306152344,35.00559997558594,37.961002349853516,37.961002349853516,40.88520050048828,40.88520050048828,46.07099914550781,40.88520050048828,52.64039993286133,37.961002349853516,37.961002349853516
@(ivt_hvy_multiplier-1) * (odt_skims['DRV_HVY_WLK_KEYIVT']/100 + dot_skims['WLK_HVY_DRV_KEYIVT']/100),util_DRIVE_HVY_In_vehicle_time_on_heavy_rail,-0.0,-7.592200756072998,-7.592200756072998,-7.592200756072998,-7.001120090484619,-7.001120090484619,-6.290080547332764,-7.001120090484619,-7.592200756072998,-7.592200756072998,-8.177040100097656,-8.177040100097656,-7.592200756072998,-8.177040100097656,-8.177040100097656,-7.592200756072998,-7.592200756072998
@short_i_wait_multiplier * ((odt_skims['DRV_HVY_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_HVY_DRV_IWAIT']/100).clip(upper=waitThresh)),util_DRIVE_HVY_Short_iwait_time,0.0,8.38479995727539,8.38479995727539,8.38479995727539,8.38479995727539,8.38479995727539,8.38479995727539,8.38479995727539,8.38479995727539,8.38479995727539,8.38479995727539,8.38479995727539,7.69320011138916,8.38479995727539,12.173999786376953,8.38479995727539,8.38479995727539
@long_i_wait_multiplier * ((odt_skims['DRV_HVY_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_HVY_DRV_IWAIT']/100-waitThresh).clip(0)),util_DRIVE_HVY_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xwait_multiplier * (odt_skims['DRV_HVY_WLK_XWAIT']/100 + dot_skims['WLK_HVY_DRV_XWAIT']/100),util_DRIVE_HVY_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,11.260000228881836,0.0,10.760000228881836,0.0,0.0
@xfers_drv_multiplier * ((odt_skims['DRV_HVY_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_HVY_DRV_BOARDS']-1).clip(0)),util_DRIVE_HVY_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,40.0,0.0,40.0,0.0,0.0
@dtim_multiplier * (odt_skims['DRV_HVY_WLK_DTIM']/100 + dot_skims['WLK_HVY_DRV_DTIM']/100),util_DRIVE_HVY_Drive_time,0.0,54.439998626708984,54.439998626708984,54.439998626708984,54.439998626708984,54.439998626708984,54.439998626708984,54.439998626708984,54.439998626708984,54.439998626708984,54.439998626708984,54.439998626708984,54.439998626708984,54.439998626708984,54.439998626708984,54.439998626708984,54.439998626708984
@wacc_multiplier * df.destination_walk_time # (4),util_DRIVE_HVY_Walk_access_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@wegr_multiplier * df.destination_walk_time # (4),util_DRIVE_HVY_Walk_egress_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@waux_multiplier * (odt_skims['DRV_HVY_WLK_WAUX']/100 + dot_skims['WLK_HVY_DRV_WAUX']/100),util_DRIVE_HVY_Walk_other_time,0.0,24.0,24.0,24.0,24.0,24.0,24.0,24.0,24.0,24.0,24.0,24.0,32.79999923706055,24.0,28.0,24.0,24.0
@ivt_cost_multiplier * df.ivot * ((odt_skims['DRV_HVY_WLK_FAR']+dot_skims['WLK_HVY_DRV_FAR']) + ((odt_skims['DRV_HVY_WLK_DDIST']/100+dot_skims['WLK_HVY_DRV_DDIST']/100) *costPerMile)),util_DRIVE_HVY_Fare_and_operating_cost,0.0,115.47818366183587,115.47818366183587,115.47818366183587,115.47818366183587,115.47818366183587,115.47818366183587,115.47818366183587,115.47818366183587,115.47818366183587,115.47818366183587,115.47818366183587,138.73946481299362,115.47818366183587,156.95059939843946,115.47818366183587,115.47818366183587
@dacc_ratio * (odt_skims['DRV_HVY_WLK_DDIST']/100) / od_skims['DIST'],util_DRIVE_HVY_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@density_index_multiplier * df.dest_density_index # (9),util_DRIVE_HVY_Destination_zone_densityIndex,-1.0357444166364618,-14.509597411397941,-1.5788466961071044,-7.350735881521539,-18.77007795654337,-20.90647545699996,-16.584077339399578,-9.003570118082479,-8.866357153113483,-0.9760466982080911,-3.2970660361388866,-11.382221515693024,-9.398941930736965,-4.098682783737195,-4.408193706153198,-5.202383997687261,-19.737321937321937
@coef_topology_trn_multiplier * df.dest_topology # (9),util_DRIVE_HVY_Topology,2.0,2.0,4.0,2.0,2.0,2.0,4.0,6.0,6.0,6.0,6.0,4.0,2.0,6.0,2.0,2.0,2.0
@(df.age < 10) # (5),util_DRIVE_HVY_Person_is_less_than_10_years_old,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
drive_commuter_available == False,util_DRIVE_COM_Unavailable,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
auto_ownership == 0 # (7),util_DRIVE_COM_Unavailable_for_zero_auto_households,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (7),util_DRIVE_COM_Unavailable_for_persons_less_than_16,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(odt_skims['DRV_COM_WLK_TOTIVT']/100 + dot_skims['WLK_COM_DRV_TOTIVT']/100),util_DRIVE_COM_In_vehicle_time,0.0,62.04669952392578,66.84609985351562,58.91899871826172,57.178497314453125,57.178497314453125,67.68319702148438,53.83879852294922,53.83879852294922,56.11869812011719,63.1140022277832,59.53160095214844,44.208396911621094,72.50060272216797,69.50959777832031,65.70399475097656,66.75769805908203
@(ivt_com_multiplier - 1) * (odt_skims['DRV_COM_WLK_KEYIVT']/100 + dot_skims['WLK_COM_DRV_KEYIVT']/100),util_DRIVE_COM_In_vehicle_time_on_commuter_rail,-0.0,-13.262519836425781,-13.262519836425781,-13.262519836425781,-13.262519836425781,-13.262519836425781,-13.262519836425781,-13.262519836425781,-13.262519836425781,-13.262519836425781,-13.262519836425781,-13.262519836425781,-13.262519836425781,-13.262519836425781,-13.262519836425781,-13.262519836425781,-13.262519836425781
@short_i_wait_multiplier * ((odt_skims['DRV_COM_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_COM_DRV_IWAIT']/100).clip(upper=waitThresh)),util_DRIVE_COM_Short_iwait_time,0.0,23.046600341796875,25.207000732421875,23.046600341796875,23.046600341796875,23.046600341796875,29.046600341796875,23.046600341796875,23.046600341796875,35.046600341796875,25.207000732421875,25.207000732421875,40.0,25.207000732421875,37.2869987487793,35.046600341796875,23.046600341796875
@long_i_wait_multiplier * ((odt_skims['DRV_COM_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_COM_DRV_IWAIT']/100-waitThresh).clip(0)),util_DRIVE_COM_Long_iwait_time,0.0,15.023300170898438,15.023300170898438,15.023300170898438,15.023300170898438,15.023300170898438,15.023300170898438,15.023300170898438,15.023300170898438,15.023300170898438,15.023300170898438,15.143501281738281,30.012401580810547,15.143501281738281,15.143501281738281,15.023300170898438,15.023300170898438
@xwait_multiplier * (odt_skims['DRV_COM_WLK_XWAIT']/100 + dot_skims['WLK_COM_DRV_XWAIT']/100),util_DRIVE_COM_transfer_wait_time,0.0,53.0,53.0,53.0,53.0,53.0,59.0,53.0,53.0,53.0,53.0,54.76000213623047,0.0,54.76000213623047,67.0,65.0,53.0
@xfers_drv_multiplier * ((odt_skims['DRV_COM_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_COM_DRV_BOARDS']-1).clip(0)),util_DRIVE_COM_number_of_transfers,0.0,40.0,40.0,40.0,40.0,40.0,40.0,40.0,40.0,40.0,40.0,40.0,0.0,40.0,40.0,40.0,40.0
@dtim_multiplier * (odt_skims['DRV_COM_WLK_DTIM']/100 + dot_skims['WLK_COM_DRV_DTIM']/100),util_DRIVE_COM_Drive_time,0.0,70.4800033569336,70.4800033569336,70.4800033569336,70.4800033569336,70.4800033569336,70.4800033569336,70.4800033569336,70.4800033569336,70.4800033569336,70.4800033569336,70.4800033569336,70.4800033569336,70.4800033569336,70.4800033569336,70.4800033569336,70.4800033569336
@wacc_multiplier * df.destination_walk_time # (5),util_DRIVE_COM_Walk_access_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@wegr_multiplier * df.destination_walk_time # (5),util_DRIVE_COM_Walk_egress_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@waux_multiplier * (odt_skims['DRV_COM_WLK_WAUX']/100 + dot_skims['WLK_COM_DRV_WAUX']/100),util_DRIVE_COM_Walk_other_time,0.0,12.0,12.0,12.0,12.0,12.0,12.0,12.0,12.0,12.0,12.0,12.0,8.0,12.0,12.0,12.0,12.0
@ivt_cost_multiplier * df.ivot * ((odt_skims['DRV_COM_WLK_FAR']+dot_skims['WLK_COM_DRV_FAR']) + ((odt_skims['DRV_COM_WLK_DDIST']/100+dot_skims['WLK_COM_DRV_DDIST']/100) *costPerMile)),util_DRIVE_COM_Fare_and_operating_cost,0.0,168.3231246098107,145.0618527991525,168.3231246098107,168.3231246098107,168.3231246098107,168.3231246098107,168.3231246098107,168.3231246098107,168.3231246098107,145.0618527991525,183.93266854019285,145.0618527991525,160.67138738903512,183.93266854019285,168.3231246098107,168.3231246098107
@dacc_ratio * ((odt_skims['DRV_COM_WLK_DDIST']/100 + dot_skims['WLK_COM_DRV_DDIST']/100)/ (od_skims['DIST']*2)),util_DRIVE_COM_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@density_index_multiplier * df.dest_density_index # (10),util_DRIVE_COM_Destination_zone_densityIndex,-1.0357444166364618,-14.509597411397941,-1.5788466961071044,-7.350735881521539,-18.77007795654337,-20.90647545699996,-16.584077339399578,-9.003570118082479,-8.866357153113483,-0.9760466982080911,-3.2970660361388866,-11.382221515693024,-9.398941930736965,-4.098682783737195,-4.408193706153198,-5.202383997687261,-19.737321937321937
@coef_topology_trn_multiplier * df.dest_topology # (10),util_DRIVE_COM_Topology,2.0,2.0,4.0,2.0,2.0,2.0,4.0,6.0,6.0,6.0,6.0,4.0,2.0,6.0,2.0,2.0,2.0
@(df.age < 10) # (6),util_DRIVE_COM_Person_is_less_than_10_years_old,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(odt_skims['HOV2TOLL_TIME'] + dot_skims['HOV2TOLL_TIME']) # (2),util_Taxi_In_vehicle_time,0.8799999952316284,1.809999942779541,1.6699999570846558,3.9700000286102295,5.010000228881836,5.880000114440918,9.680000305175781,6.809999942779541,3.9099998474121094,3.879999876022339,3.2100000381469727,5.069999694824219,7.590000152587891,3.619999885559082,6.050000190734863,2.490000009536743,3.4699997901916504
@ridehail_wait_time_multiplier * df.totalWaitTaxi, util_Taxi_Wait_time,16.5,16.5,16.5,16.5,16.5,16.5,16.5,16.5,16.5,16.5,16.5,16.5,16.5,16.5,16.5,16.5,16.5
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_VTOLL'] + dot_skims['HOV2TOLL_VTOLL']),util_Taxi_Tolls,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_BTOLL'] + dot_skims['HOV2TOLL_BTOLL']),util_Taxi_Bridge_toll,0.061213898678362744,0.12242779735672549,0.11324571232693154,0.2479162866828551,0.31525156473923527,0.3626923267513255,0.5708195995887638,0.41625450918855034,0.24179488450088368,0.2326128085926713,0.20353619839700582,0.2922963567255412,0.48818084344219986,0.2372038465467775,0.39942070335682767,0.16068647433902178,0.2203700407150548
@ivt_cost_multiplier * df.ivot * (Taxi_baseFare * 2 + (odt_skims['HOV2TOLL_DIST'] + dot_skims['HOV2TOLL_DIST']) * Taxi_costPerMile +(odt_skims['HOV2TOLL_TIME'] + dot_skims['HOV2TOLL_TIME']) * Taxi_costPerMinute)*100,util_Taxi_Fare,78.5374303670155,89.8160981525696,88.54589967450572,117.05627127479683,132.0230717888931,141.45001473028222,184.5752032546922,152.02471533588158,115.20455372789714,112.34280710136753,107.44569265305566,127.53915039158753,163.42580204349352,113.0008598882853,144.17402547496621,98.24830708232079,109.95546298687316
@(odt_skims['HOV2TOLL_TIME'] + dot_skims['HOV2TOLL_TIME']) # (3),util_TNC_Single_In_vehicle_time,0.8799999952316284,1.809999942779541,1.6699999570846558,3.9700000286102295,5.010000228881836,5.880000114440918,9.680000305175781,6.809999942779541,3.9099998474121094,3.879999876022339,3.2100000381469727,5.069999694824219,7.590000152587891,3.619999885559082,6.050000190734863,2.490000009536743,3.4699997901916504
@ridehail_wait_time_multiplier * df.totalWaitSingleTNC,util_TNC_Single_Wait_time,9.000000000000002,9.000000000000002,9.000000000000002,9.000000000000002,9.000000000000002,9.000000000000002,9.000000000000002,9.000000000000002,9.000000000000002,9.000000000000002,9.000000000000002,9.000000000000002,9.000000000000002,9.000000000000002,9.000000000000002,9.000000000000002,9.000000000000002
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_VTOLL'] + dot_skims['HOV2TOLL_VTOLL']) # (2),util_TNC_Single_Tolls,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_BTOLL'] + odr_skims['HOV2TOLL_BTOLL'] + dot_skims['HOV2TOLL_BTOLL'] + dor_skims['HOV2TOLL_BTOLL']),util_TNC_Single_Bridge_toll,0.12242779735672549,0.24485559471345097,0.22649142465386307,0.4958325368793839,0.6305031294784705,0.725384653502651,1.1416391991775277,0.8325090183771007,0.48358976900176737,0.4652256171853426,0.40707239679401164,0.5845926769647561,0.9763616868843997,0.474407693093555,0.7988414067136553,0.32137294867804356,0.4407400814301096
"@ivt_cost_multiplier * df.ivot * np.maximum(TNC_single_baseFare * 2 + (odt_skims['HOV2TOLL_DIST'] + dot_skims['HOV2TOLL_DIST']) * TNC_single_costPerMile + (odt_skims['HOV2TOLL_TIME'] + dot_skims['HOV2TOLL_TIME']) * TNC_single_costPerMinute, TNC_single_costMinimum) * 100",util_TNC_Single_Cost,110.18501306026214,110.18501306026214,110.18501306026214,110.18501306026214,118.70905077608727,126.5857480904012,162.11735859818447,135.2934287838436,110.18501306026214,110.18501306026214,110.18501306026214,116.28344709981717,144.06078651260964,110.18501306026214,128.6348785544701,110.18501306026214,110.18501306026214
@(odt_skims['HOV2TOLL_TIME'] + dot_skims['HOV2TOLL_TIME']) * TNC_shared_IVTFactor,util_TNC_Shared_In_vehicle_time,1.3199999332427979,2.7149999141693115,2.504999876022339,5.954999923706055,7.515000343322754,8.819999694824219,14.520000457763672,10.21500015258789,5.864999771118164,5.819999694824219,4.815000057220459,7.604999542236328,11.385000228881836,5.429999828338623,9.075000762939453,3.7350001335144043,5.204999923706055
@ridehail_wait_time_multiplier * df.totalWaitSharedTNC,util_TNC_Shared_Wait_time,14.999999999999996,14.999999999999996,14.999999999999996,14.999999999999996,14.999999999999996,14.999999999999996,14.999999999999996,14.999999999999996,14.999999999999996,14.999999999999996,14.999999999999996,14.999999999999996,14.999999999999996,14.999999999999996,14.999999999999996,14.999999999999996,14.999999999999996
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_VTOLL'] + dot_skims['HOV2TOLL_VTOLL']) # (3),util_TNC_Shared_Tolls,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_BTOLL'] + odr_skims['HOV2TOLL_BTOLL'] + dot_skims['HOV2TOLL_BTOLL'] + dor_skims['HOV2TOLL_BTOLL']) # (2),util_TNC_Shared_Bridge_toll,0.12242779735672549,0.24485559471345097,0.22649142465386307,0.4958325368793839,0.6305031294784705,0.725384653502651,1.1416391991775277,0.8325090183771007,0.48358976900176737,0.4652256171853426,0.40707239679401164,0.5845926769647561,0.9763616868843997,0.474407693093555,0.7988414067136553,0.32137294867804356,0.4407400814301096
"@ivt_cost_multiplier * df.ivot * np.maximum(TNC_shared_baseFare * 2 + (odt_skims['HOV2TOLL_DIST'] + dot_skims['HOV2TOLL_DIST']) * TNC_shared_costPerMile + (odt_skims['HOV2TOLL_TIME'] + dot_skims['HOV2TOLL_TIME']) * TNC_shared_costPerMinute, TNC_shared_costMinimum) * 100",util_TNC_Shared_Cost,70.9530250128248,74.6472874441882,74.18971242585025,83.46820709998717,88.14189388046599,91.33878200874514,105.75159603584419,94.8708262333044,82.97084739143347,82.27607476571055,80.35855048066601,87.17930432231309,98.4166403974156,82.12150409290241,92.1667078337283,77.39120512851058,81.24308848956218
@(df.is_indiv & (df.auto_ownership == 0)),util_Walk_ASC_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),util_Walk_ASC_Auto_deficient,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(df.is_indiv & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)),util_Walk_ASC_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership == 0)) # (2),util_Bike_ASC_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (2),util_Bike_ASC_Auto_deficient,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(df.is_indiv & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (2),util_Bike_ASC_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (3),util_Shared_ride_2_ASC_Auto_deficient,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(df.is_indiv & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (3),util_Shared_ride_2_ASC_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership == 0)) # (4),util_Shared_ride_3p_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (4),util_Shared_ride_3p_Auto_deficient,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(df.is_indiv & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (4),util_Shared_ride_3p_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership == 0)) # (5),util_Walk_to_Transit_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (5),util_Walk_to_Transit_Auto_deficient,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(df.is_indiv & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (5),util_Walk_to_Transit_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (6),util_Drive_to_Transit_Auto_deficient,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(df.is_indiv & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (6),util_Drive_to_Transit_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership == 0)) # (7),util_Taxi_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (7),util_Taxi_Auto_deficient,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(df.is_indiv & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (7),util_Taxi_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership == 0)) # (8),util_TNC_Single_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (8),util_TNC_Single_Auto_deficient,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(df.is_indiv & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (8),util_TNC_Single_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership == 0)) # (9),util_TNC_Shared_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (9),util_TNC_Shared_Auto_deficient,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(df.is_indiv & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (9),util_TNC_Shared_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership == 0)),util_Joint_Walk_ASC_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),util_Joint_Walk_ASC_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)),util_Joint_Walk_ASC_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership == 0)) # (2),util_Joint_Bike_ASC_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (2),util_Joint_Bike_ASC_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (2),util_Joint_Bike_ASC_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership == 0)) # (4),util_Joint_Shared_ride_3p_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (4),util_Joint_Shared_ride_3p_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (4),util_Joint_Shared_ride_3p_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership == 0)) # (5),util_Joint_Walk_to_Transit_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (5),util_Joint_Walk_to_Transit_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (5),util_Joint_Walk_to_Transit_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (6),util_Joint_Drive_to_Transit_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (6),util_Joint_Drive_to_Transit_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership == 0)) # (7),util_Joint_Taxi_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (7),util_Joint_Taxi_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (7),util_Joint_Taxi_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership == 0)) # (8),util_Joint_TNC_Single_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (8),util_Joint_TNC_Single_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (8),util_Joint_TNC_Single_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership == 0)) # (9),util_Joint_TNC_Shared_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (9),util_Joint_TNC_Shared_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (9),util_Joint_TNC_Shared_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1,util_Local_bus_ASC,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(df.walk_ferry_available == False),util_Walk_to_Light_Rail_ASC,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(df.drive_ferry_available == False),util_Drive_to_Light_Rail_ASC,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@df.walk_ferry_available,util_Walk_to_Ferry_ASC,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.drive_ferry_available,util_Drive_to_Ferry_ASC,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1 # (2),util_Express_Bus_ASC,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
1 # (3),util_Heavy_Rail_ASC,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
1 # (4),util_Commuter_Rail,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@df.destination_in_cbd,util_Walk_to_Transit_dest_CBD,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@df.destination_in_cbd # (2),util_Drive_to_Transit_dest_CBD,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@drvtrn_distpen_0_multiplier * (1-od_skims['DIST']/drvtrn_distpen_max).clip(lower=0),util_Drive_to_Transit_distance_penalty,267.4800109863281,264.9599914550781,264.7799987792969,259.3800048828125,255.4199981689453,254.16000366210938,243.54000854492188,251.27999877929688,259.739990234375,259.9200134277344,259.55999755859375,255.05999755859375,248.22000122070312,259.739990234375,252.89999389648438,263.3399963378906,259.3800048828125
@od_skims.max('DISTWALK') > 3,util_Walk_not_available_for_long_distances,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@od_skims.max('DISTBIKE') > 8,util_Bike_not_available_for_long_distances,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
is_escort,util_Drive_alone_not_available_for_escort_tours,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
