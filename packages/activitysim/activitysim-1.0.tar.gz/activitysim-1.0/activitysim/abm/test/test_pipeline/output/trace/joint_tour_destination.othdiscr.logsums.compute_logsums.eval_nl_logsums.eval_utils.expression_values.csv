Expression,Label,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
sov_available == False,util_DRIVEALONEFREE_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
auto_ownership == 0,util_DRIVEALONEFREE_Unavailable_for_zero_auto_households,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16,util_DRIVEALONEFREE_Unavailable_for_persons_less_than_16,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
is_joint == True,util_DRIVEALONEFREE_Unavailable_for_joint_tours,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
is_atwork_subtour & ~work_tour_is_SOV,util_DRIVEALONEFREE_Unavailable_if_didn't_drive_to_work,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@odt_skims['SOV_TIME'] + dot_skims['SOV_TIME'],util_DRIVEALONEFREE_In_vehicle_time,3.7300000190734863,5.069999694824219,4.630000114440918,6.639999866485596,9.309999465942383,10.860000610351562,9.90999984741211,4.650000095367432,2.5399999618530273,3.3899998664855957,1.059999942779541,3.8399999141693115,8.479999542236328,5.840000152587891,8.010000228881836,6.779999732971191
@2 * walktimeshort_multiplier * df.terminal_time,util_DRIVEALONEFREE_Terminal_time,23.58256,23.39484,22.5732,22.1022,18.58592,20.90168,18.95208,21.84808,22.08588,22.360960000000002,19.00068,18.32624,15.96108,19.75252,20.46808,21.43404
@ivt_cost_multiplier * df.ivot * costPerMile * (odt_skims['SOV_DIST'] + dot_skims['SOV_DIST']),util_DRIVEALONEFREE_Operating_cost,3.330816675838426,4.170518184979356,3.8066474865292923,5.5140408665388065,7.6972650572391865,9.880489247939567,9.208727907159842,3.862627542649694,2.239204413654509,3.050916061568965,0.9516618716323231,3.3028266477782253,8.061136089356705,5.262130280329546,7.221433912880866,5.709971062960212
@ivt_cost_multiplier * df.ivot * df.daily_parking_cost,util_DRIVEALONEFREE_Parking_cost,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['SOV_BTOLL'] + dot_skims['SOV_BTOLL']),util_DRIVEALONEFREE_Bridge_toll,0.24026455675934477,0.2922963567255412,0.266280456742443,0.38258686103877865,0.5509250653013107,0.7008991177474181,0.6519280462369521,0.27852324286322266,0.1698685684903973,0.22802177063856513,0.0703959837081567,0.2647501107577409,0.5784713295122742,0.38105651505407656,0.5279698755307798,0.3963600113874235
sovtoll_available == False,util_DRIVEALONEPAY_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
auto_ownership == 0 # (2),util_DRIVEALONEPAY_Unavailable_for_zero_auto_households,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (2),util_DRIVEALONEPAY_Unavailable_for_persons_less_than_16,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
is_joint == True # (2),util_DRIVEALONEPAY_Unavailable_for_joint_tours,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
is_atwork_subtour & ~work_tour_is_SOV # (2),util_DRIVEALONEPAY_Unavailable_if_didn't_drive_to_work,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@odt_skims['SOVTOLL_TIME'] + dot_skims['SOVTOLL_TIME'],util_DRIVEALONEPAY_In_vehicle_time,3.7300000190734863,5.069999694824219,4.630000114440918,6.639999866485596,9.309999465942383,10.860000610351562,9.90999984741211,4.650000095367432,2.5399999618530273,3.3899998664855957,1.059999942779541,3.8399999141693115,8.479999542236328,5.840000152587891,8.010000228881836,6.779999732971191
@2 * walktimeshort_multiplier * df.terminal_time # (2),util_DRIVEALONEPAY_Terminal_time,23.58256,23.39484,22.5732,22.1022,18.58592,20.90168,18.95208,21.84808,22.08588,22.360960000000002,19.00068,18.32624,15.96108,19.75252,20.46808,21.43404
@ivt_cost_multiplier * df.ivot * costPerMile * (odt_skims['SOVTOLL_DIST'] + dot_skims['SOVTOLL_DIST']),util_DRIVEALONEPAY_Operating_cost,3.330816675838426,4.170518184979356,3.8066474865292923,5.5140408665388065,7.6972650572391865,9.880489247939567,9.208727907159842,3.862627542649694,2.239204413654509,3.050916061568965,0.9516618716323231,3.3028266477782253,8.061136089356705,5.262130280329546,7.221433912880866,5.709971062960212
@ivt_cost_multiplier * df.ivot * df.daily_parking_cost # (2),util_DRIVEALONEPAY_Parking_cost,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['SOVTOLL_BTOLL'] + dot_skims['SOVTOLL_BTOLL']),util_DRIVEALONEPAY_Bridge_toll,0.24026455675934477,0.2922963567255412,0.266280456742443,0.38258686103877865,0.5509250653013107,0.7008991177474181,0.6519280462369521,0.27852324286322266,0.1698685684903973,0.22802177063856513,0.0703959837081567,0.2647501107577409,0.5784713295122742,0.38105651505407656,0.5279698755307798,0.3963600113874235
@ivt_cost_multiplier * df.ivot * (odt_skims['SOVTOLL_VTOLL'] + dot_skims['SOVTOLL_VTOLL']),util_DRIVEALONEPAY_Value_toll,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
hov2_available == False,util_SHARED2FREE_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
is_joint & (number_of_participants > 2),util_SHARED2FREE_Unavailable_based_on_party_size,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(odt_skims['HOV2_TIME'] + dot_skims['HOV2_TIME']),util_SHARED2FREE_In_vehicle_time,3.7300000190734863,5.069999694824219,4.630000114440918,6.639999866485596,9.309999465942383,10.860000610351562,9.90999984741211,4.650000095367432,2.5399999618530273,3.3899998664855957,1.059999942779541,3.8399999141693115,8.479999542236328,5.840000152587891,8.010000228881836,6.779999732971191
@2 * walktimeshort_multiplier * df.terminal_time # (3),util_SHARED2FREE_Terminal_time,23.58256,23.39484,22.5732,22.1022,18.58592,20.90168,18.95208,21.84808,22.08588,22.360960000000002,19.00068,18.32624,15.96108,19.75252,20.46808,21.43404
@ivt_cost_multiplier * df.ivot * costPerMile * (odt_skims['HOV2_DIST'] + dot_skims['HOV2_DIST']),util_SHARED2FREE_Operating_cost,3.330816675838426,4.170518184979356,3.8066474865292923,5.5140408665388065,7.6972650572391865,9.880489247939567,9.208727907159842,3.862627542649694,2.239204413654509,3.050916061568965,0.9516618716323231,3.3028266477782253,8.061136089356705,5.262130280329546,7.221433912880866,5.709971062960212
@ivt_cost_multiplier * df.ivot * df.daily_parking_cost / costShareSr2,util_SHARED2FREE_Parking_cost,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2_BTOLL'] + dot_skims['HOV2_BTOLL']) / costShareSr2,util_SHARED2FREE_Bridge_toll,0.1372940324339113,0.1670264895574521,0.15216026099568172,0.21862106345073065,0.3148143230293204,0.4005137815699532,0.3725303121354012,0.15915613877898438,0.09706775342308417,0.13029815465060865,0.04022627640466097,0.15128577757585196,0.3305550454355853,0.2177465800309009,0.30169707173187416,0.2264914350785277
@(df.age >= 16),util_SHARED2FREE_Person_is_16_years_old_or_older,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
hov2toll_available == False,util_SHARED2PAY_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
is_joint & (number_of_participants > 2) # (2),util_SHARED2PAY_Unavailable_based_on_party_size,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(odt_skims['HOV2TOLL_TIME'] + dot_skims['HOV2TOLL_TIME']),util_SHARED2PAY_In_vehicle_time,3.7300000190734863,5.069999694824219,4.630000114440918,6.639999866485596,9.309999465942383,10.860000610351562,9.90999984741211,4.650000095367432,2.5399999618530273,3.3899998664855957,1.059999942779541,3.8399999141693115,8.479999542236328,5.840000152587891,8.010000228881836,6.779999732971191
@2 * walktimeshort_multiplier * df.terminal_time # (4),util_SHARED2PAY_Terminal_time,23.58256,23.39484,22.5732,22.1022,18.58592,20.90168,18.95208,21.84808,22.08588,22.360960000000002,19.00068,18.32624,15.96108,19.75252,20.46808,21.43404
@ivt_cost_multiplier * df.ivot * costPerMile * (odt_skims['HOV2TOLL_DIST'] + dot_skims['HOV2TOLL_DIST']),util_SHARED2PAY_Operating_cost,3.330816675838426,4.170518184979356,3.8066474865292923,5.5140408665388065,7.6972650572391865,9.880489247939567,9.208727907159842,3.862627542649694,2.239204413654509,3.050916061568965,0.9516618716323231,3.3028266477782253,8.061136089356705,5.262130280329546,7.221433912880866,5.709971062960212
@ivt_cost_multiplier * df.ivot * df.daily_parking_cost / costShareSr2 # (2),util_SHARED2PAY_Parking_cost,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_BTOLL'] + dot_skims['HOV2TOLL_BTOLL']) / costShareSr2,util_SHARED2PAY_Bridge_toll,0.1372940324339113,0.1670264895574521,0.15216026099568172,0.21862106345073065,0.3148143230293204,0.4005137815699532,0.3725303121354012,0.15915613877898438,0.09706775342308417,0.13029815465060865,0.04022627640466097,0.15128577757585196,0.3305550454355853,0.2177465800309009,0.30169707173187416,0.2264914350785277
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_VTOLL'] + dot_skims['HOV2TOLL_VTOLL']) / costShareSr2,util_SHARED2PAY_Value_toll,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.age >= 16) # (2),util_SHARED2PAY_Person_is_16_years_old_or_older,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
hov3_available == False,util_SHARED3FREE_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(odt_skims['HOV3_TIME'] + dot_skims['HOV3_TIME']),util_SHARED3FREE_In_vehicle_time,3.7300000190734863,5.069999694824219,4.630000114440918,6.639999866485596,9.309999465942383,10.860000610351562,9.90999984741211,4.650000095367432,2.5399999618530273,3.3899998664855957,1.059999942779541,3.8399999141693115,8.479999542236328,5.840000152587891,8.010000228881836,6.779999732971191
@2 * walktimeshort_multiplier * df.terminal_time # (5),util_SHARED3FREE_Terminal_time,23.58256,23.39484,22.5732,22.1022,18.58592,20.90168,18.95208,21.84808,22.08588,22.360960000000002,19.00068,18.32624,15.96108,19.75252,20.46808,21.43404
@ivt_cost_multiplier * df.ivot * costPerMile * (odt_skims['HOV3_DIST'] + dot_skims['HOV3_DIST']),util_SHARED3FREE_Operating_cost,3.330816675838426,4.170518184979356,3.8066474865292923,5.5140408665388065,7.6972650572391865,9.880489247939567,9.208727907159842,3.862627542649694,2.239204413654509,3.050916061568965,0.9516618716323231,3.3028266477782253,8.061136089356705,5.262130280329546,7.221433912880866,5.709971062960212
@ivt_cost_multiplier * df.ivot *  df.daily_parking_cost / costShareSr3,util_SHARED3FREE_Parking_cost,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV3_BTOLL'] + dot_skims['HOV3_BTOLL']) / costShareSr3,util_SHARED3FREE_Bridge_toll,0.09610582270373791,0.11691854269021648,0.1065121826969772,0.15303474441551146,0.22037002612052428,0.2803596470989672,0.26077121849478085,0.11140929714528906,0.06794742739615892,0.09120870825542605,0.028158393483262677,0.10590004430309637,0.23138853180490968,0.15242260602163063,0.2111879502123119,0.1585440045549694
@(df.age >= 16) # (3),util_SHARED3FREE_Person_is_16_years_old_or_older,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
hov3toll_available == False,util_SHARED3PAY_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(odt_skims['HOV3TOLL_TIME'] + dot_skims['HOV3TOLL_TIME']),util_SHARED3PAY_In_vehicle_time,3.7300000190734863,5.069999694824219,4.630000114440918,6.639999866485596,9.309999465942383,10.860000610351562,9.90999984741211,4.650000095367432,2.5399999618530273,3.3899998664855957,1.059999942779541,3.8399999141693115,8.479999542236328,5.840000152587891,8.010000228881836,6.779999732971191
@2 * walktimeshort_multiplier * df.terminal_time # (6),util_SHARED3PAY_Terminal_time,23.58256,23.39484,22.5732,22.1022,18.58592,20.90168,18.95208,21.84808,22.08588,22.360960000000002,19.00068,18.32624,15.96108,19.75252,20.46808,21.43404
@ivt_cost_multiplier * df.ivot * costPerMile * (odt_skims['HOV3TOLL_DIST'] + dot_skims['HOV3TOLL_DIST']),util_SHARED3PAY_Operating_cost,3.330816675838426,4.170518184979356,3.8066474865292923,5.5140408665388065,7.6972650572391865,9.880489247939567,9.208727907159842,3.862627542649694,2.239204413654509,3.050916061568965,0.9516618716323231,3.3028266477782253,8.061136089356705,5.262130280329546,7.221433912880866,5.709971062960212
@ivt_cost_multiplier * df.ivot * df.daily_parking_cost / costShareSr3,util_SHARED3PAY_Parking_cost,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV3TOLL_BTOLL'] + dot_skims['HOV3TOLL_BTOLL']) / costShareSr3,util_SHARED3PAY_Bridge_toll,0.09610582270373791,0.11691854269021648,0.1065121826969772,0.15303474441551146,0.22037002612052428,0.2803596470989672,0.26077121849478085,0.11140929714528906,0.06794742739615892,0.09120870825542605,0.028158393483262677,0.10590004430309637,0.23138853180490968,0.15242260602163063,0.2111879502123119,0.1585440045549694
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV3TOLL_VTOLL'] + dot_skims['HOV3TOLL_VTOLL']) / costShareSr3,util_SHARED3PAY_Value_toll,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.age >= 16) # (4),util_SHARED3PAY_Person_is_16_years_old_or_older,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@walktimeshort_multiplier * (od_skims['DISTWALK'].clip(upper=walkThresh) + od_skims.reverse('DISTWALK').clip(upper=walkThresh))*60/walkSpeed,util_WALK_Time_up_to_2_miles,47.60000228881836,59.60000228881836,54.39999771118164,77.20000457763672,109.20000457763672,120.0,120.0,53.60000228881836,32.0,43.60000228881836,13.59999942779541,47.20000076293945,110.0,75.20000457763672,103.19998931884766,81.5999984741211
@walktimelong_multiplier * ((od_skims['DISTWALK'] - walkThresh).clip(lower=0) + (od_skims.reverse('DISTWALK') - walkThresh).clip(lower=0))*60/walkSpeed,util_WALK_Time_beyond_2_of_a_miles,0.0,0.0,0.0,0.0,0.0,102.0,42.00000762939453,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@density_index_multiplier * df.density_index,util_WALK_Destination_zone_densityIndex,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024
@coef_topology_walk_multiplier * df.dest_topology,util_WALK_Topology,45.0,15.0,30.0,15.0,30.0,30.0,45.0,45.0,45.0,45.0,30.0,15.0,45.0,45.0,15.0,15.0
is_atwork_subtour & ~work_tour_is_bike,util_BIKE_Unavailable_if_didn't_bike_to_work,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@biketimeshort_multiplier * (od_skims['DISTBIKE'].clip(upper=bikeThresh) + od_skims.reverse('DISTBIKE').clip(upper=bikeThresh))*60/bikeSpeed,util_BIKE_Time_up_to_6_miles,23.80000114440918,29.80000114440918,27.19999885559082,38.60000228881836,54.60000228881836,70.20000457763672,64.20000457763672,26.80000114440918,16.0,21.80000114440918,6.799999713897705,23.600000381469727,55.0,37.60000228881836,51.59999465942383,40.79999923706055
@biketimelong_multiplier * ((od_skims['DISTBIKE']-bikeThresh).clip(lower=0) + (od_skims.reverse('DISTBIKE')-bikeThresh).clip(lower=0))*60/bikeSpeed,util_BIKE_Time_beyond_6_of_a_miles,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@density_index_multiplier * df.density_index # (2),util_BIKE_Destination_zone_densityIndex,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024
@coef_topology_bike_multiplier * df.dest_topology,util_BIKE_Topology,60.0,20.0,40.0,20.0,40.0,40.0,60.0,60.0,60.0,60.0,40.0,20.0,60.0,60.0,20.0,20.0
walk_local_available == False,util_WALK_LOC_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0
@(odt_skims['WLK_LOC_WLK_TOTIVT']/100 + dot_skims['WLK_LOC_WLK_TOTIVT']/100),util_WALK_LOC_In_vehicle_time,4.0782999992370605,4.442899703979492,5.140900135040283,8.449199676513672,14.506599426269531,17.88359832763672,19.607200622558594,4.510900020599365,1.2451999187469482,1.2451999187469482,0.0,5.267600059509277,13.857500076293945,3.420999765396118,13.654899597167969,11.265800476074219
@short_i_wait_multiplier * ((odt_skims['WLK_LOC_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_LOC_WLK_IWAIT']/100).clip(upper=waitThresh)),util_WALK_LOC_Short_iwait_time,5.468400001525879,6.24839973449707,4.628399848937988,3.968400001525879,7.528400421142578,9.648399353027344,8.488399505615234,8.368400573730469,6.24839973449707,6.24839973449707,0.0,30.068401336669922,19.308401107788086,6.24839973449707,15.068399429321289,15.068399429321289
@long_i_wait_multiplier * ((odt_skims['WLK_LOC_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_LOC_WLK_IWAIT']/100-waitThresh).clip(0)),util_WALK_LOC_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xwait_multiplier * (odt_skims['WLK_LOC_WLK_XWAIT']/100 + dot_skims['WLK_LOC_WLK_XWAIT']/100),util_WALK_LOC_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xfers_wlk_multiplier * ((odt_skims['WLK_LOC_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_LOC_WLK_BOARDS']-1).clip(0)),util_WALK_LOC_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@2 * wacc_multiplier * df.origin_walk_time,util_WALK_LOC_Walk_access_time,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64
@2 * wegr_multiplier * df.destination_walk_time,util_WALK_LOC_Walk_egress_time,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64
@waux_multiplier * (odt_skims['WLK_LOC_WLK_WAUX']/100 + dot_skims['WLK_LOC_WLK_WAUX']/100),util_WALK_LOC_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['WLK_LOC_WLK_FAR'] + dot_skims['WLK_LOC_WLK_FAR']),util_WALK_LOC_Fare,46.522562302315485,46.522562302315485,46.522562302315485,46.522562302315485,46.522562302315485,46.522562302315485,46.522562302315485,46.522562302315485,46.522562302315485,46.522562302315485,0.0,46.522562302315485,46.522562302315485,46.522562302315485,46.522562302315485,46.522562302315485
@density_index_multiplier * df.dest_density_index,util_WALK_LOC_Destination_zone_densityIndex,-0.5740334015494811,-1.0357444166364618,-1.5788466961071044,-7.350735881521539,-18.71741134436044,-16.584077339399578,-15.932721761187745,-8.866357153113483,-3.2970660361388866,-3.226478842909952,-11.382221515693024,-9.398941930736965,-5.121658150766901,-4.098682783737195,-4.408193706153198,-5.202383997687261
@coef_topology_trn_multiplier * df.dest_topology,util_WALK_LOC_Topology,6.6000000000000005,2.2,4.4,2.2,4.4,4.4,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,4.4,2.2,6.6000000000000005,6.6000000000000005,2.2,2.2
walk_lrf_available == False,util_WALK_LRF_Unavailable,1.0,1.0,1.0,1.0,1.0,0.0,1.0,1.0,1.0,1.0,1.0,0.0,1.0,1.0,0.0,1.0
@(odt_skims['WLK_LRF_WLK_TOTIVT']/100 + dot_skims['WLK_LRF_WLK_TOTIVT']/100),util_WALK_LRF_In_vehicle_time,4.0782999992370605,4.0782999992370605,5.140900135040283,8.449199676513672,14.506599426269531,13.336600303649902,16.884599685668945,4.510900020599365,1.2451999187469482,1.2451999187469482,0.0,5.9253997802734375,13.857500076293945,3.420999765396118,14.948800086975098,11.265800476074219
@(ivt_lrt_multiplier-1)*(odt_skims['WLK_LRF_WLK_KEYIVT']/100 + dot_skims['WLK_LRF_WLK_KEYIVT']/100),util_WALK_LRF_In_vehicle_time_on_Light_Rail,-0.0,-0.0,-0.0,-0.0,-0.0,-1.3336600065231323,-0.0,-0.0,-0.0,-0.0,-0.0,-0.5925399661064148,-0.0,-0.0,-1.4948800802230835,-0.0
@(ivt_ferry_multiplier-ivt_lrt_multiplier)*(odt_skims['WLK_LRF_WLK_FERRYIVT']/100 + dot_skims['WLK_LRF_WLK_FERRYIVT']/100),util_WALK_LRF_In_vehicle_time_on_Ferry,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@short_i_wait_multiplier * ((odt_skims['WLK_LRF_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_LRF_WLK_IWAIT']/100).clip(upper=waitThresh)),util_WALK_LRF_Short_iwait_time,5.468400001525879,5.468400001525879,4.628399848937988,3.968400001525879,7.528400421142578,4.529200077056885,6.968400001525879,8.368400573730469,6.24839973449707,6.24839973449707,0.0,10.22920036315918,19.308401107788086,6.24839973449707,14.549200057983398,15.068399429321289
@long_i_wait_multiplier * ((odt_skims['WLK_LRF_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_LRF_WLK_IWAIT']/100-waitThresh).clip(0)),util_WALK_LRF_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xwait_multiplier * (odt_skims['WLK_LRF_WLK_XWAIT']/100 + dot_skims['WLK_LRF_WLK_XWAIT']/100),util_WALK_LRF_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xfers_wlk_multiplier * ((odt_skims['WLK_LRF_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_LRF_WLK_BOARDS']-1).clip(0)),util_WALK_LRF_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@2 * wacc_multiplier * df.origin_walk_time # (2),util_WALK_LRF_Walk_access_time,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64
@2 * wegr_multiplier * df.destination_walk_time # (2),util_WALK_LRF_Walk_egress_time,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64
@waux_multiplier * (odt_skims['WLK_LRF_WLK_WAUX']/100 + dot_skims['WLK_LRF_WLK_WAUX']/100),util_WALK_LRF_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['WLK_LRF_WLK_FAR'] + dot_skims['WLK_LRF_WLK_FAR']),util_WALK_LRF_Fare,46.522562302315485,46.522562302315485,46.522562302315485,46.522562302315485,46.522562302315485,0.0,46.522562302315485,46.522562302315485,46.522562302315485,46.522562302315485,0.0,46.522562302315485,46.522562302315485,46.522562302315485,46.522562302315485,46.522562302315485
@density_index_multiplier * df.dest_density_index # (2),util_WALK_LRF_Destination_zone_densityIndex,-0.5740334015494811,-1.0357444166364618,-1.5788466961071044,-7.350735881521539,-18.71741134436044,-16.584077339399578,-15.932721761187745,-8.866357153113483,-3.2970660361388866,-3.226478842909952,-11.382221515693024,-9.398941930736965,-5.121658150766901,-4.098682783737195,-4.408193706153198,-5.202383997687261
@coef_topology_trn_multiplier * df.dest_topology # (2),util_WALK_LRF_Topology,6.6000000000000005,2.2,4.4,2.2,4.4,4.4,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,4.4,2.2,6.6000000000000005,6.6000000000000005,2.2,2.2
walk_express_available == False,util_WALK_EXP_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(odt_skims['WLK_EXP_WLK_TOTIVT']/100 + dot_skims['WLK_EXP_WLK_TOTIVT']/100),util_WALK_EXP_In_vehicle_time,4.0782999992370605,4.0782999992370605,5.140900135040283,8.449199676513672,14.506599426269531,17.88359832763672,16.884599685668945,4.510900020599365,1.2451999187469482,1.2451999187469482,0.0,5.9253997802734375,13.857500076293945,3.420999765396118,6.744799613952637,11.265800476074219
@(ivt_exp_multiplier - 1)*(odt_skims['WLK_EXP_WLK_KEYIVT']/100 + dot_skims['WLK_EXP_WLK_KEYIVT']/100),util_WALK_EXP_In_vehicle_time_on_Express_bus,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@short_i_wait_multiplier * ((odt_skims['WLK_EXP_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_EXP_WLK_IWAIT']/100).clip(upper=waitThresh)),util_WALK_EXP_Short_iwait_time,5.468400001525879,5.468400001525879,4.628399848937988,3.968400001525879,7.528400421142578,9.648399353027344,6.968400001525879,8.368400573730469,6.24839973449707,6.24839973449707,0.0,10.22920036315918,19.308401107788086,6.24839973449707,14.549200057983398,15.068399429321289
@long_i_wait_multiplier * ((odt_skims['WLK_EXP_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_EXP_WLK_IWAIT']/100-waitThresh).clip(0)),util_WALK_EXP_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xwait_multiplier * (odt_skims['WLK_EXP_WLK_XWAIT']/100 + dot_skims['WLK_EXP_WLK_XWAIT']/100),util_WALK_EXP_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xfers_wlk_multiplier * ((odt_skims['WLK_EXP_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_EXP_WLK_BOARDS']-1).clip(0)),util_WALK_EXP_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@2 * wacc_multiplier * df.origin_walk_time # (3),util_WALK_EXP_Walk_access_time,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64
@2 * wegr_multiplier * df.destination_walk_time # (3),util_WALK_EXP_Walk_egress_time,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64
@waux_multiplier * (odt_skims['WLK_EXP_WLK_WAUX']/100 + dot_skims['WLK_EXP_WLK_WAUX']/100),util_WALK_EXP_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['WLK_EXP_WLK_FAR'] + dot_skims['WLK_EXP_WLK_FAR']),util_WALK_EXP_Fare,46.522562302315485,46.522562302315485,46.522562302315485,46.522562302315485,46.522562302315485,46.522562302315485,46.522562302315485,46.522562302315485,46.522562302315485,46.522562302315485,0.0,46.522562302315485,46.522562302315485,46.522562302315485,46.522562302315485,46.522562302315485
@density_index_multiplier * df.dest_density_index # (3),util_WALK_EXP_Destination_zone_densityIndex,-0.5740334015494811,-1.0357444166364618,-1.5788466961071044,-7.350735881521539,-18.71741134436044,-16.584077339399578,-15.932721761187745,-8.866357153113483,-3.2970660361388866,-3.226478842909952,-11.382221515693024,-9.398941930736965,-5.121658150766901,-4.098682783737195,-4.408193706153198,-5.202383997687261
@coef_topology_trn_multiplier * df.dest_topology # (3),util_WALK_EXP_Topology,6.6000000000000005,2.2,4.4,2.2,4.4,4.4,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,4.4,2.2,6.6000000000000005,6.6000000000000005,2.2,2.2
walk_heavyrail_available == False,util_WALK_HVY_Unavailable,1.0,1.0,1.0,1.0,1.0,0.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(odt_skims['WLK_HVY_WLK_TOTIVT']/100 + dot_skims['WLK_HVY_WLK_TOTIVT']/100),util_WALK_HVY_In_vehicle_time,4.0782999992370605,4.0782999992370605,5.140900135040283,8.449199676513672,14.506599426269531,9.4350004196167,16.884599685668945,4.510900020599365,1.2451999187469482,1.2451999187469482,0.0,5.9253997802734375,13.857500076293945,3.420999765396118,6.744799613952637,11.265800476074219
@(ivt_hvy_multiplier-1) * (odt_skims['WLK_HVY_WLK_KEYIVT']/100 + dot_skims['WLK_HVY_WLK_KEYIVT']/100),util_WALK_HVY_In_vehicle_time_on_heavy_rail,-0.0,-0.0,-0.0,-0.0,-0.0,-1.8870000839233398,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@short_i_wait_multiplier * ((odt_skims['WLK_HVY_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_HVY_WLK_IWAIT']/100).clip(upper=waitThresh)),util_WALK_HVY_Short_iwait_time,5.468400001525879,5.468400001525879,4.628399848937988,3.968400001525879,7.528400421142578,8.38479995727539,6.968400001525879,8.368400573730469,6.24839973449707,6.24839973449707,0.0,10.22920036315918,19.308401107788086,6.24839973449707,14.549200057983398,15.068399429321289
@long_i_wait_multiplier * ((odt_skims['WLK_HVY_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_HVY_WLK_IWAIT']/100-waitThresh).clip(0)),util_WALK_HVY_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xwait_multiplier * (odt_skims['WLK_HVY_WLK_XWAIT']/100 + dot_skims['WLK_HVY_WLK_XWAIT']/100),util_WALK_HVY_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xfers_wlk_multiplier * ((odt_skims['WLK_HVY_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_HVY_WLK_BOARDS']-1).clip(0)),util_WALK_HVY_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@2 * wacc_multiplier * df.origin_walk_time # (4),util_WALK_HVY_Walk_access_time,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64
@wegr_multiplier * 2 *df.destination_walk_time,util_WALK_HVY_Walk_egress_time,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64
@waux_multiplier * (odt_skims['WLK_HVY_WLK_WAUX']/100 + dot_skims['WLK_HVY_WLK_WAUX']/100),util_WALK_HVY_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['WLK_HVY_WLK_FAR'] + dot_skims['WLK_HVY_WLK_FAR']),util_WALK_HVY_Fare,46.522562302315485,46.522562302315485,46.522562302315485,46.522562302315485,46.522562302315485,39.482964059201954,46.522562302315485,46.522562302315485,46.522562302315485,46.522562302315485,0.0,46.522562302315485,46.522562302315485,46.522562302315485,46.522562302315485,46.522562302315485
@density_index_multiplier * df.dest_density_index # (4),util_WALK_HVY_Destination_zone_densityIndex,-0.5740334015494811,-1.0357444166364618,-1.5788466961071044,-7.350735881521539,-18.71741134436044,-16.584077339399578,-15.932721761187745,-8.866357153113483,-3.2970660361388866,-3.226478842909952,-11.382221515693024,-9.398941930736965,-5.121658150766901,-4.098682783737195,-4.408193706153198,-5.202383997687261
@coef_topology_trn_multiplier * df.dest_topology # (4),util_WALK_HVY_Topology,6.6000000000000005,2.2,4.4,2.2,4.4,4.4,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,4.4,2.2,6.6000000000000005,6.6000000000000005,2.2,2.2
walk_commuter_available == False,util_WALK_COM_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(odt_skims['WLK_COM_WLK_TOTIVT']/100 + dot_skims['WLK_COM_WLK_TOTIVT']/100),util_WALK_COM_In_vehicle_time,4.0782999992370605,4.0782999992370605,5.140900135040283,8.449199676513672,14.506599426269531,17.88359832763672,16.884599685668945,4.510900020599365,1.2451999187469482,1.2451999187469482,0.0,5.9253997802734375,13.857500076293945,3.420999765396118,6.744799613952637,11.265800476074219
@(ivt_com_multiplier - 1) * (odt_skims['WLK_COM_WLK_KEYIVT']/100 + dot_skims['WLK_COM_WLK_KEYIVT']/100),util_WALK_COM_In_vehicle_time_on_commuter_rail,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@short_i_wait_multiplier * ((odt_skims['WLK_COM_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_COM_WLK_IWAIT']/100).clip(upper=waitThresh)),util_WALK_COM_Short_iwait_time,5.468400001525879,5.468400001525879,4.628399848937988,3.968400001525879,7.528400421142578,9.648399353027344,6.968400001525879,8.368400573730469,6.24839973449707,6.24839973449707,0.0,10.22920036315918,19.308401107788086,6.24839973449707,14.549200057983398,15.068399429321289
@long_i_wait_multiplier * ((odt_skims['WLK_COM_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_COM_WLK_IWAIT']/100-waitThresh).clip(0)),util_WALK_COM_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xwait_multiplier * (odt_skims['WLK_COM_WLK_XWAIT']/100 + dot_skims['WLK_COM_WLK_XWAIT']/100),util_WALK_COM_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xfers_wlk_multiplier * ((odt_skims['WLK_COM_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_COM_WLK_BOARDS']-1).clip(0)),util_WALK_COM_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@2 * wacc_multiplier * df.origin_walk_time # (5),util_WALK_COM_Walk_access_time,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64
@2 * wegr_multiplier * df.destination_walk_time # (4),util_WALK_COM_Walk_egress_time,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64
@waux_multiplier * (odt_skims['WLK_COM_WLK_WAUX']/100 + dot_skims['WLK_COM_WLK_WAUX']/100),util_WALK_COM_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['WLK_COM_WLK_FAR'] + dot_skims['WLK_COM_WLK_FAR']),util_WALK_COM_Fare,46.522562302315485,46.522562302315485,46.522562302315485,46.522562302315485,46.522562302315485,46.522562302315485,46.522562302315485,46.522562302315485,46.522562302315485,46.522562302315485,0.0,46.522562302315485,46.522562302315485,46.522562302315485,46.522562302315485,46.522562302315485
@density_index_multiplier * df.dest_density_index # (5),util_WALK_COM_Destination_zone_densityIndex,-0.5740334015494811,-1.0357444166364618,-1.5788466961071044,-7.350735881521539,-18.71741134436044,-16.584077339399578,-15.932721761187745,-8.866357153113483,-3.2970660361388866,-3.226478842909952,-11.382221515693024,-9.398941930736965,-5.121658150766901,-4.098682783737195,-4.408193706153198,-5.202383997687261
@coef_topology_trn_multiplier * df.dest_topology # (5),util_WALK_COM_Topology,6.6000000000000005,2.2,4.4,2.2,4.4,4.4,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,4.4,2.2,6.6000000000000005,6.6000000000000005,2.2,2.2
drive_local_available == False,util_DRIVE_LOC_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0
auto_ownership == 0 # (3),util_DRIVE_LOC_Unavailable_for_zero_auto_households,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (3),util_DRIVE_LOC_Unavailable_for_persons_less_than_16,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(odt_skims['DRV_LOC_WLK_TOTIVT']/100 + dot_skims['WLK_LOC_DRV_TOTIVT']/100),util_DRIVE_LOC_In_vehicle_time,1.8518000841140747,2.2670998573303223,1.6398999691009521,4.006199836730957,6.794000148773193,9.43440055847168,10.720399856567383,2.6710000038146973,2.0543999671936035,4.031000137329102,0.0,4.905600070953369,13.857500076293945,1.8718000650405884,4.429599761962891,3.4790000915527344
@short_i_wait_multiplier * ((odt_skims['DRV_LOC_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_LOC_DRV_IWAIT']/100).clip(upper=waitThresh)),util_DRIVE_LOC_Short_iwait_time,4.52839994430542,6.548399925231934,4.508399963378906,2.6283998489379883,3.1083998680114746,3.1083998680114746,6.14840030670166,6.348400115966797,3.6083998680114746,4.8084001541137695,0.0,18.068401336669922,19.308401107788086,8.70840072631836,9.508399963378906,15.068399429321289
@long_i_wait_multiplier * ((odt_skims['DRV_LOC_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_LOC_DRV_IWAIT']/100-waitThresh).clip(0)),util_DRIVE_LOC_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xwait_multiplier * (odt_skims['DRV_LOC_WLK_XWAIT']/100 + dot_skims['WLK_LOC_DRV_XWAIT']/100),util_DRIVE_LOC_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xfers_wlk_multiplier * ((odt_skims['DRV_LOC_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_LOC_DRV_BOARDS']-1).clip(0)),util_DRIVE_LOC_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@dtim_multiplier * (odt_skims['DRV_LOC_WLK_DTIM']/100 + dot_skims['WLK_LOC_DRV_DTIM']/100),util_DRIVE_LOC_Drive_time,4.800000190734863,5.760000228881836,5.820000171661377,4.800000190734863,8.279999732971191,8.279999732971191,8.279999732971191,5.819999694824219,3.7200002670288086,5.639999866485596,0.0,6.0,3.299999952316284,6.119999885559082,6.539999961853027,7.140000343322754
@wacc_multiplier * df.destination_walk_time,util_DRIVE_LOC_Walk_access_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@wegr_multiplier * df.destination_walk_time,util_DRIVE_LOC_Walk_egress_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@waux_multiplier * (odt_skims['DRV_LOC_WLK_WAUX']/100 + dot_skims['WLK_LOC_DRV_WAUX']/100),util_DRIVE_LOC_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * ((odt_skims['DRV_LOC_WLK_FAR'] + dot_skims['WLK_LOC_DRV_FAR']) + ((odt_skims['DRV_LOC_WLK_DDIST']/100+dot_skims['WLK_LOC_DRV_DDIST']/100) * costPerMile)),util_DRIVE_LOC_Fare_and_operating_cost,48.761764926589336,49.20960918764392,49.23759799450678,48.761764926589336,50.38519044863145,50.38519044863145,50.38519044863145,49.23759799450678,48.2579477220588,49.15362690366843,0.0,49.321569085345125,48.06201673351925,49.37754669907084,49.57347768761039,49.85337976698828
@dacc_ratio * ((odt_skims['DRV_LOC_WLK_DDIST']/100+ dot_skims['WLK_LOC_DRV_DDIST']/100)/ (od_skims['DIST']*2)),util_DRIVE_LOC_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@density_index_multiplier * df.dest_density_index # (6),util_DRIVE_LOC_Destination_zone_densityIndex,-0.5740334015494811,-1.0357444166364618,-1.5788466961071044,-7.350735881521539,-18.71741134436044,-16.584077339399578,-15.932721761187745,-8.866357153113483,-3.2970660361388866,-3.226478842909952,-11.382221515693024,-9.398941930736965,-5.121658150766901,-4.098682783737195,-4.408193706153198,-5.202383997687261
@coef_topology_trn_multiplier * df.dest_topology # (6),util_DRIVE_LOC_Topology,6.6000000000000005,2.2,4.4,2.2,4.4,4.4,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,4.4,2.2,6.6000000000000005,6.6000000000000005,2.2,2.2
drive_lrf_available == False,util_DRIVE_LRF_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,0.0,1.0,0.0,0.0,1.0
auto_ownership == 0 # (4),util_DRIVE_LRF_Unavailable_for_zero_auto_households,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (4),util_DRIVE_LRF_Unavailable_for_persons_less_than_16,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(odt_skims['DRV_LRF_WLK_TOTIVT']/100 + dot_skims['WLK_LRF_DRV_TOTIVT']/100),util_DRIVE_LRF_In_vehicle_time,76.17829895019531,66.4551010131836,74.25550079345703,62.4844970703125,59.99209976196289,56.05860137939453,55.03770065307617,72.0728988647461,76.17829895019531,76.17829895019531,0.0,62.06100082397461,52.58409881591797,85.66380310058594,92.46009826660156,68.26699829101562
@(ivt_lrt_multiplier-1) * (odt_skims['DRV_LRF_WLK_KEYIVT']/100 + dot_skims['WLK_LRF_DRV_KEYIVT']/100),util_DRIVE_LRF_In_vehicle_time_on_Light_Rail,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-4.879839897155762,-0.0,-7.240139961242676,-3.7422401905059814,-0.0
@(ivt_ferry_multiplier-ivt_lrt_multiplier)*(odt_skims['DRV_LRF_WLK_FERRYIVT']/100 + dot_skims['WLK_LRF_DRV_FERRYIVT']/100),util_DRIVE_LRF_In_vehicle_time_on_Ferry,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@short_i_wait_multiplier * ((odt_skims['DRV_LRF_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_LRF_DRV_IWAIT']/100).clip(upper=waitThresh)),util_DRIVE_LRF_Short_iwait_time,40.0,40.0,40.0,27.047000885009766,40.0,40.0,40.0,40.0,40.0,40.0,0.0,30.287399291992188,40.0,30.287399291992188,27.287399291992188,40.0
@long_i_wait_multiplier * ((odt_skims['DRV_LRF_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_LRF_DRV_IWAIT']/100-waitThresh).clip(0)),util_DRIVE_LRF_Long_iwait_time,10.012800216674805,10.029899597167969,10.012800216674805,5.006400108337402,10.012800216674805,10.012800216674805,10.012800216674805,10.012800216674805,10.012800216674805,10.012800216674805,0.0,5.143699645996094,10.012800216674805,5.143699645996094,5.143699645996094,10.029899597167969
@xwait_multiplier * (odt_skims['DRV_LRF_WLK_XWAIT']/100 + dot_skims['WLK_LRF_DRV_XWAIT']/100),util_DRIVE_LRF_transfer_wait_time,0.0,6.900000095367432,0.0,30.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,40.0,0.0,40.0,37.0,6.900000095367432
@xfers_drv_multiplier * ((odt_skims['DRV_LRF_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_LRF_DRV_BOARDS']-1).clip(0)),util_DRIVE_LRF_number_of_transfers,0.0,20.0,0.0,20.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,40.0,0.0,40.0,40.0,20.0
@dtim_multiplier * (odt_skims['DRV_LRF_WLK_DTIM']/100 + dot_skims['WLK_LRF_DRV_DTIM']/100),util_DRIVE_LRF_Drive_time,50.31999969482422,50.31999969482422,50.31999969482422,50.31999969482422,50.31999969482422,50.31999969482422,50.31999969482422,50.31999969482422,50.31999969482422,50.31999969482422,0.0,50.31999969482422,50.31999969482422,50.31999969482422,50.31999969482422,50.31999969482422
@wacc_multiplier * df.destination_walk_time # (2),util_DRIVE_LRF_Walk_access_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@wegr_multiplier * df.destination_walk_time # (2),util_DRIVE_LRF_Walk_egress_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@waux_multiplier * (odt_skims['DRV_LRF_WLK_WAUX']/100 + dot_skims['WLK_LRF_DRV_WAUX']/100),util_DRIVE_LRF_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,9.600000381469727,0.0
@ivt_cost_multiplier * df.ivot * ((odt_skims['DRV_LRF_WLK_FAR']+dot_skims['WLK_LRF_DRV_FAR']) + ((odt_skims['DRV_LRF_WLK_DDIST']/100+dot_skims['WLK_LRF_DRV_DDIST']/100) *costPerMile)),util_DRIVE_LRF_Fare_and_operating_cost,109.33028554752917,125.39893371115788,109.33028554752917,132.5915666986869,109.33028554752917,109.33028554752917,109.33028554752917,109.33028554752917,109.33028554752917,109.33028554752917,0.0,155.85284784984466,109.33028554752917,132.5915666986869,155.85284784984466,125.39893371115788
@dacc_ratio * ((odt_skims['DRV_LRF_WLK_DDIST']/100+ dot_skims['WLK_LRF_DRV_DDIST']/100)/ (od_skims['DIST']*2)),util_DRIVE_LRF_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@density_index_multiplier * df.dest_density_index # (7),util_DRIVE_LRF_Destination_zone_densityIndex,-0.5740334015494811,-1.0357444166364618,-1.5788466961071044,-7.350735881521539,-18.71741134436044,-16.584077339399578,-15.932721761187745,-8.866357153113483,-3.2970660361388866,-3.226478842909952,-11.382221515693024,-9.398941930736965,-5.121658150766901,-4.098682783737195,-4.408193706153198,-5.202383997687261
@coef_topology_trn_multiplier * df.dest_topology # (7),util_DRIVE_LRF_Topology,6.6000000000000005,2.2,4.4,2.2,4.4,4.4,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,4.4,2.2,6.6000000000000005,6.6000000000000005,2.2,2.2
drive_express_available == False,util_DRIVE_EXP_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
auto_ownership == 0 # (5),util_DRIVE_EXP_Unavailable_for_zero_auto_households,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (5),util_DRIVE_EXP_Unavailable_for_persons_less_than_16,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(odt_skims['DRV_EXP_WLK_TOTIVT']/100 + dot_skims['WLK_EXP_DRV_TOTIVT']/100),util_DRIVE_EXP_In_vehicle_time,76.17829895019531,66.4551010131836,74.25550079345703,62.4844970703125,59.99209976196289,56.05860137939453,55.03770065307617,72.0728988647461,76.17829895019531,76.17829895019531,0.0,62.06100082397461,52.58409881591797,76.17829895019531,91.12319946289062,68.26699829101562
@(ivt_exp_multiplier-1) * (odt_skims['DRV_EXP_WLK_KEYIVT']/100 + dot_skims['WLK_EXP_DRV_KEYIVT']/100),util_DRIVE_EXP_In_vehicle_time_on_Express_bus,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@short_i_wait_multiplier * ((odt_skims['DRV_EXP_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_EXP_DRV_IWAIT']/100).clip(upper=waitThresh)),util_DRIVE_EXP_Short_iwait_time,40.0,40.0,40.0,27.047000885009766,40.0,40.0,40.0,40.0,40.0,40.0,0.0,30.287399291992188,40.0,40.0,27.287399291992188,40.0
@long_i_wait_multiplier * ((odt_skims['DRV_EXP_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_EXP_DRV_IWAIT']/100-waitThresh).clip(0)),util_DRIVE_EXP_Long_iwait_time,10.012800216674805,10.029899597167969,10.012800216674805,5.006400108337402,10.012800216674805,10.012800216674805,10.012800216674805,10.012800216674805,10.012800216674805,10.012800216674805,0.0,5.143699645996094,10.012800216674805,10.012800216674805,5.143699645996094,10.029899597167969
@xwait_multiplier * (odt_skims['DRV_EXP_WLK_XWAIT']/100 + dot_skims['WLK_EXP_DRV_XWAIT']/100),util_DRIVE_EXP_transfer_wait_time,0.0,6.900000095367432,0.0,30.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,40.0,0.0,0.0,37.0,6.900000095367432
@xfers_drv_multiplier * ((odt_skims['DRV_EXP_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_EXP_DRV_BOARDS']-1).clip(0)),util_DRIVE_EXP_number_of_transfers,0.0,20.0,0.0,20.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,40.0,0.0,0.0,40.0,20.0
@dtim_multiplier * (odt_skims['DRV_EXP_WLK_DTIM']/100 + dot_skims['WLK_EXP_DRV_DTIM']/100),util_DRIVE_EXP_Drive_time,50.31999969482422,50.31999969482422,50.31999969482422,50.31999969482422,50.31999969482422,50.31999969482422,50.31999969482422,50.31999969482422,50.31999969482422,50.31999969482422,0.0,50.31999969482422,50.31999969482422,50.31999969482422,50.31999969482422,50.31999969482422
@wacc_multiplier * df.destination_walk_time # (3),util_DRIVE_EXP_Walk_access_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@wegr_multiplier * df.destination_walk_time # (3),util_DRIVE_EXP_Walk_egress_ime,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@waux_multiplier * (odt_skims['DRV_EXP_WLK_WAUX']/100 + dot_skims['WLK_EXP_DRV_WAUX']/100),util_DRIVE_EXP_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,9.600000381469727,0.0
@ivt_cost_multiplier * df.ivot * ((odt_skims['DRV_EXP_WLK_FAR']+dot_skims['WLK_EXP_DRV_FAR']) + ((odt_skims['DRV_EXP_WLK_DDIST']/100+dot_skims['WLK_EXP_DRV_DDIST']/100) *costPerMile)),util_DRIVE_EXP_Fare_and_operating_cost,109.33028554752917,125.39893371115788,109.33028554752917,132.5915666986869,109.33028554752917,109.33028554752917,109.33028554752917,109.33028554752917,109.33028554752917,109.33028554752917,0.0,155.85284784984466,109.33028554752917,109.33028554752917,155.85284784984466,125.39893371115788
@dacc_ratio * ((odt_skims['DRV_EXP_WLK_DDIST']/100+ dot_skims['WLK_EXP_DRV_DDIST']/100)/ (od_skims['DIST']*2)),util_DRIVE_EXP_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@density_index_multiplier * df.dest_density_index # (8),util_DRIVE_EXP_Destination_zone_densityIndex,-0.5740334015494811,-1.0357444166364618,-1.5788466961071044,-7.350735881521539,-18.71741134436044,-16.584077339399578,-15.932721761187745,-8.866357153113483,-3.2970660361388866,-3.226478842909952,-11.382221515693024,-9.398941930736965,-5.121658150766901,-4.098682783737195,-4.408193706153198,-5.202383997687261
@coef_topology_trn_multiplier * df.dest_topology # (8),util_DRIVE_EXP_Topology,6.6000000000000005,2.2,4.4,2.2,4.4,4.4,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,4.4,2.2,6.6000000000000005,6.6000000000000005,2.2,2.2
drive_heavyrail_available == False,util_DRIVE_HVY_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0
auto_ownership == 0 # (6),util_DRIVE_HVY_Unavailable_for_zero_auto_households,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (6),util_DRIVE_HVY_Unavailable_for_persons_less_than_16,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(odt_skims['DRV_HVY_WLK_TOTIVT']/100 + dot_skims['WLK_HVY_DRV_TOTIVT']/100),util_DRIVE_HVY_In_vehicle_time,40.88520050048828,37.961002349853516,37.961002349853516,37.961002349853516,35.00559997558594,31.450401306152344,31.450401306152344,37.961002349853516,40.88520050048828,40.88520050048828,0.0,46.07099914550781,31.450401306152344,40.88520050048828,52.64039993286133,37.961002349853516
@(ivt_hvy_multiplier-1) * (odt_skims['DRV_HVY_WLK_KEYIVT']/100 + dot_skims['WLK_HVY_DRV_KEYIVT']/100),util_DRIVE_HVY_In_vehicle_time_on_heavy_rail,-8.177040100097656,-7.592200756072998,-7.592200756072998,-7.592200756072998,-7.001120090484619,-6.290080547332764,-6.290080547332764,-7.592200756072998,-8.177040100097656,-8.177040100097656,-0.0,-7.592200756072998,-6.290080547332764,-8.177040100097656,-8.177040100097656,-7.592200756072998
@short_i_wait_multiplier * ((odt_skims['DRV_HVY_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_HVY_DRV_IWAIT']/100).clip(upper=waitThresh)),util_DRIVE_HVY_Short_iwait_time,8.38479995727539,8.38479995727539,8.38479995727539,8.38479995727539,8.38479995727539,8.38479995727539,8.38479995727539,8.38479995727539,8.38479995727539,8.38479995727539,0.0,7.69320011138916,8.38479995727539,8.38479995727539,12.173999786376953,8.38479995727539
@long_i_wait_multiplier * ((odt_skims['DRV_HVY_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_HVY_DRV_IWAIT']/100-waitThresh).clip(0)),util_DRIVE_HVY_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xwait_multiplier * (odt_skims['DRV_HVY_WLK_XWAIT']/100 + dot_skims['WLK_HVY_DRV_XWAIT']/100),util_DRIVE_HVY_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,11.260000228881836,0.0,0.0,10.760000228881836,0.0
@xfers_drv_multiplier * ((odt_skims['DRV_HVY_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_HVY_DRV_BOARDS']-1).clip(0)),util_DRIVE_HVY_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,40.0,0.0,0.0,40.0,0.0
@dtim_multiplier * (odt_skims['DRV_HVY_WLK_DTIM']/100 + dot_skims['WLK_HVY_DRV_DTIM']/100),util_DRIVE_HVY_Drive_time,51.68000030517578,51.68000030517578,51.68000030517578,51.68000030517578,51.68000030517578,51.68000030517578,51.68000030517578,51.68000030517578,51.68000030517578,51.68000030517578,0.0,51.68000030517578,51.68000030517578,51.68000030517578,51.68000030517578,51.68000030517578
@wacc_multiplier * df.destination_walk_time # (4),util_DRIVE_HVY_Walk_access_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@wegr_multiplier * df.destination_walk_time # (4),util_DRIVE_HVY_Walk_egress_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@waux_multiplier * (odt_skims['DRV_HVY_WLK_WAUX']/100 + dot_skims['WLK_HVY_DRV_WAUX']/100),util_DRIVE_HVY_Walk_other_time,24.0,24.0,24.0,24.0,24.0,24.0,24.0,24.0,24.0,24.0,0.0,32.79999923706055,24.0,24.0,28.0,24.0
@ivt_cost_multiplier * df.ivot * ((odt_skims['DRV_HVY_WLK_FAR']+dot_skims['WLK_HVY_DRV_FAR']) + ((odt_skims['DRV_HVY_WLK_DDIST']/100+dot_skims['WLK_HVY_DRV_DDIST']/100) *costPerMile)),util_DRIVE_HVY_Fare_and_operating_cost,117.82935552431046,117.82935552431046,117.82935552431046,117.82935552431046,117.82935552431046,117.82935552431046,117.82935552431046,117.82935552431046,117.82935552431046,117.82935552431046,0.0,141.0906366754682,117.82935552431046,117.82935552431046,159.30177126091405,117.82935552431046
@dacc_ratio * (odt_skims['DRV_HVY_WLK_DDIST']/100) / od_skims['DIST'],util_DRIVE_HVY_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@density_index_multiplier * df.dest_density_index # (9),util_DRIVE_HVY_Destination_zone_densityIndex,-0.5740334015494811,-1.0357444166364618,-1.5788466961071044,-7.350735881521539,-18.71741134436044,-16.584077339399578,-15.932721761187745,-8.866357153113483,-3.2970660361388866,-3.226478842909952,-11.382221515693024,-9.398941930736965,-5.121658150766901,-4.098682783737195,-4.408193706153198,-5.202383997687261
@coef_topology_trn_multiplier * df.dest_topology # (9),util_DRIVE_HVY_Topology,6.6000000000000005,2.2,4.4,2.2,4.4,4.4,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,4.4,2.2,6.6000000000000005,6.6000000000000005,2.2,2.2
drive_commuter_available == False,util_DRIVE_COM_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0
auto_ownership == 0 # (7),util_DRIVE_COM_Unavailable_for_zero_auto_households,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (7),util_DRIVE_COM_Unavailable_for_persons_less_than_16,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(odt_skims['DRV_COM_WLK_TOTIVT']/100 + dot_skims['WLK_COM_DRV_TOTIVT']/100),util_DRIVE_COM_In_vehicle_time,72.50060272216797,63.78200149536133,66.84609985351562,58.91899871826172,55.22540283203125,67.68319702148438,55.12670135498047,53.83879852294922,63.1140022277832,59.53160095214844,0.0,44.208396911621094,53.6875,72.50060272216797,69.50959777832031,65.70399475097656
@(ivt_com_multiplier - 1) * (odt_skims['DRV_COM_WLK_KEYIVT']/100 + dot_skims['WLK_COM_DRV_KEYIVT']/100),util_DRIVE_COM_In_vehicle_time_on_commuter_rail,-13.262519836425781,-13.262519836425781,-13.262519836425781,-13.262519836425781,-13.262519836425781,-13.262519836425781,-13.262519836425781,-13.262519836425781,-13.262519836425781,-13.262519836425781,-0.0,-13.262519836425781,-13.262519836425781,-13.262519836425781,-13.262519836425781,-13.262519836425781
@short_i_wait_multiplier * ((odt_skims['DRV_COM_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_COM_DRV_IWAIT']/100).clip(upper=waitThresh)),util_DRIVE_COM_Short_iwait_time,25.207000732421875,25.207000732421875,25.207000732421875,23.046600341796875,23.046600341796875,29.046600341796875,23.046600341796875,23.046600341796875,25.207000732421875,25.207000732421875,0.0,40.0,23.046600341796875,25.207000732421875,37.2869987487793,35.046600341796875
@long_i_wait_multiplier * ((odt_skims['DRV_COM_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_COM_DRV_IWAIT']/100-waitThresh).clip(0)),util_DRIVE_COM_Long_iwait_time,15.143501281738281,15.023300170898438,15.023300170898438,15.023300170898438,15.023300170898438,15.023300170898438,15.023300170898438,15.023300170898438,15.023300170898438,15.143501281738281,0.0,30.012401580810547,15.023300170898438,15.143501281738281,15.143501281738281,15.023300170898438
@xwait_multiplier * (odt_skims['DRV_COM_WLK_XWAIT']/100 + dot_skims['WLK_COM_DRV_XWAIT']/100),util_DRIVE_COM_transfer_wait_time,54.76000213623047,53.0,53.0,53.0,53.0,59.0,59.0,53.0,53.0,54.76000213623047,0.0,0.0,59.0,54.76000213623047,67.0,65.0
@xfers_drv_multiplier * ((odt_skims['DRV_COM_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_COM_DRV_BOARDS']-1).clip(0)),util_DRIVE_COM_number_of_transfers,40.0,40.0,40.0,40.0,40.0,40.0,40.0,40.0,40.0,40.0,0.0,0.0,40.0,40.0,40.0,40.0
@dtim_multiplier * (odt_skims['DRV_COM_WLK_DTIM']/100 + dot_skims['WLK_COM_DRV_DTIM']/100),util_DRIVE_COM_Drive_time,67.68000030517578,67.68000030517578,67.68000030517578,67.68000030517578,67.68000030517578,67.68000030517578,67.68000030517578,67.68000030517578,67.68000030517578,67.68000030517578,0.0,67.68000030517578,67.68000030517578,67.68000030517578,67.68000030517578,67.68000030517578
@wacc_multiplier * df.destination_walk_time # (5),util_DRIVE_COM_Walk_access_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@wegr_multiplier * df.destination_walk_time # (5),util_DRIVE_COM_Walk_egress_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@waux_multiplier * (odt_skims['DRV_COM_WLK_WAUX']/100 + dot_skims['WLK_COM_DRV_WAUX']/100),util_DRIVE_COM_Walk_other_time,12.0,12.0,12.0,12.0,12.0,12.0,12.0,12.0,12.0,12.0,0.0,8.0,12.0,12.0,12.0,12.0
@ivt_cost_multiplier * df.ivot * ((odt_skims['DRV_COM_WLK_FAR']+dot_skims['WLK_COM_DRV_FAR']) + ((odt_skims['DRV_COM_WLK_DDIST']/100+dot_skims['WLK_COM_DRV_DDIST']/100) *costPerMile)),util_DRIVE_COM_Fare_and_operating_cost,159.32786861662066,143.7183246862385,143.7183246862385,166.97960583739624,166.97960583739624,166.97960583739624,166.97960583739624,166.97960583739624,143.7183246862385,182.5891497677784,0.0,143.7183246862385,166.97960583739624,159.32786861662066,182.5891497677784,166.97960583739624
@dacc_ratio * ((odt_skims['DRV_COM_WLK_DDIST']/100 + dot_skims['WLK_COM_DRV_DDIST']/100)/ (od_skims['DIST']*2)),util_DRIVE_COM_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@density_index_multiplier * df.dest_density_index # (10),util_DRIVE_COM_Destination_zone_densityIndex,-0.5740334015494811,-1.0357444166364618,-1.5788466961071044,-7.350735881521539,-18.71741134436044,-16.584077339399578,-15.932721761187745,-8.866357153113483,-3.2970660361388866,-3.226478842909952,-11.382221515693024,-9.398941930736965,-5.121658150766901,-4.098682783737195,-4.408193706153198,-5.202383997687261
@coef_topology_trn_multiplier * df.dest_topology # (10),util_DRIVE_COM_Topology,6.6000000000000005,2.2,4.4,2.2,4.4,4.4,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,4.4,2.2,6.6000000000000005,6.6000000000000005,2.2,2.2
@(odt_skims['HOV2TOLL_TIME'] + dot_skims['HOV2TOLL_TIME']) # (2),util_Taxi_In_vehicle_time,3.7300000190734863,5.069999694824219,4.630000114440918,6.639999866485596,9.309999465942383,10.860000610351562,9.90999984741211,4.650000095367432,2.5399999618530273,3.3899998664855957,1.059999942779541,3.8399999141693115,8.479999542236328,5.840000152587891,8.010000228881836,6.779999732971191
@ridehail_wait_time_multiplier * df.totalWaitTaxi, util_Taxi_Wait_time,16.5,16.5,16.5,16.5,16.5,16.5,16.5,16.5,16.5,16.5,16.5,16.5,16.5,16.5,16.5,16.5
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_VTOLL'] + dot_skims['HOV2TOLL_VTOLL']),util_Taxi_Tolls,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_BTOLL'] + dot_skims['HOV2TOLL_BTOLL']),util_Taxi_Bridge_toll,0.24026455675934477,0.2922963567255412,0.266280456742443,0.38258686103877865,0.5509250653013107,0.7008991177474181,0.6519280462369521,0.27852324286322266,0.1698685684903973,0.22802177063856513,0.0703959837081567,0.2647501107577409,0.5784713295122742,0.38105651505407656,0.5279698755307798,0.3963600113874235
@ivt_cost_multiplier * df.ivot * (Taxi_baseFare * 2 + (odt_skims['HOV2TOLL_DIST'] + dot_skims['HOV2TOLL_DIST']) * Taxi_costPerMile +(odt_skims['HOV2TOLL_TIME'] + dot_skims['HOV2TOLL_TIME']) * Taxi_costPerMinute)*100,util_Taxi_Fare,114.92909655873642,127.53915039158753,122.29005965056356,146.83682675862127,178.37730019233254,208.2037627719287,198.3024246157696,123.02463885829802,99.38076967853905,110.88898024021687,80.92477448150987,114.74545358111914,181.6828446003829,142.4447341473896,170.4041768148288,149.51495229932934
@(odt_skims['HOV2TOLL_TIME'] + dot_skims['HOV2TOLL_TIME']) # (3),util_TNC_Single_In_vehicle_time,3.7300000190734863,5.069999694824219,4.630000114440918,6.639999866485596,9.309999465942383,10.860000610351562,9.90999984741211,4.650000095367432,2.5399999618530273,3.3899998664855957,1.059999942779541,3.8399999141693115,8.479999542236328,5.840000152587891,8.010000228881836,6.779999732971191
@ridehail_wait_time_multiplier * df.totalWaitSingleTNC,util_TNC_Single_Wait_time,9.000000000000002,9.000000000000002,9.000000000000002,9.000000000000002,9.000000000000002,9.000000000000002,9.000000000000002,9.000000000000002,9.000000000000002,9.000000000000002,9.000000000000002,9.000000000000002,9.000000000000002,9.000000000000002,9.000000000000002,9.000000000000002
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_VTOLL'] + dot_skims['HOV2TOLL_VTOLL']) # (2),util_TNC_Single_Tolls,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_BTOLL'] + odr_skims['HOV2TOLL_BTOLL'] + dot_skims['HOV2TOLL_BTOLL'] + dor_skims['HOV2TOLL_BTOLL']),util_TNC_Single_Bridge_toll,0.48052911351868954,0.5845927134510824,0.532560913484886,0.7651737220775573,1.1018501306026214,1.4017982354948362,1.3038560924739042,0.5570464857264453,0.3397371369807946,0.45604354127713026,0.1407919674163134,0.5295002215154818,1.1569426590245484,0.7621130301081531,1.0559397510615596,0.792720022774847
"@ivt_cost_multiplier * df.ivot * np.maximum(TNC_single_baseFare * 2 + (odt_skims['HOV2TOLL_DIST'] + dot_skims['HOV2TOLL_DIST']) * TNC_single_costPerMile + (odt_skims['HOV2TOLL_TIME'] + dot_skims['HOV2TOLL_TIME']) * TNC_single_costPerMinute, TNC_single_costMinimum) * 100",util_TNC_Single_Cost,110.18501306026214,116.28344709981717,112.02143553916987,131.81953646616793,157.50182372458923,179.07054039235018,170.6964760722173,112.5019677540263,110.18501306026214,110.18501306026214,110.18501306026214,110.18501306026214,157.0993503562548,127.04944551429507,149.267020414742,133.7584928192909
@(odt_skims['HOV2TOLL_TIME'] + dot_skims['HOV2TOLL_TIME']) * TNC_shared_IVTFactor,util_TNC_Shared_In_vehicle_time,5.595000267028809,7.604999542236328,6.945000171661377,9.960000038146973,13.964999198913574,16.290000915527344,14.864999771118164,6.975000381469727,3.809999942779541,5.085000038146973,1.5899999141693115,5.759999752044678,12.719999313354492,8.760000228881836,12.015000343322754,10.170000076293945
@ridehail_wait_time_multiplier * df.totalWaitSharedTNC,util_TNC_Shared_Wait_time,14.999999999999996,14.999999999999996,14.999999999999996,14.999999999999996,14.999999999999996,14.999999999999996,14.999999999999996,14.999999999999996,14.999999999999996,14.999999999999996,14.999999999999996,14.999999999999996,14.999999999999996,14.999999999999996,14.999999999999996,14.999999999999996
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_VTOLL'] + dot_skims['HOV2TOLL_VTOLL']) # (3),util_TNC_Shared_Tolls,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_BTOLL'] + odr_skims['HOV2TOLL_BTOLL'] + dot_skims['HOV2TOLL_BTOLL'] + dor_skims['HOV2TOLL_BTOLL']) # (2),util_TNC_Shared_Bridge_toll,0.48052911351868954,0.5845927134510824,0.532560913484886,0.7651737220775573,1.1018501306026214,1.4017982354948362,1.3038560924739042,0.5570464857264453,0.3397371369807946,0.45604354127713026,0.1407919674163134,0.5295002215154818,1.1569426590245484,0.7621130301081531,1.0559397510615596,0.792720022774847
"@ivt_cost_multiplier * df.ivot * np.maximum(TNC_shared_baseFare * 2 + (odt_skims['HOV2TOLL_DIST'] + dot_skims['HOV2TOLL_DIST']) * TNC_shared_costPerMile + (odt_skims['HOV2TOLL_TIME'] + dot_skims['HOV2TOLL_TIME']) * TNC_shared_costPerMinute, TNC_shared_costMinimum) * 100",util_TNC_Shared_Cost,82.69539022227278,87.17930432231309,85.45153812317653,93.47515127903735,103.88763367783258,112.58612711430844,109.18570366330411,85.64436835776038,77.71104426500291,81.36398228318,71.71514409966312,82.78261443396553,103.67186084126078,91.52089985792242,100.51934008578274,94.25716271098355
@(df.is_indiv & (df.auto_ownership == 0)),util_Walk_ASC_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),util_Walk_ASC_Auto_deficient,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(df.is_indiv & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)),util_Walk_ASC_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership == 0)) # (2),util_Bike_ASC_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (2),util_Bike_ASC_Auto_deficient,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(df.is_indiv & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (2),util_Bike_ASC_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (3),util_Shared_ride_2_ASC_Auto_deficient,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(df.is_indiv & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (3),util_Shared_ride_2_ASC_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership == 0)) # (4),util_Shared_ride_3p_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (4),util_Shared_ride_3p_Auto_deficient,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(df.is_indiv & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (4),util_Shared_ride_3p_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership == 0)) # (5),util_Walk_to_Transit_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (5),util_Walk_to_Transit_Auto_deficient,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(df.is_indiv & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (5),util_Walk_to_Transit_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (6),util_Drive_to_Transit_Auto_deficient,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(df.is_indiv & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (6),util_Drive_to_Transit_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership == 0)) # (7),util_Taxi_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (7),util_Taxi_Auto_deficient,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(df.is_indiv & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (7),util_Taxi_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership == 0)) # (8),util_TNC_Single_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (8),util_TNC_Single_Auto_deficient,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(df.is_indiv & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (8),util_TNC_Single_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership == 0)) # (9),util_TNC_Shared_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (9),util_TNC_Shared_Auto_deficient,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(df.is_indiv & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (9),util_TNC_Shared_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership == 0)),util_Joint_Walk_ASC_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),util_Joint_Walk_ASC_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)),util_Joint_Walk_ASC_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership == 0)) # (2),util_Joint_Bike_ASC_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (2),util_Joint_Bike_ASC_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (2),util_Joint_Bike_ASC_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership == 0)) # (4),util_Joint_Shared_ride_3p_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (4),util_Joint_Shared_ride_3p_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (4),util_Joint_Shared_ride_3p_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership == 0)) # (5),util_Joint_Walk_to_Transit_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (5),util_Joint_Walk_to_Transit_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (5),util_Joint_Walk_to_Transit_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (6),util_Joint_Drive_to_Transit_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (6),util_Joint_Drive_to_Transit_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership == 0)) # (7),util_Joint_Taxi_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (7),util_Joint_Taxi_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (7),util_Joint_Taxi_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership == 0)) # (8),util_Joint_TNC_Single_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (8),util_Joint_TNC_Single_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (8),util_Joint_TNC_Single_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership == 0)) # (9),util_Joint_TNC_Shared_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (9),util_Joint_TNC_Shared_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (9),util_Joint_TNC_Shared_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1,util_Local_bus_ASC,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(df.walk_ferry_available == False),util_Walk_to_Light_Rail_ASC,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(df.drive_ferry_available == False),util_Drive_to_Light_Rail_ASC,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@df.walk_ferry_available,util_Walk_to_Ferry_ASC,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.drive_ferry_available,util_Drive_to_Ferry_ASC,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1 # (2),util_Express_Bus_ASC,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
1 # (3),util_Heavy_Rail_ASC,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
1 # (4),util_Commuter_Rail,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@df.destination_in_cbd,util_Walk_to_Transit_dest_CBD,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@df.destination_in_cbd # (2),util_Drive_to_Transit_dest_CBD,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@drvtrn_distpen_0_multiplier * (1-od_skims['DIST']/drvtrn_distpen_max).clip(lower=0),util_Drive_to_Transit_distance_penalty,260.82000732421875,258.1199951171875,257.760009765625,253.260009765625,244.97999572753906,238.13998413085938,241.02000427246094,257.94000244140625,264.05999755859375,261.5400085449219,266.94000244140625,260.1000061035156,243.17999267578125,251.8199920654297,248.22000122070312,253.8000030517578
@od_skims.max('DISTWALK') > 3,util_Walk_not_available_for_long_distances,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@od_skims.max('DISTBIKE') > 8,util_Bike_not_available_for_long_distances,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
is_escort,util_Drive_alone_not_available_for_escort_tours,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
