Expression,Label,0,1,2,3,4,5,6,7,8,9,10,11,12
sov_available == False,util_DRIVEALONEFREE_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
auto_ownership == 0,util_DRIVEALONEFREE_Unavailable_for_zero_auto_households,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16,util_DRIVEALONEFREE_Unavailable_for_persons_less_than_16,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
is_joint == True,util_DRIVEALONEFREE_Unavailable_for_joint_tours,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
is_atwork_subtour & ~work_tour_is_SOV,util_DRIVEALONEFREE_Unavailable_if_didn't_drive_to_work,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@odt_skims['SOV_TIME'],util_DRIVEALONEFREE_In_vehicle_time,0.4399999976158142,2.0299999713897705,4.820000171661377,3.490000009536743,2.119999885559082,1.7599999904632568,1.350000023841858,1.7599999904632568,2.0799999237060547,4.480000019073486,5.639999866485596,4.820000171661377,1.409999966621399
@coef_walktimeshort_multiplier * df.total_terminal_time,util_DRIVEALONEFREE_Terminal_time,15.764262011399998,15.328748974199998,14.924272777099999,14.145279086999999,15.243131499099999,15.312091772999997,15.323250480599999,15.4159297465,14.283792609599999,13.502049672699997,13.5218604217,13.259698176599999,14.4737601728
@ivt_cost_multiplier * df.ivot * costPerMile * odt_skims['SOV_DIST'],util_DRIVEALONEFREE_Operating_cost,0.39186076821869587,1.819353492250317,4.002577682950697,2.9389556156607077,1.7353834080697148,1.5394530448145827,1.1755822629476558,1.5954331009349842,1.8473436871442448,4.058558072738553,5.5140408665388065,4.56237891148962,1.2595524305451216
@ivt_cost_multiplier * df.ivot * df.total_parking_cost,util_DRIVEALONEFREE_Parking_cost,61.897144337859295,49.8633490315922,48.33992028823211,38.38441179815243,51.75779980035559,51.553037781980194,56.95556368053067,60.79075210685337,45.731159955392556,35.17068216542669,33.18231550436295,33.18123048802504,56.136442150351755
@ivt_cost_multiplier * df.ivot * odt_skims['SOV_BTOLL'],util_DRIVEALONEFREE_Bridge_toll,0.030606949339181372,0.13007953640181738,0.2815839348326268,0.20812725459427517,0.12395814334142755,0.1147760583116336,0.08722980322225174,0.1147760583116336,0.13007953640181738,0.2831142808173288,0.38258686103877865,0.31831225670863944,0.09488154226734363
sovtoll_available == False,util_DRIVEALONEPAY_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
auto_ownership == 0 # (2),util_DRIVEALONEPAY_Unavailable_for_zero_auto_households,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (2),util_DRIVEALONEPAY_Unavailable_for_persons_less_than_16,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
is_joint == True # (2),util_DRIVEALONEPAY_Unavailable_for_joint_tours,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
is_atwork_subtour & ~work_tour_is_SOV # (2),util_DRIVEALONEPAY_Unavailable_if_didn't_drive_to_work,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@odt_skims['SOVTOLL_TIME'],util_DRIVEALONEPAY_In_vehicle_time,0.4399999976158142,2.0299999713897705,4.820000171661377,3.490000009536743,2.119999885559082,1.7599999904632568,1.350000023841858,1.7599999904632568,2.0799999237060547,4.480000019073486,5.639999866485596,4.820000171661377,1.409999966621399
@coef_walktimeshort_multiplier * df.total_terminal_time # (2),util_DRIVEALONEPAY_Terminal_time,15.764262011399998,15.328748974199998,14.924272777099999,14.145279086999999,15.243131499099999,15.312091772999997,15.323250480599999,15.4159297465,14.283792609599999,13.502049672699997,13.5218604217,13.259698176599999,14.4737601728
@ivt_cost_multiplier * df.ivot * costPerMile * odt_skims['SOVTOLL_DIST'],util_DRIVEALONEPAY_Operating_cost,0.39186076821869587,1.819353492250317,4.002577682950697,2.9389556156607077,1.7353834080697148,1.5394530448145827,1.1755822629476558,1.5954331009349842,1.8473436871442448,4.058558072738553,5.5140408665388065,4.56237891148962,1.2595524305451216
@ivt_cost_multiplier * df.ivot * df.total_parking_cost # (2),util_DRIVEALONEPAY_Parking_cost,61.897144337859295,49.8633490315922,48.33992028823211,38.38441179815243,51.75779980035559,51.553037781980194,56.95556368053067,60.79075210685337,45.731159955392556,35.17068216542669,33.18231550436295,33.18123048802504,56.136442150351755
@ivt_cost_multiplier * df.ivot * odt_skims['SOVTOLL_BTOLL'],util_DRIVEALONEPAY_Bridge_toll,0.030606949339181372,0.13007953640181738,0.2815839348326268,0.20812725459427517,0.12395814334142755,0.1147760583116336,0.08722980322225174,0.1147760583116336,0.13007953640181738,0.2831142808173288,0.38258686103877865,0.31831225670863944,0.09488154226734363
@ivt_cost_multiplier * df.ivot * odt_skims['SOVTOLL_VTOLL'],util_DRIVEALONEPAY_Value_toll,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
hov2_available == False,util_SHARED2FREE_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
is_joint & (number_of_participants > 2),util_SHARED2FREE_Unavailable_based_on_party_size,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@odt_skims['HOV2_TIME'],util_SHARED2FREE_In_vehicle_time,0.4399999976158142,2.0299999713897705,4.820000171661377,3.490000009536743,2.119999885559082,1.7599999904632568,1.350000023841858,1.7599999904632568,2.0799999237060547,4.480000019073486,5.639999866485596,4.820000171661377,1.409999966621399
@coef_walktimeshort_multiplier * df.total_terminal_time # (3),util_SHARED2FREE_Terminal_time,15.764262011399998,15.328748974199998,14.924272777099999,14.145279086999999,15.243131499099999,15.312091772999997,15.323250480599999,15.4159297465,14.283792609599999,13.502049672699997,13.5218604217,13.259698176599999,14.4737601728
@ivt_cost_multiplier * df.ivot * costPerMile * odt_skims['HOV2_DIST'],util_SHARED2FREE_Operating_cost,0.39186076821869587,1.819353492250317,4.002577682950697,2.9389556156607077,1.7353834080697148,1.5394530448145827,1.1755822629476558,1.5954331009349842,1.8473436871442448,4.058558072738553,5.5140408665388065,4.56237891148962,1.2595524305451216
@ivt_cost_multiplier * df.ivot * df.total_parking_cost / costShareSr2,util_SHARED2FREE_Parking_cost,35.36979676449103,28.493342303766973,27.62281159327549,21.933949598944245,29.575885600203197,29.458878732560112,32.54603638887467,34.73757263248764,26.13209140308146,20.09753266595811,18.961323145350256,18.960703136014306,32.077966943058144
@ivt_cost_multiplier * df.ivot * odt_skims['HOV2_BTOLL'] / costShareSr2,util_SHARED2FREE_Bridge_toll,0.01748968533667507,0.07433116365818136,0.16090510561864388,0.11892985976815725,0.07083322476653002,0.06558631903521919,0.04984560184128671,0.06558631903521919,0.07433116365818136,0.16177958903847361,0.21862106345073065,0.18189271811922253,0.05421802415276779
@(df.hhsize == 1),util_SHARED2FREE_One_person_household,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
hov2toll_available == False,util_SHARED2PAY_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
is_joint & (number_of_participants > 2) # (2),util_SHARED2PAY_Unavailable_based_on_party_size,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@odt_skims['HOV2TOLL_TIME'],util_SHARED2PAY_In_vehicle_time,0.4399999976158142,2.0299999713897705,4.820000171661377,3.490000009536743,2.119999885559082,1.7599999904632568,1.350000023841858,1.7599999904632568,2.0799999237060547,4.480000019073486,5.639999866485596,4.820000171661377,1.409999966621399
@coef_walktimeshort_multiplier * df.total_terminal_time # (4),util_SHARED2PAY_Terminal_time,15.764262011399998,15.328748974199998,14.924272777099999,14.145279086999999,15.243131499099999,15.312091772999997,15.323250480599999,15.4159297465,14.283792609599999,13.502049672699997,13.5218604217,13.259698176599999,14.4737601728
@ivt_cost_multiplier * df.ivot * costPerMile * odt_skims['HOV2TOLL_DIST'],util_SHARED2PAY_Operating_cost,0.39186076821869587,1.819353492250317,4.002577682950697,2.9389556156607077,1.7353834080697148,1.5394530448145827,1.1755822629476558,1.5954331009349842,1.8473436871442448,4.058558072738553,5.5140408665388065,4.56237891148962,1.2595524305451216
@ivt_cost_multiplier * df.ivot * df.total_parking_cost / costShareSr2 # (2),util_SHARED2PAY_Parking_cost,35.36979676449103,28.493342303766973,27.62281159327549,21.933949598944245,29.575885600203197,29.458878732560112,32.54603638887467,34.73757263248764,26.13209140308146,20.09753266595811,18.961323145350256,18.960703136014306,32.077966943058144
@ivt_cost_multiplier * df.ivot * odt_skims['HOV2TOLL_BTOLL'] / costShareSr2,util_SHARED2PAY_Bridge_toll,0.01748968533667507,0.07433116365818136,0.16090510561864388,0.11892985976815725,0.07083322476653002,0.06558631903521919,0.04984560184128671,0.06558631903521919,0.07433116365818136,0.16177958903847361,0.21862106345073065,0.18189271811922253,0.05421802415276779
@ivt_cost_multiplier * df.ivot * odt_skims['HOV2TOLL_VTOLL'] / costShareSr2,util_SHARED2PAY_Value_toll,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.hhsize == 1) # (2),util_SHARED2PAY_One_person_household,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
hov3_available == False,util_SHARED3FREE_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@odt_skims['HOV3_TIME'],util_SHARED3FREE_In_vehicle_time,0.4399999976158142,2.0299999713897705,4.820000171661377,3.490000009536743,2.119999885559082,1.7599999904632568,1.350000023841858,1.7599999904632568,2.0799999237060547,4.480000019073486,5.639999866485596,4.820000171661377,1.409999966621399
@coef_walktimeshort_multiplier * df.total_terminal_time # (5),util_SHARED3FREE_Terminal_time,15.764262011399998,15.328748974199998,14.924272777099999,14.145279086999999,15.243131499099999,15.312091772999997,15.323250480599999,15.4159297465,14.283792609599999,13.502049672699997,13.5218604217,13.259698176599999,14.4737601728
@ivt_cost_multiplier * df.ivot * costPerMile * odt_skims['HOV3_DIST'],util_SHARED3FREE_Operating_cost,0.39186076821869587,1.819353492250317,4.002577682950697,2.9389556156607077,1.7353834080697148,1.5394530448145827,1.1755822629476558,1.5954331009349842,1.8473436871442448,4.058558072738553,5.5140408665388065,4.56237891148962,1.2595524305451216
@ivt_cost_multiplier * df.ivot *  df.total_parking_cost / costShareSr3,util_SHARED3FREE_Parking_cost,24.758857735143717,19.94533961263688,19.335968115292843,15.35376471926097,20.703119920142235,20.62121511279208,22.782225472212268,24.31630084274135,18.292463982157024,14.068272866170677,13.272926201745179,13.272492195210015,22.4545768601407
@ivt_cost_multiplier * df.ivot * odt_skims['HOV3_BTOLL'] / costShareSr3,util_SHARED3FREE_Bridge_toll,0.01224277973567255,0.052031814560726954,0.1126335739330507,0.08325090183771007,0.04958325733657102,0.045910423324653435,0.034891921288900694,0.045910423324653435,0.052031814560726954,0.11324571232693152,0.15303474441551146,0.12732490268345578,0.03795261690693745
@(df.hhsize == 1) # (3),util_SHARED3FREE_One_person_household,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
hov3toll_available == False,util_SHARED3PAY_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@odt_skims['HOV3TOLL_TIME'],util_SHARED3PAY_In_vehicle_time,0.4399999976158142,2.0299999713897705,4.820000171661377,3.490000009536743,2.119999885559082,1.7599999904632568,1.350000023841858,1.7599999904632568,2.0799999237060547,4.480000019073486,5.639999866485596,4.820000171661377,1.409999966621399
@coef_walktimeshort_multiplier * df.total_terminal_time # (6),util_SHARED3PAY_Terminal_time,15.764262011399998,15.328748974199998,14.924272777099999,14.145279086999999,15.243131499099999,15.312091772999997,15.323250480599999,15.4159297465,14.283792609599999,13.502049672699997,13.5218604217,13.259698176599999,14.4737601728
@ivt_cost_multiplier * df.ivot * costPerMile * odt_skims['HOV3TOLL_DIST'],util_SHARED3PAY_Operating_cost,0.39186076821869587,1.819353492250317,4.002577682950697,2.9389556156607077,1.7353834080697148,1.5394530448145827,1.1755822629476558,1.5954331009349842,1.8473436871442448,4.058558072738553,5.5140408665388065,4.56237891148962,1.2595524305451216
@ivt_cost_multiplier * df.ivot * df.total_parking_cost / costShareSr3,util_SHARED3PAY_Parking_cost,24.758857735143717,19.94533961263688,19.335968115292843,15.35376471926097,20.703119920142235,20.62121511279208,22.782225472212268,24.31630084274135,18.292463982157024,14.068272866170677,13.272926201745179,13.272492195210015,22.4545768601407
@ivt_cost_multiplier * df.ivot * odt_skims['HOV3TOLL_BTOLL'] / costShareSr3,util_SHARED3PAY_Bridge_toll,0.01224277973567255,0.052031814560726954,0.1126335739330507,0.08325090183771007,0.04958325733657102,0.045910423324653435,0.034891921288900694,0.045910423324653435,0.052031814560726954,0.11324571232693152,0.15303474441551146,0.12732490268345578,0.03795261690693745
@ivt_cost_multiplier * df.ivot * odt_skims['HOV3TOLL_VTOLL'] / costShareSr3,util_SHARED3PAY_Value_toll,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.hhsize == 1) # (4),util_SHARED3PAY_One_person_household,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@coef_walktimeshort_multiplier * od_skims['DISTWALK'].clip(upper=walkThresh) * 60/walkSpeed,util_WALK_Time_up_to_2_miles,3.7734758853912354,17.25017547607422,26.953399658203125,26.953399658203125,15.093903541564941,12.93763256072998,11.320427894592285,15.363436698913574,17.789243698120117,26.953399658203125,26.953399658203125,26.953399658203125,12.129029273986816
@walktimelong_multiplier * (od_skims['DISTWALK'] - walkThresh).clip(lower=0) * 60/walkSpeed,util_WALK_Time_beyond_2_of_a_miles,0.0,0.0,42.9999885559082,1.9999980926513672,0.0,0.0,0.0,0.0,0.0,45.000003814697266,97.00000762939453,63.0,0.0
@density_index_multiplier * df.density_index,util_WALK_Destination_zone_densityIndex,-25.893610415911542,-183.76839703803847,-414.6019334849894,-225.08925295206197,-221.6589288278371,-24.401167455202277,-82.42665090347217,-80.6619710727488,-284.55553789232556,-86.08869815910819,-44.15705126560914,-128.0414537691725,-493.43304843304844
@topology_walk_multiplier * df.trip_topology,util_WALK_Topology,15.0,15.0,30.0,45.0,45.0,45.0,45.0,45.0,30.0,45.0,45.0,45.0,15.0
is_atwork_subtour & ~work_tour_is_bike,util_BIKE_Unavailable_if_didn't_bike_to_work,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@coef_biketimeshort_multiplier * od_skims['DISTBIKE'].clip(upper=bikeThresh)*60/bikeSpeed,util_BIKE_Time_up_to_6_miles,1.8867449760437012,8.62511920928955,19.271751403808594,13.746284484863281,7.546979904174805,6.468839645385742,5.660234451293945,7.681746959686279,8.894655227661133,19.541288375854492,26.549196243286133,21.96710205078125,6.064537048339844
@coef_biketimeshort_multiplier * biketimelong_multiplier * (od_skims['DISTBIKE']-bikeThresh).clip(lower=0)*60/bikeSpeed,util_BIKE_Time_beyond_6_of_a_miles,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@density_index_multiplier*df.density_index,util_BIKE_Destination_zone_densityIndex,-25.893610415911542,-183.76839703803847,-414.6019334849894,-225.08925295206197,-221.6589288278371,-24.401167455202277,-82.42665090347217,-80.6619710727488,-284.55553789232556,-86.08869815910819,-44.15705126560914,-128.0414537691725,-493.43304843304844
@topology_bike_multiplier * df.trip_topology,util_BIKE_Topology,20.0,20.0,40.0,60.0,60.0,60.0,60.0,60.0,40.0,60.0,60.0,60.0,20.0
walk_local_available == False,util_WALK_LOC_Unavailable,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@odt_skims['WLK_LOC_WLK_TOTIVT']/100,util_WALK_LOC_In_vehicle_time,0.0,2.0731000900268555,6.705399990081787,4.248300075531006,2.651700019836426,2.302500009536743,1.051900029182434,2.0404999256134033,2.408400058746338,6.2353997230529785,12.816899299621582,8.654500007629395,1.00190007686615
@coef_short_iwait_multiplier * (odt_skims['WLK_LOC_WLK_IWAIT']/100).clip(upper=waitThresh),util_WALK_LOC_Short_iwait_time,0.0,0.6564500331878662,0.9798908233642578,0.8990306258201599,4.672506332397461,5.076807498931885,3.136162757873535,1.9097832441329956,2.7992453575134277,4.672506332397461,10.130570411682129,10.130570411682129,3.3922202587127686
@coef_long_iwait_multiplier * (odt_skims['WLK_LOC_WLK_IWAIT']/100-waitThresh).clip(0),util_WALK_LOC_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@coef_xwait_multiplier * odt_skims['WLK_LOC_WLK_XWAIT']/100,util_WALK_LOC_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xfers_wlk_multiplier * (odt_skims['WLK_LOC_WLK_BOARDS']-1).clip(0),util_WALK_LOC_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@coef_wacc_multiplier * df.origin_walk_time,util_WALK_LOC_Walk_access_time,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822
@coef_wegr_multiplier * df.destination_walk_time,util_WALK_LOC_Walk_egress_time,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822
@coef_waux_multiplier * odt_skims['WLK_LOC_WLK_WAUX']/100,util_WALK_LOC_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * odt_skims['WLK_LOC_WLK_FAR'],util_WALK_LOC_Fare,0.0,23.261281151157743,23.261281151157743,23.261281151157743,23.261281151157743,23.261281151157743,23.261281151157743,23.261281151157743,23.261281151157743,23.261281151157743,23.261281151157743,23.261281151157743,23.261281151157743
@density_index_multiplier * df.density_index # (2),util_WALK_LOC_Destination_zone_densityIndex,-25.893610415911542,-183.76839703803847,-414.6019334849894,-225.08925295206197,-221.6589288278371,-24.401167455202277,-82.42665090347217,-80.6619710727488,-284.55553789232556,-86.08869815910819,-44.15705126560914,-128.0414537691725,-493.43304843304844
@topology_trn_multiplier * df.trip_topology,util_WALK_LOC_Topology,2.2,2.2,4.4,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,4.4,6.6000000000000005,6.6000000000000005,6.6000000000000005,2.2
walk_lrf_available == False,util_WALK_LRF_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@odt_skims['WLK_LRF_WLK_TOTIVT']/100,util_WALK_LRF_In_vehicle_time,0.0,2.0731000900268555,4.525300025939941,4.248300075531006,2.651700019836426,2.302500009536743,1.051900029182434,2.0404999256134033,2.043800115585327,6.2353997230529785,8.769700050354004,8.654500007629395,1.00190007686615
@(coef_ivt_lrt_multiplier-1) * odt_skims['WLK_LRF_WLK_KEYIVT']/100,util_WALK_LRF_In_vehicle_time_on_Light_Rail,-0.0,-0.0,-1.780931830406189,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@(coef_ivt_ferry_multiplier-coef_ivt_lrt_multiplier) * odt_skims['WLK_LRF_WLK_FERRYIVT']/100,util_WALK_LRF_In_vehicle_time_on_Ferry,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@coef_short_iwait_multiplier * (odt_skims['WLK_LRF_WLK_IWAIT']/100).clip(upper=waitThresh),util_WALK_LRF_Short_iwait_time,0.0,0.6564500331878662,1.5192283391952515,0.8990306258201599,4.672506332397461,5.076807498931885,3.136162757873535,1.9097832441329956,2.273653984069824,4.672506332397461,3.833043098449707,10.130570411682129,3.3922202587127686
@coef_long_iwait_multiplier * (odt_skims['WLK_LRF_WLK_IWAIT']/100-waitThresh).clip(0),util_WALK_LRF_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@coef_xwait_multiplier * odt_skims['WLK_LRF_WLK_XWAIT']/100,util_WALK_LRF_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.649461269378662,0.0,0.0
@xfers_wlk_multiplier * (odt_skims['WLK_LRF_WLK_BOARDS']-1).clip(0),util_WALK_LRF_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.0,0.0,0.0
@coef_wacc_multiplier * df.origin_walk_time # (2),util_WALK_LRF_Walk_access_time,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822
@coef_wegr_multiplier * df.destination_walk_time # (2),util_WALK_LRF_Walk_egress_time,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822
@coef_waux_multiplier * odt_skims['WLK_LRF_WLK_WAUX']/100,util_WALK_LRF_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * odt_skims['WLK_LRF_WLK_FAR'],util_WALK_LRF_Fare,0.0,23.261281151157743,0.0,23.261281151157743,23.261281151157743,23.261281151157743,23.261281151157743,23.261281151157743,23.261281151157743,23.261281151157743,23.261281151157743,23.261281151157743,23.261281151157743
@density_index_multiplier * df.density_index # (3),util_WALK_LRF_Destination_zone_densityIndex,-25.893610415911542,-183.76839703803847,-414.6019334849894,-225.08925295206197,-221.6589288278371,-24.401167455202277,-82.42665090347217,-80.6619710727488,-284.55553789232556,-86.08869815910819,-44.15705126560914,-128.0414537691725,-493.43304843304844
@topology_trn_multiplier * df.trip_topology # (2),util_WALK_LRF_Topology,2.2,2.2,4.4,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,4.4,6.6000000000000005,6.6000000000000005,6.6000000000000005,2.2
walk_express_available == False,util_WALK_EXP_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@odt_skims['WLK_EXP_WLK_TOTIVT']/100,util_WALK_EXP_In_vehicle_time,0.0,2.0731000900268555,4.525300025939941,4.248300075531006,2.651700019836426,2.302500009536743,1.051900029182434,2.0404999256134033,2.043800115585327,6.2353997230529785,8.769700050354004,8.654500007629395,1.00190007686615
@(ivt_exp_multiplier - 1) * odt_skims['WLK_EXP_WLK_KEYIVT']/100,util_WALK_EXP_In_vehicle_time_on_Express_bus,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@coef_short_iwait_multiplier * (odt_skims['WLK_EXP_WLK_IWAIT']/100).clip(upper=waitThresh),util_WALK_EXP_Short_iwait_time,0.0,0.6564500331878662,1.5192283391952515,0.8990306258201599,4.672506332397461,5.076807498931885,3.136162757873535,1.9097832441329956,2.273653984069824,4.672506332397461,3.833043098449707,10.130570411682129,3.3922202587127686
@coef_long_iwait_multiplier * (odt_skims['WLK_EXP_WLK_IWAIT']/100-waitThresh).clip(0),util_WALK_EXP_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@coef_xwait_multiplier * odt_skims['WLK_EXP_WLK_XWAIT']/100,util_WALK_EXP_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.649461269378662,0.0,0.0
@xfers_wlk_multiplier * (odt_skims['WLK_EXP_WLK_BOARDS']-1).clip(0),util_WALK_EXP_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.0,0.0,0.0
@coef_wacc_multiplier * df.origin_walk_time # (3),util_WALK_EXP_Walk_access_time,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822
@coef_wegr_multiplier * df.destination_walk_time # (3),util_WALK_EXP_Walk_egress_time,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822
@coef_waux_multiplier * odt_skims['WLK_EXP_WLK_WAUX']/100,util_WALK_EXP_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * odt_skims['WLK_EXP_WLK_FAR'],util_WALK_EXP_Fare,0.0,23.261281151157743,0.0,23.261281151157743,23.261281151157743,23.261281151157743,23.261281151157743,23.261281151157743,23.261281151157743,23.261281151157743,23.261281151157743,23.261281151157743,23.261281151157743
@density_index_multiplier * df.density_index # (4),util_WALK_EXP_Destination_zone_densityIndex,-25.893610415911542,-183.76839703803847,-414.6019334849894,-225.08925295206197,-221.6589288278371,-24.401167455202277,-82.42665090347217,-80.6619710727488,-284.55553789232556,-86.08869815910819,-44.15705126560914,-128.0414537691725,-493.43304843304844
@topology_trn_multiplier * df.trip_topology # (3),util_WALK_EXP_Topology,2.2,2.2,4.4,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,4.4,6.6000000000000005,6.6000000000000005,6.6000000000000005,2.2
walk_heavyrail_available == False,util_WALK_HVY_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@odt_skims['WLK_HVY_WLK_TOTIVT']/100,util_WALK_HVY_In_vehicle_time,0.0,2.0731000900268555,3.2553000450134277,4.248300075531006,2.651700019836426,2.302500009536743,1.051900029182434,2.0404999256134033,2.043800115585327,6.2353997230529785,8.769700050354004,8.654500007629395,1.00190007686615
@(ivt_hvy_multiplier-1) * odt_skims['WLK_HVY_WLK_KEYIVT']/100,util_WALK_HVY_In_vehicle_time_on_heavy_rail,-0.0,-0.0,-0.6510600447654724,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@coef_short_iwait_multiplier * (odt_skims['WLK_HVY_WLK_IWAIT']/100).clip(upper=waitThresh),util_WALK_HVY_Short_iwait_time,0.0,0.6564500331878662,2.8249857425689697,0.8990306258201599,4.672506332397461,5.076807498931885,3.136162757873535,1.9097832441329956,2.273653984069824,4.672506332397461,3.833043098449707,10.130570411682129,3.3922202587127686
@coef_long_iwait_multiplier * (odt_skims['WLK_HVY_WLK_IWAIT']/100-waitThresh).clip(0),util_WALK_HVY_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@coef_xwait_multiplier * odt_skims['WLK_HVY_WLK_XWAIT']/100,util_WALK_HVY_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.649461269378662,0.0,0.0
@xfers_wlk_multiplier * (odt_skims['WLK_HVY_WLK_BOARDS']-1).clip(0),util_WALK_HVY_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.0,0.0,0.0
@coef_wacc_multiplier * df.origin_walk_time # (4),util_WALK_HVY_Walk_access_time,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822
@coef_wegr_multiplier * df.destination_walk_time # (4),util_WALK_HVY_Walk_egress_time,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822
@coef_waux_multiplier * odt_skims['WLK_HVY_WLK_WAUX']/100,util_WALK_HVY_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * odt_skims['WLK_HVY_WLK_FAR'],util_WALK_HVY_Fare,0.0,23.261281151157743,19.741482029600977,23.261281151157743,23.261281151157743,23.261281151157743,23.261281151157743,23.261281151157743,23.261281151157743,23.261281151157743,23.261281151157743,23.261281151157743,23.261281151157743
@density_index_multiplier * df.density_index # (5),util_WALK_HVY_Destination_zone_densityIndex,-25.893610415911542,-183.76839703803847,-414.6019334849894,-225.08925295206197,-221.6589288278371,-24.401167455202277,-82.42665090347217,-80.6619710727488,-284.55553789232556,-86.08869815910819,-44.15705126560914,-128.0414537691725,-493.43304843304844
@topology_trn_multiplier * df.trip_topology # (4),util_WALK_HVY_Topology,2.2,2.2,4.4,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,4.4,6.6000000000000005,6.6000000000000005,6.6000000000000005,2.2
walk_commuter_available == False,util_WALK_COM_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@odt_skims['WLK_COM_WLK_TOTIVT']/100,util_WALK_COM_In_vehicle_time,0.0,2.0731000900268555,4.525300025939941,4.248300075531006,2.651700019836426,2.302500009536743,1.051900029182434,2.0404999256134033,2.043800115585327,6.2353997230529785,8.769700050354004,8.654500007629395,1.00190007686615
@(ivt_com_multiplier - 1) * odt_skims['WLK_COM_WLK_KEYIVT']/100,util_WALK_COM_In_vehicle_time_on_commuter_rail,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@coef_short_iwait_multiplier * (odt_skims['WLK_COM_WLK_IWAIT']/100).clip(upper=waitThresh),util_WALK_COM_Short_iwait_time,0.0,0.6564500331878662,1.5192283391952515,0.8990306258201599,4.672506332397461,5.076807498931885,3.136162757873535,1.9097832441329956,2.273653984069824,4.672506332397461,3.833043098449707,10.130570411682129,3.3922202587127686
@coef_long_iwait_multiplier * (odt_skims['WLK_COM_WLK_IWAIT']/100-waitThresh).clip(0),util_WALK_COM_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@coef_xwait_multiplier * odt_skims['WLK_COM_WLK_XWAIT']/100,util_WALK_COM_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.649461269378662,0.0,0.0
@xfers_wlk_multiplier * (odt_skims['WLK_COM_WLK_BOARDS']-1).clip(0),util_WALK_COM_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.0,0.0,0.0
@coef_wacc_multiplier * df.origin_walk_time # (5),util_WALK_COM_Walk_access_time,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822
@coef_wegr_multiplier * df.destination_walk_time # (5),util_WALK_COM_Walk_egress_time,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822
@coef_waux_multiplier * odt_skims['WLK_COM_WLK_WAUX']/100,util_WALK_COM_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * odt_skims['WLK_COM_WLK_FAR'],util_WALK_COM_Fare,0.0,23.261281151157743,0.0,23.261281151157743,23.261281151157743,23.261281151157743,23.261281151157743,23.261281151157743,23.261281151157743,23.261281151157743,23.261281151157743,23.261281151157743,23.261281151157743
@density_index_multiplier * df.density_index # (6),util_WALK_COM_Destination_zone_densityIndex,-25.893610415911542,-183.76839703803847,-414.6019334849894,-225.08925295206197,-221.6589288278371,-24.401167455202277,-82.42665090347217,-80.6619710727488,-284.55553789232556,-86.08869815910819,-44.15705126560914,-128.0414537691725,-493.43304843304844
@topology_trn_multiplier * df.trip_topology # (5),util_WALK_COM_Topology,2.2,2.2,4.4,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,4.4,6.6000000000000005,6.6000000000000005,6.6000000000000005,2.2
auto_ownership == 0 # (3),util_DRIVE_LOC_Unavailable_for_zero_auto_households,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (3),util_DRIVE_LOC_Unavailable_for_persons_less_than_16,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@density_index_multiplier * df.density_index # (7),util_DRIVE_LOC_Destination_zone_densityIndex,-25.893610415911542,-183.76839703803847,-414.6019334849894,-225.08925295206197,-221.6589288278371,-24.401167455202277,-82.42665090347217,-80.6619710727488,-284.55553789232556,-86.08869815910819,-44.15705126560914,-128.0414537691725,-493.43304843304844
@topology_trn_multiplier * df.trip_topology # (6),util_DRIVE_LOC_Topology,2.2,2.2,4.4,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,4.4,6.6000000000000005,6.6000000000000005,6.6000000000000005,2.2
outbound & ~drive_local_available_outbound,util_DRIVE_LOC_outbound_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * odt_skims['DRV_LOC_WLK_TOTIVT']/100,util_DRIVE_LOC_outbound_In_vehicle_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * coef_short_iwait_multiplier * (odt_skims['DRV_LOC_WLK_IWAIT']/100).clip(upper=waitThresh),util_DRIVE_LOC_outbound_Short_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * coef_long_iwait_multiplier * (odt_skims['DRV_LOC_WLK_IWAIT']/100-waitThresh).clip(0),util_DRIVE_LOC_outbound_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * coef_xwait_multiplier * odt_skims['DRV_LOC_WLK_XWAIT']/100,util_DRIVE_LOC_outbound_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * xfers_wlk_multiplier * (odt_skims['DRV_LOC_WLK_BOARDS']-1).clip(0),util_DRIVE_LOC_outbound_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * coef_dtim_multiplier * odt_skims['DRV_LOC_WLK_DTIM']/100,util_DRIVE_LOC_outbound_Drive_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * coef_wegr_multiplier * df.destination_walk_time,util_DRIVE_LOC_outbound_Walk_egress_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * coef_waux_multiplier * odt_skims['DRV_LOC_WLK_WAUX']/100,util_DRIVE_LOC_outbound_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * ivt_cost_multiplier * df.ivot * (odt_skims['DRV_LOC_WLK_FAR'] + costPerMile*odt_skims['DRV_LOC_WLK_DDIST']/100),util_DRIVE_LOC_outbound_Fare_and_operating_cost,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * dacc_ratio_multiplier * (odt_skims['DRV_LOC_WLK_DDIST']/100)/ (od_skims['DIST']),util_DRIVE_LOC_outbound_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
inbound & ~drive_local_available_inbound,util_DRIVE_LOC_inbound_Unavailable,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * odt_skims['WLK_LOC_DRV_TOTIVT']/100,util_DRIVE_LOC_inbound_In_vehicle_time,0.0,0.7578999996185303,4.632200241088867,1.5319000482559204,0.667900025844574,1.3364999294281006,0.6378999948501587,2.0404999256134033,2.043800115585327,5.4274001121521,5.40939998626709,6.016300201416016,1.00190007686615
@df.inbound * coef_short_iwait_multiplier * (odt_skims['WLK_LOC_DRV_IWAIT']/100).clip(upper=waitThresh),util_DRIVE_LOC_inbound_Short_iwait_time,0.0,1.3033316093176603,0.9798908767926693,2.7992454089236256,1.4380987217760086,2.7992454089236256,1.4111451868259905,1.9097832539069652,2.2736541282021996,2.044550286037922,10.130570607347488,2.839675470366478,3.392220286037922
@df.inbound * coef_long_iwait_multiplier * (odt_skims['WLK_LOC_DRV_IWAIT']/100-waitThresh).clip(0),util_DRIVE_LOC_inbound_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * coef_xwait_multiplier * odt_skims['WLK_LOC_DRV_XWAIT']/100,util_DRIVE_LOC_inbound_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * xfers_wlk_multiplier * (odt_skims['WLK_LOC_DRV_BOARDS']-1).clip(0),util_DRIVE_LOC_inbound_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * coef_dtim_multiplier * odt_skims['WLK_LOC_DRV_DTIM']/100,util_DRIVE_LOC_inbound_Drive_time,0.0,1.0916126999999998,1.5767739,2.7896769,1.5767739,1.3746234,2.1023652,1.0916126999999998,1.0107525,1.5767739,2.7896769,2.7896769,0.7277418
@df.inbound * coef_wacc_multiplier * df.origin_walk_time,util_DRIVE_LOC_inbound_Walk_access_time,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822
@df.inbound * coef_waux_multiplier * odt_skims['WLK_LOC_DRV_WAUX']/100,util_DRIVE_LOC_inbound_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * ivt_cost_multiplier * df.ivot * (odt_skims['WLK_LOC_DRV_FAR'] + costPerMile*odt_skims['WLK_LOC_DRV_DDIST']/100),util_DRIVE_LOC_inbound_Fare_and_operating_cost,0.0,24.01701162820331,24.352893656431807,25.192595224315724,24.352893656431807,24.21294261674286,24.716764491523165,24.01701162820331,23.96103167935271,24.352893656431807,25.192595224315724,25.192595224315724,23.765103025938046
@df.outbound * dacc_ratio_multiplier * (odt_skims['WLK_LOC_DRV_DDIST']/100)/ (od_skims['DIST']),util_DRIVE_LOC_inbound_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
auto_ownership == 0 # (4),util_DRIVE_LRF_Unavailable_for_zero_auto_households,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (4),util_DRIVE_LRF_Unavailable_for_persons_less_than_16,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@density_index_multiplier * df.density_index # (8),util_DRIVE_LRF_Destination_zone_densityIndex,-25.893610415911542,-183.76839703803847,-414.6019334849894,-225.08925295206197,-221.6589288278371,-24.401167455202277,-82.42665090347217,-80.6619710727488,-284.55553789232556,-86.08869815910819,-44.15705126560914,-128.0414537691725,-493.43304843304844
@topology_trn_multiplier * df.trip_topology # (7),util_DRIVE_LRF_Topology,2.2,2.2,4.4,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,4.4,6.6000000000000005,6.6000000000000005,6.6000000000000005,2.2
outbound & ~drive_lrf_available_outbound,util_DRIVE_LRF_outbound_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * odt_skims['DRV_LRF_WLK_TOTIVT']/100,util_DRIVE_LRF_outbound_In_vehicle_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * (coef_ivt_lrt_multiplier - 1)*odt_skims['DRV_LRF_WLK_KEYIVT']/100,util_DRIVE_LRF_outbound_In_vehicle_time_on_LR,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * (coef_ivt_ferry_multiplier-coef_ivt_lrt_multiplier)*odt_skims['DRV_LRF_WLK_FERRYIVT']/100,util_DRIVE_LRF_outbound_In_vehicle_time_on_Ferry,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * coef_short_iwait_multiplier * (odt_skims['DRV_LRF_WLK_IWAIT']/100).clip(upper=waitThresh),util_DRIVE_LRF_outbound_Short_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * coef_long_iwait_multiplier * (odt_skims['DRV_LRF_WLK_IWAIT']/100-waitThresh).clip(0),util_DRIVE_LRF_outbound_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * coef_xwait_multiplier * odt_skims['DRV_LRF_WLK_XWAIT']/100,util_DRIVE_LRF_outbound_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * xfers_drv_multiplier * (odt_skims['DRV_LRF_WLK_BOARDS']-1).clip(0),util_DRIVE_LRF_outbound_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * coef_dtim_multiplier * odt_skims['DRV_LRF_WLK_DTIM']/100,util_DRIVE_LRF_outbound_Drive_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * coef_wegr_multiplier * df.destination_walk_time # (2),util_DRIVE_LRF_outbound_Walk_egress_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * coef_waux_multiplier * odt_skims['DRV_LRF_WLK_WAUX']/100,util_DRIVE_LRF_outbound_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * ivt_cost_multiplier * df.ivot * (odt_skims['DRV_LRF_WLK_FAR'] + costPerMile * odt_skims['DRV_LRF_WLK_DDIST']/100),util_DRIVE_LRF_outbound_Fare_and_operating_cost,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * dacc_ratio_multiplier * (odt_skims['DRV_LRF_WLK_DDIST']/100) / od_skims['DIST'],util_DRIVE_LRF_outbound_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
inbound & ~drive_lrf_available_inbound,util_DRIVE_LRF_inbound_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@df.inbound * odt_skims['WLK_LRF_DRV_TOTIVT']/100,util_DRIVE_LRF_inbound_In_vehicle_time,0.0,26.282800674438477,27.363601684570312,32.828399658203125,35.87120056152344,36.89250183105469,37.85389709472656,37.85389709472656,40.217098236083984,28.670900344848633,24.38909912109375,26.181900024414062,29.881898880004883
@df.inbound * (coef_ivt_lrt_multiplier - 1)*odt_skims['WLK_LRF_DRV_KEYIVT']/100,util_DRIVE_LRF_inbound_In_vehicle_time_on_LR,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-8.679627069702148,-0.0,-0.0,-0.0
@df.inbound * (coef_ivt_ferry_multiplier-coef_ivt_lrt_multiplier)*odt_skims['WLK_LRF_DRV_FERRYIVT']/100,util_DRIVE_LRF_inbound_In_vehicle_time_on_Ferry,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.inbound * coef_short_iwait_multiplier * (odt_skims['WLK_LRF_DRV_IWAIT']/100).clip(upper=waitThresh),util_DRIVE_LRF_inbound_Short_iwait_time,0.0,4.748515198731422,13.4767,13.4767,13.4767,13.4767,13.4767,13.4767,13.4767,6.932010344538688,13.4767,13.4767,4.748515198731422
@df.inbound * coef_long_iwait_multiplier * (odt_skims['WLK_LRF_DRV_IWAIT']/100-waitThresh).clip(0),util_DRIVE_LRF_inbound_Long_iwait_time,0.0,0.0,3.3733123929977413,3.3733123929977413,3.3733123929977413,3.3733123929977413,3.3733123929977413,3.3733123929977413,3.3733123929977413,0.0,3.3733123929977413,3.3733123929977413,0.0
@df.inbound * coef_xwait_multiplier * odt_skims['WLK_LRF_DRV_XWAIT']/100,util_DRIVE_LRF_inbound_transfer_wait_time,0.0,20.215049999999998,0.0,0.0,0.0,0.0,0.0,0.0,0.0,20.215049999999998,0.0,0.0,20.215049999999998
@df.inbound * xfers_drv_multiplier * (odt_skims['WLK_LRF_DRV_BOARDS']-1).clip(0),util_DRIVE_LRF_inbound_number_of_transfers,0.0,15.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,15.0,0.0,0.0,15.0
@df.inbound * coef_dtim_multiplier * odt_skims['WLK_LRF_DRV_DTIM']/100,util_DRIVE_LRF_inbound_Drive_time,0.0,17.8566275,17.8566275,17.8566275,17.8566275,17.8566275,17.8566275,17.8566275,17.8566275,17.8566275,17.8566275,17.8566275,17.8566275
@df.inbound * coef_wacc_multiplier * df.origin_walk_time # (2),util_DRIVE_LRF_inbound_Walk_access_time,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822
@df.inbound * coef_waux_multiplier * odt_skims['WLK_LRF_DRV_WAUX']/100,util_DRIVE_LRF_inbound_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * ivt_cost_multiplier * df.ivot * (odt_skims['WLK_LRF_DRV_FAR'] + costPerMile * odt_skims['WLK_LRF_DRV_DDIST']/100),util_DRIVE_LRF_inbound_Fare_and_operating_cost,0.0,86.63251673344344,63.371230912035934,63.371230912035934,63.371230912035934,63.371230912035934,63.371230912035934,63.371230912035934,63.371230912035934,86.63251673344344,63.371230912035934,63.371230912035934,86.63251673344344
@df.inbound * dacc_ratio_multiplier * (odt_skims['WLK_LRF_DRV_DDIST']/100)/ od_skims['DIST'],util_DRIVE_LRF_inbound_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
auto_ownership == 0 # (5),util_DRIVE_EXP_Unavailable_for_zero_auto_households,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (5),util_DRIVE_EXP_Unavailable_for_persons_less_than_16,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@density_index_multiplier * df.density_index # (9),util_DRIVE_EXP_Destination_zone_densityIndex,-25.893610415911542,-183.76839703803847,-414.6019334849894,-225.08925295206197,-221.6589288278371,-24.401167455202277,-82.42665090347217,-80.6619710727488,-284.55553789232556,-86.08869815910819,-44.15705126560914,-128.0414537691725,-493.43304843304844
@topology_trn_multiplier * df.trip_topology # (8),util_DRIVE_EXP_Topology,2.2,2.2,4.4,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,4.4,6.6000000000000005,6.6000000000000005,6.6000000000000005,2.2
outbound & ~drive_express_available_outbound,util_DRIVE_EXP_outbound_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * odt_skims['DRV_EXP_WLK_TOTIVT']/100,util_DRIVE_EXP_outbound_In_vehicle_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * (ivt_exp_multiplier - 1) * odt_skims['DRV_EXP_WLK_KEYIVT']/100,util_DRIVE_EXP_outbound_In_vehicle_time_on_EXP,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * coef_short_iwait_multiplier * (odt_skims['DRV_EXP_WLK_IWAIT']/100).clip(upper=waitThresh),util_DRIVE_EXP_outbound_Short_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * coef_long_iwait_multiplier * (odt_skims['DRV_EXP_WLK_IWAIT']/100-waitThresh).clip(0),util_DRIVE_EXP_outbound_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * coef_xwait_multiplier * odt_skims['DRV_EXP_WLK_XWAIT']/100,util_DRIVE_EXP_outbound_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * xfers_drv_multiplier * (odt_skims['DRV_EXP_WLK_BOARDS']-1).clip(0),util_DRIVE_EXP_outbound_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * coef_dtim_multiplier * odt_skims['DRV_EXP_WLK_DTIM']/100,util_DRIVE_EXP_outbound_Drive_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * coef_wegr_multiplier * df.destination_walk_time # (3),util_DRIVE_EXP_outbound_Walk_egress_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * coef_waux_multiplier * odt_skims['DRV_EXP_WLK_WAUX']/100,util_DRIVE_EXP_outbound_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * ivt_cost_multiplier * df.ivot * (odt_skims['DRV_EXP_WLK_FAR'] + costPerMile * odt_skims['DRV_EXP_WLK_DDIST']/100),util_DRIVE_EXP_outbound_Fare_and_operating_cost,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * dacc_ratio_multiplier * (odt_skims['DRV_EXP_WLK_DDIST']/100) / od_skims['DIST'],util_DRIVE_EXP_outbound_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
inbound & ~drive_express_available_inbound,util_DRIVE_EXP_inbound_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@df.inbound * odt_skims['WLK_EXP_DRV_TOTIVT']/100,util_DRIVE_EXP_inbound_In_vehicle_time,0.0,26.282800674438477,27.363601684570312,32.828399658203125,35.87120056152344,36.89250183105469,37.85389709472656,37.85389709472656,40.217098236083984,28.670900344848633,24.38909912109375,26.181900024414062,29.881898880004883
@df.inbound * (ivt_exp_multiplier - 1) * odt_skims['WLK_EXP_DRV_KEYIVT']/100,util_DRIVE_EXP_inbound_In_vehicle_time_on_EXP,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.inbound * coef_short_iwait_multiplier * (odt_skims['WLK_EXP_DRV_IWAIT']/100).clip(upper=waitThresh),util_DRIVE_EXP_inbound_Short_iwait_time,0.0,4.748515198731422,13.4767,13.4767,13.4767,13.4767,13.4767,13.4767,13.4767,6.932010344538688,13.4767,13.4767,4.748515198731422
@df.inbound * coef_long_iwait_multiplier * (odt_skims['WLK_EXP_DRV_IWAIT']/100-waitThresh).clip(0),util_DRIVE_EXP_inbound_Long_iwait_time,0.0,0.0,3.3733123929977413,3.3733123929977413,3.3733123929977413,3.3733123929977413,3.3733123929977413,3.3733123929977413,3.3733123929977413,0.0,3.3733123929977413,3.3733123929977413,0.0
@df.inbound * coef_xwait_multiplier * odt_skims['WLK_EXP_DRV_XWAIT']/100,util_DRIVE_EXP_inbound_transfer_wait_time,0.0,20.215049999999998,0.0,0.0,0.0,0.0,0.0,0.0,0.0,20.215049999999998,0.0,0.0,20.215049999999998
@df.inbound * xfers_drv_multiplier * (odt_skims['WLK_EXP_DRV_BOARDS']-1).clip(0),util_DRIVE_EXP_inbound_number_of_transfers,0.0,15.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,15.0,0.0,0.0,15.0
@df.inbound * coef_dtim_multiplier * odt_skims['WLK_EXP_DRV_DTIM']/100,util_DRIVE_EXP_inbound_Drive_time,0.0,17.8566275,17.8566275,17.8566275,17.8566275,17.8566275,17.8566275,17.8566275,17.8566275,17.8566275,17.8566275,17.8566275,17.8566275
@df.inbound * coef_wacc_multiplier * df.origin_walk_time # (3),util_DRIVE_EXP_inbound_Walk_access_time,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822
@df.inbound * coef_waux_multiplier * odt_skims['WLK_EXP_DRV_WAUX']/100,util_DRIVE_EXP_inbound_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * ivt_cost_multiplier * df.ivot * (odt_skims['WLK_EXP_DRV_FAR'] + costPerMile * odt_skims['WLK_EXP_DRV_DDIST']/100),util_DRIVE_EXP_inbound_Fare_and_operating_cost,0.0,86.63251673344344,63.371230912035934,63.371230912035934,63.371230912035934,63.371230912035934,63.371230912035934,63.371230912035934,63.371230912035934,86.63251673344344,63.371230912035934,63.371230912035934,86.63251673344344
@df.inbound * dacc_ratio_multiplier * (odt_skims['WLK_EXP_DRV_DDIST']/100) / od_skims['DIST'],util_DRIVE_EXP_inbound_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
auto_ownership == 0 # (6),util_DRIVE_HVY_Unavailable_for_zero_auto_households,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (6),util_DRIVE_HVY_Unavailable_for_persons_less_than_16,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@density_index_multiplier * df.density_index # (10),util_DRIVE_HVY_Destination_zone_densityIndex,-25.893610415911542,-183.76839703803847,-414.6019334849894,-225.08925295206197,-221.6589288278371,-24.401167455202277,-82.42665090347217,-80.6619710727488,-284.55553789232556,-86.08869815910819,-44.15705126560914,-128.0414537691725,-493.43304843304844
@topology_trn_multiplier * df.trip_topology # (9),util_DRIVE_HVY_Topology,2.2,2.2,4.4,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,4.4,6.6000000000000005,6.6000000000000005,6.6000000000000005,2.2
outbound & ~drive_heavyrail_available_outbound,util_DRIVE_HVY_outbound_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * odt_skims['DRV_HVY_WLK_TOTIVT']/100,util_DRIVE_HVY_outbound_In_vehicle_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * (ivt_hvy_multiplier - 1) * odt_skims['DRV_HVY_WLK_KEYIVT']/100,util_DRIVE_HVY_outbound_In_vehicle_time_on_HVY,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * coef_short_iwait_multiplier * (odt_skims['DRV_HVY_WLK_IWAIT']/100).clip(upper=waitThresh),util_DRIVE_HVY_outbound_Short_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * coef_long_iwait_multiplier * (odt_skims['DRV_HVY_WLK_IWAIT']/100-waitThresh).clip(0),util_DRIVE_HVY_outbound_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * coef_xwait_multiplier * odt_skims['DRV_HVY_WLK_XWAIT']/100,util_DRIVE_HVY_outbound_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * xfers_drv_multiplier * (odt_skims['DRV_HVY_WLK_BOARDS']-1).clip(0),util_DRIVE_HVY_outbound_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * coef_dtim_multiplier * odt_skims['DRV_HVY_WLK_DTIM']/100,util_DRIVE_HVY_outbound_Drive_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * coef_wegr_multiplier * df.destination_walk_time # (4),util_DRIVE_HVY_outbound_Walk_egress_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * coef_waux_multiplier * odt_skims['DRV_HVY_WLK_WAUX']/100,util_DRIVE_HVY_outbound_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * ivt_cost_multiplier * df.ivot * (odt_skims['DRV_HVY_WLK_FAR'] + costPerMile * odt_skims['DRV_HVY_WLK_DDIST']/100),util_DRIVE_HVY_outbound_Fare_and_operating_cost,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * dacc_ratio_multiplier * (odt_skims['DRV_HVY_WLK_DDIST']/100) / od_skims['DIST'],util_DRIVE_HVY_outbound_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
inbound & ~drive_heavyrail_available_inbound,util_DRIVE_HVY_inbound_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@df.inbound * odt_skims['WLK_HVY_DRV_TOTIVT']/100,util_DRIVE_HVY_inbound_In_vehicle_time,0.0,18.980501174926758,15.725200653076172,17.50279998779297,18.980501174926758,18.980501174926758,20.44260025024414,20.44260025024414,20.44260025024414,24.407899856567383,19.43280029296875,15.725200653076172,18.980501174926758
@df.inbound * (ivt_hvy_multiplier - 1) * odt_skims['WLK_HVY_DRV_KEYIVT']/100,util_DRIVE_HVY_inbound_In_vehicle_time_on_HVY,-0.0,-3.796100097656249,-3.1450400390624993,-3.500560058593749,-3.796100097656249,-3.796100097656249,-4.0885200195312486,-4.0885200195312486,-4.0885200195312486,-3.796100097656249,-3.1450400390624993,-3.1450400390624993,-3.796100097656249
@df.inbound * coef_short_iwait_multiplier * (odt_skims['WLK_HVY_DRV_IWAIT']/100).clip(upper=waitThresh),util_DRIVE_HVY_inbound_Short_iwait_time,0.0,2.8249858396053313,2.8249858396053313,2.8249858396053313,2.8249858396053313,2.8249858396053313,2.8249858396053313,2.8249858396053313,2.8249858396053313,2.3359163714146614,10.421936692724227,2.8249858396053313,2.8249858396053313
@df.inbound * coef_long_iwait_multiplier * (odt_skims['WLK_HVY_DRV_IWAIT']/100-waitThresh).clip(0),util_DRIVE_HVY_inbound_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * coef_xwait_multiplier * odt_skims['WLK_HVY_DRV_XWAIT']/100,util_DRIVE_HVY_inbound_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.5336195999999997,2.5336195999999997,0.0,0.0
@df.inbound * xfers_drv_multiplier * (odt_skims['WLK_HVY_DRV_BOARDS']-1).clip(0),util_DRIVE_HVY_inbound_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,15.0,15.0,0.0,0.0
@df.outbound * coef_dtim_multiplier * odt_skims['DRV_HVY_WLK_DTIM']/100 # (2),util_DRIVE_HVY_inbound_Drive_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * coef_wacc_multiplier * df.origin_walk_time # (4),util_DRIVE_HVY_inbound_Walk_access_time,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822
@coef_waux_multiplier * odt_skims['WLK_HVY_DRV_WAUX']/100,util_DRIVE_HVY_inbound_Walk_other_time,0.0,8.086019515991211,8.086019515991211,8.086019515991211,8.086019515991211,8.086019515991211,8.086019515991211,8.086019515991211,8.086019515991211,12.668098449707031,11.050893783569336,8.086019515991211,8.086019515991211
@df.inbound * ivt_cost_multiplier * df.ivot * (odt_skims['WLK_HVY_DRV_FAR'] + costPerMile * odt_skims['WLK_HVY_DRV_DDIST']/100),util_DRIVE_HVY_inbound_Fare_and_operating_cost,0.0,57.739091830917936,57.739091830917936,57.739091830917936,57.739091830917936,57.739091830917936,57.739091830917936,57.739091830917936,57.739091830917936,81.00037298207567,81.00037298207567,57.739091830917936,57.739091830917936
@df.inbound * dacc_ratio_multiplier * (odt_skims['WLK_HVY_DRV_DDIST']/100)/ od_skims['DIST'],util_DRIVE_HVY_inbound_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
auto_ownership == 0 # (7),util_DRIVE_COM_Unavailable_for_zero_auto_households,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (7),util_DRIVE_COM_Unavailable_for_persons_less_than_16,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@density_index_multiplier * df.density_index # (11),util_DRIVE_COM_Destination_zone_densityIndex,-25.893610415911542,-183.76839703803847,-414.6019334849894,-225.08925295206197,-221.6589288278371,-24.401167455202277,-82.42665090347217,-80.6619710727488,-284.55553789232556,-86.08869815910819,-44.15705126560914,-128.0414537691725,-493.43304843304844
@topology_trn_multiplier * df.trip_topology # (10),util_DRIVE_COM_Topology,2.2,2.2,4.4,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,4.4,6.6000000000000005,6.6000000000000005,6.6000000000000005,2.2
outbound & ~drive_commuter_available_outbound,util_DRIVE_COM_outbound_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * odt_skims['DRV_COM_WLK_TOTIVT']/100,util_DRIVE_COM_outbound_In_vehicle_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * (ivt_com_multiplier - 1) * odt_skims['DRV_COM_WLK_KEYIVT']/100,util_DRIVE_COM_outbound_In_vehicle_time_on_COM,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * coef_short_iwait_multiplier * (odt_skims['DRV_COM_WLK_IWAIT']/100).clip(upper=waitThresh),util_DRIVE_COM_outbound_Short_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * coef_long_iwait_multiplier * (odt_skims['DRV_COM_WLK_IWAIT']/100-waitThresh).clip(0),util_DRIVE_COM_outbound_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * coef_xwait_multiplier * odt_skims['DRV_COM_WLK_XWAIT']/100,util_DRIVE_COM_outbound_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * xfers_drv_multiplier * (odt_skims['DRV_COM_WLK_BOARDS']-1).clip(0),util_DRIVE_COM_outbound_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * coef_dtim_multiplier * odt_skims['DRV_COM_WLK_DTIM']/100,util_DRIVE_COM_outbound_Drive_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * coef_wegr_multiplier * df.destination_walk_time # (5),util_DRIVE_COM_outbound_Walk_egress_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * coef_waux_multiplier * odt_skims['DRV_COM_WLK_WAUX']/100,util_DRIVE_COM_outbound_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * ivt_cost_multiplier * df.ivot * (odt_skims['DRV_COM_WLK_FAR'] + costPerMile * odt_skims['DRV_COM_WLK_DDIST']/100),util_DRIVE_COM_outbound_Fare_and_operating_cost,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * dacc_ratio_multiplier * (odt_skims['DRV_COM_WLK_DDIST']/100) / od_skims['DIST'],util_DRIVE_COM_outbound_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
inbound & ~drive_commuter_available_inbound,util_DRIVE_COM_inbound_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@df.inbound * odt_skims['WLK_COM_DRV_TOTIVT']/100,util_DRIVE_COM_inbound_In_vehicle_time,0.0,29.887300491333008,32.21159744262695,25.475099563598633,25.475099563598633,27.7549991607666,34.750301361083984,28.26580047607422,28.26580047607422,20.604198455810547,24.293798446655273,25.475099563598633,33.142398834228516
@df.inbound * (ivt_com_multiplier - 1) * odt_skims['WLK_COM_DRV_KEYIVT']/100,util_DRIVE_COM_inbound_In_vehicle_time_on_COM,-0.0,-4.120839843749999,-4.120839843749999,-4.120839843749999,-4.120839843749999,-4.120839843749999,-4.120839843749999,-4.120839843749999,-4.120839843749999,-4.120839843749999,-4.120839843749999,-4.120839843749999,-4.120839843749999
@df.inbound * coef_short_iwait_multiplier * (odt_skims['WLK_COM_DRV_IWAIT']/100).clip(upper=waitThresh),util_DRIVE_COM_inbound_Short_iwait_time,0.0,2.052905780659914,6.095915298695564,2.052905780659914,2.052905780659914,10.138925941314696,3.5086590172219276,3.5086590172219276,3.5086590172219276,13.4767,6.095915298695564,2.052905780659914,2.052905780659914
@df.inbound * coef_long_iwait_multiplier * (odt_skims['WLK_COM_DRV_IWAIT']/100-waitThresh).clip(0),util_DRIVE_COM_inbound_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,10.111178092575072,0.0,0.0,0.0
@df.inbound * coef_xwait_multiplier * odt_skims['WLK_COM_DRV_XWAIT']/100,util_DRIVE_COM_inbound_transfer_wait_time,0.0,33.69175,33.69175,33.69175,33.69175,33.69175,33.69175,33.69175,33.69175,0.0,33.69175,33.69175,33.69175
@df.inbound * xfers_drv_multiplier * (odt_skims['WLK_COM_DRV_BOARDS']-1).clip(0),util_DRIVE_COM_inbound_number_of_transfers,0.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,0.0,15.0,15.0,15.0
@df.inbound * coef_dtim_multiplier * odt_skims['WLK_COM_DRV_DTIM']/100,util_DRIVE_COM_inbound_Drive_time,0.0,23.7459454,23.7459454,23.7459454,23.7459454,23.7459454,23.7459454,23.7459454,23.7459454,23.7459454,23.7459454,23.7459454,23.7459454
@df.inbound * coef_wacc_multiplier * df.origin_walk_time # (5),util_DRIVE_COM_inbound_Walk_access_time,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822
@df.inbound * coef_waux_multiplier * odt_skims['WLK_COM_DRV_WAUX']/100,util_DRIVE_COM_inbound_Walk_other_time,0.0,4.04301,4.04301,4.04301,4.04301,4.04301,4.04301,4.04301,4.04301,2.69534,4.04301,4.04301,4.04301
@df.inbound * ivt_cost_multiplier * df.ivot * (odt_skims['WLK_COM_DRV_FAR'] + costPerMile * odt_skims['WLK_COM_DRV_DDIST']/100),util_DRIVE_COM_inbound_Fare_and_operating_cost,0.0,95.79220288048421,95.79220288048421,95.79220288048421,95.79220288048421,95.79220288048421,72.53092172932647,95.79220288048421,95.79220288048421,72.53092172932647,95.79220288048421,95.79220288048421,95.79220288048421
@df.inbound * dacc_ratio_multiplier * (odt_skims['WLK_COM_DRV_DDIST']/100) / od_skims['DIST'],util_DRIVE_COM_inbound_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@odt_skims['HOV2TOLL_TIME'] # (2),util_Taxi_In_vehicle_time,0.4399999976158142,2.0299999713897705,4.820000171661377,3.490000009536743,2.119999885559082,1.7599999904632568,1.350000023841858,1.7599999904632568,2.0799999237060547,4.480000019073486,5.639999866485596,4.820000171661377,1.409999966621399
@ridehail_wait_time_multiplier * df.origTaxiWaitTime,util_Taxi_Wait_time,8.25,8.25,8.25,8.25,8.25,8.25,8.25,8.25,8.25,8.25,8.25,8.25,8.25
@ivt_cost_multiplier * df.ivot * odt_skims['HOV2TOLL_VTOLL'],util_Taxi_Tolls,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * odt_skims['HOV2TOLL_BTOLL'],util_Taxi_Bridge_toll,0.030606949339181372,0.13007953640181738,0.2815839348326268,0.20812725459427517,0.12395814334142755,0.1147760583116336,0.08722980322225174,0.1147760583116336,0.13007953640181738,0.2831142808173288,0.38258686103877865,0.31831225670863944,0.09488154226734363
@ivt_cost_multiplier * df.ivot * (Taxi_baseFare + odt_skims['HOV2TOLL_DIST'] * Taxi_costPerMile + odt_skims['HOV2TOLL_TIME'] * Taxi_costPerMinute)*100,util_Taxi_Fare,39.26871518350775,59.65294340235543,91.37704157052086,75.96644327490382,58.73473216290156,55.71995458653439,50.51676729264949,56.42391446922387,60.08143881861895,91.56068454813816,111.63884721867805,98.4166403974156,51.664532254124985
@odt_skims['HOV2TOLL_TIME'] ,util_TNC_Single_In_vehicle_time,0.4399999976158142,2.0299999713897705,4.820000171661377,3.490000009536743,2.119999885559082,1.7599999904632568,1.350000023841858,1.7599999904632568,2.0799999237060547,4.480000019073486,5.639999866485596,4.820000171661377,1.409999966621399
@ridehail_wait_time_multiplier * df.origSingleTNCWaitTime,util_TNC_Single_Wait_time,4.500000000000001,4.500000000000001,4.500000000000001,4.500000000000001,4.500000000000001,4.500000000000001,4.500000000000001,4.500000000000001,4.500000000000001,4.500000000000001,4.500000000000001,4.500000000000001,4.500000000000001
@ivt_cost_multiplier * df.ivot * odt_skims['HOV2TOLL_VTOLL'] # (2),util_TNC_Single_Tolls,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_BTOLL'] + dot_skims['HOV2TOLL_BTOLL']),util_TNC_Single_Bridge_toll,0.061213898678362744,0.2479162866828551,0.5708195995887638,0.41625450918855034,0.24179488450088368,0.2326128085926713,0.20353619839700582,0.24179488450088368,0.2922963567255412,0.5677589076193598,0.7881289483344145,0.6534583557353278,0.2203700407150548
"@ivt_cost_multiplier * df.ivot * np.maximum(TNC_single_baseFare + odt_skims['HOV2TOLL_DIST'] * TNC_single_costPerMile + odt_skims['HOV2TOLL_TIME'] * TNC_single_costPerMinute, TNC_single_costMinimum) * 100",util_TNC_Single_Cost,110.18501306026214,110.18501306026214,110.18501306026214,110.18501306026214,110.18501306026214,110.18501306026214,110.18501306026214,110.18501306026214,110.18501306026214,110.18501306026214,110.18501306026214,110.18501306026214,110.18501306026214
@odt_skims['HOV2TOLL_TIME'] * TNC_shared_IVTFactor,util_TNC_Shared_In_vehicle_time,0.6599999666213989,3.0450000762939453,7.2300004959106445,5.235000133514404,3.179999828338623,2.6399998664855957,2.0250000953674316,2.6399998664855957,3.119999885559082,6.720000267028809,8.460000038146973,7.2300004959106445,2.115000009536743
@ridehail_wait_time_multiplier * df.origSharedTNCWaitTime,util_TNC_Shared_Wait_time,7.499999999999998,7.499999999999998,7.499999999999998,7.499999999999998,7.499999999999998,7.499999999999998,7.499999999999998,7.499999999999998,7.499999999999998,7.499999999999998,7.499999999999998,7.499999999999998,7.499999999999998
@ivt_cost_multiplier * df.ivot * odt_skims['HOV2TOLL_VTOLL'] # (3),util_TNC_Shared_Tolls,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_BTOLL'] + dot_skims['HOV2TOLL_BTOLL']) # (2),util_TNC_Shared_Bridge_toll,0.061213898678362744,0.2479162866828551,0.5708195995887638,0.41625450918855034,0.24179488450088368,0.2326128085926713,0.20353619839700582,0.24179488450088368,0.2922963567255412,0.5677589076193598,0.7881289483344145,0.6534583557353278,0.2203700407150548
"@ivt_cost_multiplier * df.ivot * np.maximum(TNC_shared_baseFare + odt_skims['HOV2TOLL_DIST'] * TNC_shared_costPerMile + odt_skims['HOV2TOLL_TIME']* TNC_shared_costPerMinute, TNC_shared_costMinimum) * 100",util_TNC_Shared_Cost,45.910423324653436,45.910423324653436,52.642424177535105,47.52493961553553,45.910423324653436,45.910423324653436,45.910423324653436,45.910423324653436,45.910423324653436,52.28432183063442,58.27716444182888,54.26459165104581,45.910423324653436
tour_mode_is_auto,util_tour_mode_is_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
tour_mode_is_walk,util_tour_mode_is_walk,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
tour_mode_is_bike,util_tour_mode_is_bike,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
tour_mode_is_walk_transit,util_tour_mode_is_walk_transit,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
tour_mode_is_drive_transit,util_tour_mode_is_drive_transit,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
tour_mode_is_ride_hail,util_tour_mode_is_ride_hail,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.i_tour_mode.isin(I_SOV_MODES)),util_Drive_Alone_tour_mode_ASC_shared_ride_2_df_is_indiv,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.i_tour_mode.isin(I_SOV_MODES)) # (2),util_Drive_Alone_tour_mode_ASC_shared_ride_3_plus,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.i_tour_mode.isin(I_SOV_MODES)) # (3),util_Drive_Alone_tour_mode_ASC_walk,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.i_tour_mode.isin(I_SOV_MODES)) # (4),util_Drive_Alone_tour_mode_ASC_ride_hail,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.i_tour_mode.isin(I_SR2_MODES)),util_Shared_Ride_2_tour_mode_ASC_shared_ride_2,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.i_tour_mode.isin(I_SR2_MODES)) # (2),util_Shared_Ride_2_tour_mode_ASC_shared_ride_3_plus,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.i_tour_mode.isin(I_SR2_MODES)) # (3),util_Shared_Ride_2_tour_mode_ASC_walk,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.i_tour_mode.isin(I_SR2_MODES)) # (4),util_Shared_Ride_2_tour_mode_ASC_ride_hail,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.i_tour_mode.isin(I_SR3P_MODES)),util_Shared_Ride_3_tour_mode_ASC_shared_ride_2,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.i_tour_mode.isin(I_SR3P_MODES)) # (2),util_Shared_Ride_3_tour_mode_ASC_shared_ride_3_plus,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.i_tour_mode.isin(I_SR3P_MODES)) # (3),util_Shared_Ride_3_tour_mode_ASC_walk,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.i_tour_mode.isin(I_SR3P_MODES)) # (4),util_Shared_Ride_3_tour_mode_ASC_ride_hail,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.is_indiv & (df.i_tour_mode == I_WALK_MODE),util_Walk_tour_mode_ASC_ride_hail,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@df.is_indiv & (df.i_tour_mode == I_BIKE_MODE),util_Bike_tour_mode_ASC_walk,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.is_indiv & (df.i_tour_mode == I_BIKE_MODE) # (2),util_Bike_tour_mode_ASC_ride_hail,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.tour_mode_is_walk_transit & ~df.walk_ferry_available),util_Walk_to_Transit_tour_mode_ASC_light_rail,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.tour_mode_is_walk_transit & df.walk_ferry_available),util_Walk_to_Transit_tour_mode_ASC_ferry,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.tour_mode_is_walk_transit),util_Walk_to_Transit_tour_mode_ASC_express_bus,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.tour_mode_is_walk_transit) # (2),util_Walk_to_Transit_tour_mode_ASC_heavy_rail,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.tour_mode_is_walk_transit) # (3),util_Walk_to_Transit_tour_mode_ASC_commuter_rail,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.tour_mode_is_walk_transit) # (4),util_Walk_to_Transit_tour_mode_ASC_shared_ride_2,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.tour_mode_is_walk_transit) # (5),util_Walk_to_Transit_tour_mode_ASC_shared_ride_3_plus,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.tour_mode_is_walk_transit) # (6),util_Walk_to_Transit_tour_mode_ASC_walk,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.tour_mode_is_walk_transit) # (7),util_Walk_to_Transit_tour_mode_ASC_ride_hail,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.tour_mode_is_drive_transit & ~df.drive_ferry_available),util_Drive_to_Transit_tour_mode_ASC_light_rail_skims_differ,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.tour_mode_is_drive_transit & df.drive_ferry_available),util_Drive_to_Transit_tour_mode_ASC_ferry,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.tour_mode_is_drive_transit),util_Drive_to_Transit_tour_mode_ASC_express_bus,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.tour_mode_is_drive_transit) # (2),util_Drive_to_Transit_tour_mode_ASC_heavy_rail,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.tour_mode_is_drive_transit) # (3),util_Drive_to_Transit_tour_mode_ASC_commuter_rail,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.tour_mode_is_drive_transit) # (4),util_Drive_to_Transit_tour_mode_ASC_ride_hail,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.tour_mode_is_ride_hail),util_Ride_Hail_tour_mode_ASC_shared_ride_2,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.tour_mode_is_ride_hail) # (2),util_Ride_Hail_tour_mode_ASC_shared_ride_3_plus,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.tour_mode_is_ride_hail) # (3),util_Ride_Hail_tour_mode_ASC_walk,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.i_tour_mode.isin(I_RIDE_HAIL_MODES)),util_Ride_Hail_tour_mode_ASC_ride_hail_taxi,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.i_tour_mode.isin(I_RIDE_HAIL_MODES)) # (2),util_Ride_Hail_tour_mode_ASC_ride_hail_single,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.tour_mode_is_walk & (od_skims['DISTWALK'] > 3),util_Walk_not_available_for_long_distances,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.tour_mode_is_walk & (od_skims['DISTBIKE'] > 8),util_Bike_not_available_for_long_distances,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@origin_density_applied*(origin_density_index_multiplier*df.origin_density_index).clip(origin_density_index_max),util_origin_density_index,-15.0,-15.0,-15.0,-15.0,-15.0,-15.0,-15.0,-15.0,-15.0,-15.0,-15.0,-15.0,-15.0
@walk_express_penalty * ~(df.first_trip | df.first_trip),util_walk_express_penalty,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@adjust_tnc_shared,util_adjust_tnc_shared,30.0,30.0,30.0,30.0,30.0,30.0,30.0,30.0,30.0,30.0,30.0,30.0,30.0
