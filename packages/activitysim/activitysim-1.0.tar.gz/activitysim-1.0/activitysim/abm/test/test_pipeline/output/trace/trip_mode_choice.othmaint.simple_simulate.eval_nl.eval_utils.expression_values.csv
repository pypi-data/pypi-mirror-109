Expression,Label,0,1
sov_available == False,util_DRIVEALONEFREE_Unavailable,0.0,0.0
auto_ownership == 0,util_DRIVEALONEFREE_Unavailable_for_zero_auto_households,0.0,0.0
age < 16,util_DRIVEALONEFREE_Unavailable_for_persons_less_than_16,0.0,0.0
is_joint == True,util_DRIVEALONEFREE_Unavailable_for_joint_tours,0.0,0.0
is_atwork_subtour & ~work_tour_is_SOV,util_DRIVEALONEFREE_Unavailable_if_didn't_drive_to_work,0.0,0.0
@odt_skims['SOV_TIME'],util_DRIVEALONEFREE_In_vehicle_time,2.9800000190734863,3.2300000190734863
@coef_walktimeshort_multiplier * df.total_terminal_time,util_DRIVEALONEFREE_Terminal_time,11.0511,11.0511
@ivt_cost_multiplier * df.ivot * costPerMile * odt_skims['SOV_DIST'],util_DRIVEALONEFREE_Operating_cost,2.6590551682249735,2.826995503419905
@ivt_cost_multiplier * df.ivot * df.total_parking_cost,util_DRIVEALONEFREE_Parking_cost,0.0,0.0
@ivt_cost_multiplier * df.ivot * odt_skims['SOV_BTOLL'],util_DRIVEALONEFREE_Bridge_toll,0.183641700595879,0.19741481445819759
sovtoll_available == False,util_DRIVEALONEPAY_Unavailable,1.0,1.0
auto_ownership == 0 # (2),util_DRIVEALONEPAY_Unavailable_for_zero_auto_households,0.0,0.0
age < 16 # (2),util_DRIVEALONEPAY_Unavailable_for_persons_less_than_16,0.0,0.0
is_joint == True # (2),util_DRIVEALONEPAY_Unavailable_for_joint_tours,0.0,0.0
is_atwork_subtour & ~work_tour_is_SOV # (2),util_DRIVEALONEPAY_Unavailable_if_didn't_drive_to_work,0.0,0.0
@odt_skims['SOVTOLL_TIME'],util_DRIVEALONEPAY_In_vehicle_time,2.9800000190734863,3.2300000190734863
@coef_walktimeshort_multiplier * df.total_terminal_time # (2),util_DRIVEALONEPAY_Terminal_time,11.0511,11.0511
@ivt_cost_multiplier * df.ivot * costPerMile * odt_skims['SOVTOLL_DIST'],util_DRIVEALONEPAY_Operating_cost,2.6590551682249735,2.826995503419905
@ivt_cost_multiplier * df.ivot * df.total_parking_cost # (2),util_DRIVEALONEPAY_Parking_cost,0.0,0.0
@ivt_cost_multiplier * df.ivot * odt_skims['SOVTOLL_BTOLL'],util_DRIVEALONEPAY_Bridge_toll,0.183641700595879,0.19741481445819759
@ivt_cost_multiplier * df.ivot * odt_skims['SOVTOLL_VTOLL'],util_DRIVEALONEPAY_Value_toll,0.0,0.0
hov2_available == False,util_SHARED2FREE_Unavailable,0.0,0.0
is_joint & (number_of_participants > 2),util_SHARED2FREE_Unavailable_based_on_party_size,0.0,0.0
@odt_skims['HOV2_TIME'],util_SHARED2FREE_In_vehicle_time,2.9800000190734863,3.2300000190734863
@coef_walktimeshort_multiplier * df.total_terminal_time # (3),util_SHARED2FREE_Terminal_time,11.0511,11.0511
@ivt_cost_multiplier * df.ivot * costPerMile * odt_skims['HOV2_DIST'],util_SHARED2FREE_Operating_cost,2.6590551682249735,2.826995503419905
@ivt_cost_multiplier * df.ivot * df.total_parking_cost / costShareSr2,util_SHARED2FREE_Parking_cost,0.0,0.0
@ivt_cost_multiplier * df.ivot * odt_skims['HOV2_BTOLL'] / costShareSr2,util_SHARED2FREE_Bridge_toll,0.10493811462621658,0.11280846540468434
@(df.hhsize == 1),util_SHARED2FREE_One_person_household,0.0,0.0
hov2toll_available == False,util_SHARED2PAY_Unavailable,1.0,1.0
is_joint & (number_of_participants > 2) # (2),util_SHARED2PAY_Unavailable_based_on_party_size,0.0,0.0
@odt_skims['HOV2TOLL_TIME'],util_SHARED2PAY_In_vehicle_time,2.9800000190734863,3.2300000190734863
@coef_walktimeshort_multiplier * df.total_terminal_time # (4),util_SHARED2PAY_Terminal_time,11.0511,11.0511
@ivt_cost_multiplier * df.ivot * costPerMile * odt_skims['HOV2TOLL_DIST'],util_SHARED2PAY_Operating_cost,2.6590551682249735,2.826995503419905
@ivt_cost_multiplier * df.ivot * df.total_parking_cost / costShareSr2 # (2),util_SHARED2PAY_Parking_cost,0.0,0.0
@ivt_cost_multiplier * df.ivot * odt_skims['HOV2TOLL_BTOLL'] / costShareSr2,util_SHARED2PAY_Bridge_toll,0.10493811462621658,0.11280846540468434
@ivt_cost_multiplier * df.ivot * odt_skims['HOV2TOLL_VTOLL'] / costShareSr2,util_SHARED2PAY_Value_toll,0.0,0.0
@(df.hhsize == 1) # (2),util_SHARED2PAY_One_person_household,0.0,0.0
hov3_available == False,util_SHARED3FREE_Unavailable,0.0,0.0
@odt_skims['HOV3_TIME'],util_SHARED3FREE_In_vehicle_time,2.9800000190734863,3.2300000190734863
@coef_walktimeshort_multiplier * df.total_terminal_time # (5),util_SHARED3FREE_Terminal_time,11.0511,11.0511
@ivt_cost_multiplier * df.ivot * costPerMile * odt_skims['HOV3_DIST'],util_SHARED3FREE_Operating_cost,2.6590551682249735,2.826995503419905
@ivt_cost_multiplier * df.ivot *  df.total_parking_cost / costShareSr3,util_SHARED3FREE_Parking_cost,0.0,0.0
@ivt_cost_multiplier * df.ivot * odt_skims['HOV3_BTOLL'] / costShareSr3,util_SHARED3FREE_Bridge_toll,0.0734566802383516,0.07896592578327903
@(df.hhsize == 1) # (3),util_SHARED3FREE_One_person_household,0.0,0.0
hov3toll_available == False,util_SHARED3PAY_Unavailable,1.0,1.0
@odt_skims['HOV3TOLL_TIME'],util_SHARED3PAY_In_vehicle_time,2.9800000190734863,3.2300000190734863
@coef_walktimeshort_multiplier * df.total_terminal_time # (6),util_SHARED3PAY_Terminal_time,11.0511,11.0511
@ivt_cost_multiplier * df.ivot * costPerMile * odt_skims['HOV3TOLL_DIST'],util_SHARED3PAY_Operating_cost,2.6590551682249735,2.826995503419905
@ivt_cost_multiplier * df.ivot * df.total_parking_cost / costShareSr3,util_SHARED3PAY_Parking_cost,0.0,0.0
@ivt_cost_multiplier * df.ivot * odt_skims['HOV3TOLL_BTOLL'] / costShareSr3,util_SHARED3PAY_Bridge_toll,0.0734566802383516,0.07896592578327903
@ivt_cost_multiplier * df.ivot * odt_skims['HOV3TOLL_VTOLL'] / costShareSr3,util_SHARED3PAY_Value_toll,0.0,0.0
@(df.hhsize == 1) # (4),util_SHARED3PAY_One_person_household,0.0,0.0
@coef_walktimeshort_multiplier * od_skims['DISTWALK'].clip(upper=walkThresh) * 60/walkSpeed,util_WALK_Time_up_to_2_miles,37.20000076293945,40.0
@walktimelong_multiplier * (od_skims['DISTWALK'] - walkThresh).clip(lower=0) * 60/walkSpeed,util_WALK_Time_beyond_2_of_a_miles,0.0,0.0
@density_index_multiplier * df.density_index,util_WALK_Destination_zone_densityIndex,-183.76839703803847,-183.76839703803847
@topology_walk_multiplier * df.trip_topology,util_WALK_Topology,15.0,15.0
is_atwork_subtour & ~work_tour_is_bike,util_BIKE_Unavailable_if_didn't_bike_to_work,0.0,0.0
@coef_biketimeshort_multiplier * od_skims['DISTBIKE'].clip(upper=bikeThresh)*60/bikeSpeed,util_BIKE_Time_up_to_6_miles,18.600000381469727,20.0
@coef_biketimeshort_multiplier * biketimelong_multiplier * (od_skims['DISTBIKE']-bikeThresh).clip(lower=0)*60/bikeSpeed,util_BIKE_Time_beyond_6_of_a_miles,0.0,0.0
@density_index_multiplier*df.density_index,util_BIKE_Destination_zone_densityIndex,-183.76839703803847,-183.76839703803847
@topology_bike_multiplier * df.trip_topology,util_BIKE_Topology,20.0,20.0
walk_local_available == False,util_WALK_LOC_Unavailable,0.0,0.0
@odt_skims['WLK_LOC_WLK_TOTIVT']/100,util_WALK_LOC_In_vehicle_time,4.281599998474121,4.048900127410889
@coef_short_iwait_multiplier * (odt_skims['WLK_LOC_WLK_IWAIT']/100).clip(upper=waitThresh),util_WALK_LOC_Short_iwait_time,1.5541999340057373,1.5742000341415405
@coef_long_iwait_multiplier * (odt_skims['WLK_LOC_WLK_IWAIT']/100-waitThresh).clip(0),util_WALK_LOC_Long_iwait_time,0.0,0.0
@coef_xwait_multiplier * odt_skims['WLK_LOC_WLK_XWAIT']/100,util_WALK_LOC_transfer_wait_time,0.0,0.0
@xfers_wlk_multiplier * (odt_skims['WLK_LOC_WLK_BOARDS']-1).clip(0),util_WALK_LOC_number_of_transfers,0.0,0.0
@coef_wacc_multiplier * df.origin_walk_time,util_WALK_LOC_Walk_access_time,13.32,13.32
@coef_wegr_multiplier * df.destination_walk_time,util_WALK_LOC_Walk_egress_time,13.32,13.32
@coef_waux_multiplier * odt_skims['WLK_LOC_WLK_WAUX']/100,util_WALK_LOC_Walk_other_time,0.0,0.0
@ivt_cost_multiplier * df.ivot * odt_skims['WLK_LOC_WLK_FAR'],util_WALK_LOC_Fare,23.261281151157743,23.261281151157743
@density_index_multiplier * df.density_index # (2),util_WALK_LOC_Destination_zone_densityIndex,-183.76839703803847,-183.76839703803847
@topology_trn_multiplier * df.trip_topology,util_WALK_LOC_Topology,2.2,2.2
walk_lrf_available == False,util_WALK_LRF_Unavailable,1.0,1.0
@odt_skims['WLK_LRF_WLK_TOTIVT']/100,util_WALK_LRF_In_vehicle_time,4.281599998474121,4.048900127410889
@(coef_ivt_lrt_multiplier-1) * odt_skims['WLK_LRF_WLK_KEYIVT']/100,util_WALK_LRF_In_vehicle_time_on_Light_Rail,-0.0,-0.0
@(coef_ivt_ferry_multiplier-coef_ivt_lrt_multiplier) * odt_skims['WLK_LRF_WLK_FERRYIVT']/100,util_WALK_LRF_In_vehicle_time_on_Ferry,-0.0,-0.0
@coef_short_iwait_multiplier * (odt_skims['WLK_LRF_WLK_IWAIT']/100).clip(upper=waitThresh),util_WALK_LRF_Short_iwait_time,1.5541999340057373,1.5742000341415405
@coef_long_iwait_multiplier * (odt_skims['WLK_LRF_WLK_IWAIT']/100-waitThresh).clip(0),util_WALK_LRF_Long_iwait_time,0.0,0.0
@coef_xwait_multiplier * odt_skims['WLK_LRF_WLK_XWAIT']/100,util_WALK_LRF_transfer_wait_time,0.0,0.0
@xfers_wlk_multiplier * (odt_skims['WLK_LRF_WLK_BOARDS']-1).clip(0),util_WALK_LRF_number_of_transfers,0.0,0.0
@coef_wacc_multiplier * df.origin_walk_time # (2),util_WALK_LRF_Walk_access_time,13.32,13.32
@coef_wegr_multiplier * df.destination_walk_time # (2),util_WALK_LRF_Walk_egress_time,13.32,13.32
@coef_waux_multiplier * odt_skims['WLK_LRF_WLK_WAUX']/100,util_WALK_LRF_Walk_other_time,0.0,0.0
@ivt_cost_multiplier * df.ivot * odt_skims['WLK_LRF_WLK_FAR'],util_WALK_LRF_Fare,23.261281151157743,23.261281151157743
@density_index_multiplier * df.density_index # (3),util_WALK_LRF_Destination_zone_densityIndex,-183.76839703803847,-183.76839703803847
@topology_trn_multiplier * df.trip_topology # (2),util_WALK_LRF_Topology,2.2,2.2
walk_express_available == False,util_WALK_EXP_Unavailable,1.0,1.0
@odt_skims['WLK_EXP_WLK_TOTIVT']/100,util_WALK_EXP_In_vehicle_time,4.281599998474121,4.048900127410889
@(ivt_exp_multiplier - 1) * odt_skims['WLK_EXP_WLK_KEYIVT']/100,util_WALK_EXP_In_vehicle_time_on_Express_bus,-0.0,-0.0
@coef_short_iwait_multiplier * (odt_skims['WLK_EXP_WLK_IWAIT']/100).clip(upper=waitThresh),util_WALK_EXP_Short_iwait_time,1.5541999340057373,1.5742000341415405
@coef_long_iwait_multiplier * (odt_skims['WLK_EXP_WLK_IWAIT']/100-waitThresh).clip(0),util_WALK_EXP_Long_iwait_time,0.0,0.0
@coef_xwait_multiplier * odt_skims['WLK_EXP_WLK_XWAIT']/100,util_WALK_EXP_transfer_wait_time,0.0,0.0
@xfers_wlk_multiplier * (odt_skims['WLK_EXP_WLK_BOARDS']-1).clip(0),util_WALK_EXP_number_of_transfers,0.0,0.0
@coef_wacc_multiplier * df.origin_walk_time # (3),util_WALK_EXP_Walk_access_time,13.32,13.32
@coef_wegr_multiplier * df.destination_walk_time # (3),util_WALK_EXP_Walk_egress_time,13.32,13.32
@coef_waux_multiplier * odt_skims['WLK_EXP_WLK_WAUX']/100,util_WALK_EXP_Walk_other_time,0.0,0.0
@ivt_cost_multiplier * df.ivot * odt_skims['WLK_EXP_WLK_FAR'],util_WALK_EXP_Fare,23.261281151157743,23.261281151157743
@density_index_multiplier * df.density_index # (4),util_WALK_EXP_Destination_zone_densityIndex,-183.76839703803847,-183.76839703803847
@topology_trn_multiplier * df.trip_topology # (3),util_WALK_EXP_Topology,2.2,2.2
walk_heavyrail_available == False,util_WALK_HVY_Unavailable,1.0,1.0
@odt_skims['WLK_HVY_WLK_TOTIVT']/100,util_WALK_HVY_In_vehicle_time,4.281599998474121,4.048900127410889
@(ivt_hvy_multiplier-1) * odt_skims['WLK_HVY_WLK_KEYIVT']/100,util_WALK_HVY_In_vehicle_time_on_heavy_rail,-0.0,-0.0
@coef_short_iwait_multiplier * (odt_skims['WLK_HVY_WLK_IWAIT']/100).clip(upper=waitThresh),util_WALK_HVY_Short_iwait_time,1.5541999340057373,1.5742000341415405
@coef_long_iwait_multiplier * (odt_skims['WLK_HVY_WLK_IWAIT']/100-waitThresh).clip(0),util_WALK_HVY_Long_iwait_time,0.0,0.0
@coef_xwait_multiplier * odt_skims['WLK_HVY_WLK_XWAIT']/100,util_WALK_HVY_transfer_wait_time,0.0,0.0
@xfers_wlk_multiplier * (odt_skims['WLK_HVY_WLK_BOARDS']-1).clip(0),util_WALK_HVY_number_of_transfers,0.0,0.0
@coef_wacc_multiplier * df.origin_walk_time # (4),util_WALK_HVY_Walk_access_time,13.32,13.32
@coef_wegr_multiplier * df.destination_walk_time # (4),util_WALK_HVY_Walk_egress_time,13.32,13.32
@coef_waux_multiplier * odt_skims['WLK_HVY_WLK_WAUX']/100,util_WALK_HVY_Walk_other_time,0.0,0.0
@ivt_cost_multiplier * df.ivot * odt_skims['WLK_HVY_WLK_FAR'],util_WALK_HVY_Fare,23.261281151157743,23.261281151157743
@density_index_multiplier * df.density_index # (5),util_WALK_HVY_Destination_zone_densityIndex,-183.76839703803847,-183.76839703803847
@topology_trn_multiplier * df.trip_topology # (4),util_WALK_HVY_Topology,2.2,2.2
walk_commuter_available == False,util_WALK_COM_Unavailable,1.0,1.0
@odt_skims['WLK_COM_WLK_TOTIVT']/100,util_WALK_COM_In_vehicle_time,4.281599998474121,4.048900127410889
@(ivt_com_multiplier - 1) * odt_skims['WLK_COM_WLK_KEYIVT']/100,util_WALK_COM_In_vehicle_time_on_commuter_rail,-0.0,-0.0
@coef_short_iwait_multiplier * (odt_skims['WLK_COM_WLK_IWAIT']/100).clip(upper=waitThresh),util_WALK_COM_Short_iwait_time,1.5541999340057373,1.5742000341415405
@coef_long_iwait_multiplier * (odt_skims['WLK_COM_WLK_IWAIT']/100-waitThresh).clip(0),util_WALK_COM_Long_iwait_time,0.0,0.0
@coef_xwait_multiplier * odt_skims['WLK_COM_WLK_XWAIT']/100,util_WALK_COM_transfer_wait_time,0.0,0.0
@xfers_wlk_multiplier * (odt_skims['WLK_COM_WLK_BOARDS']-1).clip(0),util_WALK_COM_number_of_transfers,0.0,0.0
@coef_wacc_multiplier * df.origin_walk_time # (5),util_WALK_COM_Walk_access_time,13.32,13.32
@coef_wegr_multiplier * df.destination_walk_time # (5),util_WALK_COM_Walk_egress_time,13.32,13.32
@coef_waux_multiplier * odt_skims['WLK_COM_WLK_WAUX']/100,util_WALK_COM_Walk_other_time,0.0,0.0
@ivt_cost_multiplier * df.ivot * odt_skims['WLK_COM_WLK_FAR'],util_WALK_COM_Fare,23.261281151157743,23.261281151157743
@density_index_multiplier * df.density_index # (6),util_WALK_COM_Destination_zone_densityIndex,-183.76839703803847,-183.76839703803847
@topology_trn_multiplier * df.trip_topology # (5),util_WALK_COM_Topology,2.2,2.2
auto_ownership == 0 # (3),util_DRIVE_LOC_Unavailable_for_zero_auto_households,0.0,0.0
age < 16 # (3),util_DRIVE_LOC_Unavailable_for_persons_less_than_16,0.0,0.0
@density_index_multiplier * df.density_index # (7),util_DRIVE_LOC_Destination_zone_densityIndex,-183.76839703803847,-183.76839703803847
@topology_trn_multiplier * df.trip_topology # (6),util_DRIVE_LOC_Topology,2.2,2.2
outbound & ~drive_local_available_outbound,util_DRIVE_LOC_outbound_Unavailable,0.0,0.0
@df.outbound * odt_skims['DRV_LOC_WLK_TOTIVT']/100,util_DRIVE_LOC_outbound_In_vehicle_time,1.87309992313385,0.0
@df.outbound * coef_short_iwait_multiplier * (odt_skims['DRV_LOC_WLK_IWAIT']/100).clip(upper=waitThresh),util_DRIVE_LOC_outbound_Short_iwait_time,1.414199948310852,0.0
@df.outbound * coef_long_iwait_multiplier * (odt_skims['DRV_LOC_WLK_IWAIT']/100-waitThresh).clip(0),util_DRIVE_LOC_outbound_Long_iwait_time,0.0,0.0
@df.outbound * coef_xwait_multiplier * odt_skims['DRV_LOC_WLK_XWAIT']/100,util_DRIVE_LOC_outbound_transfer_wait_time,0.0,0.0
@df.outbound * xfers_wlk_multiplier * (odt_skims['DRV_LOC_WLK_BOARDS']-1).clip(0),util_DRIVE_LOC_outbound_number_of_transfers,0.0,0.0
@df.outbound * coef_dtim_multiplier * odt_skims['DRV_LOC_WLK_DTIM']/100,util_DRIVE_LOC_outbound_Drive_time,2.4,0.0
@df.outbound * coef_wegr_multiplier * df.destination_walk_time,util_DRIVE_LOC_outbound_Walk_egress_time,13.32,0.0
@df.outbound * coef_waux_multiplier * odt_skims['DRV_LOC_WLK_WAUX']/100,util_DRIVE_LOC_outbound_Walk_other_time,0.0,0.0
@df.outbound * ivt_cost_multiplier * df.ivot * (odt_skims['DRV_LOC_WLK_FAR'] + costPerMile*odt_skims['DRV_LOC_WLK_DDIST']/100),util_DRIVE_LOC_outbound_Fare_and_operating_cost,24.380882463294668,0.0
@df.outbound * dacc_ratio_multiplier * (odt_skims['DRV_LOC_WLK_DDIST']/100)/ (od_skims['DIST']),util_DRIVE_LOC_outbound_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0
inbound & ~drive_local_available_inbound,util_DRIVE_LOC_inbound_Unavailable,0.0,0.0
@df.inbound * odt_skims['WLK_LOC_DRV_TOTIVT']/100,util_DRIVE_LOC_inbound_In_vehicle_time,0.0,1.9930999279022217
@df.inbound * coef_short_iwait_multiplier * (odt_skims['WLK_LOC_DRV_IWAIT']/100).clip(upper=waitThresh),util_DRIVE_LOC_inbound_Short_iwait_time,0.0,0.714199960231781
@df.inbound * coef_long_iwait_multiplier * (odt_skims['WLK_LOC_DRV_IWAIT']/100-waitThresh).clip(0),util_DRIVE_LOC_inbound_Long_iwait_time,0.0,0.0
@df.inbound * coef_xwait_multiplier * odt_skims['WLK_LOC_DRV_XWAIT']/100,util_DRIVE_LOC_inbound_transfer_wait_time,0.0,0.0
@df.inbound * xfers_wlk_multiplier * (odt_skims['WLK_LOC_DRV_BOARDS']-1).clip(0),util_DRIVE_LOC_inbound_number_of_transfers,0.0,0.0
@df.inbound * coef_dtim_multiplier * odt_skims['WLK_LOC_DRV_DTIM']/100,util_DRIVE_LOC_inbound_Drive_time,0.0,2.4
@df.inbound * coef_wacc_multiplier * df.origin_walk_time,util_DRIVE_LOC_inbound_Walk_access_time,0.0,13.32
@df.inbound * coef_waux_multiplier * odt_skims['WLK_LOC_DRV_WAUX']/100,util_DRIVE_LOC_inbound_Walk_other_time,0.0,0.0
@df.inbound * ivt_cost_multiplier * df.ivot * (odt_skims['WLK_LOC_DRV_FAR'] + costPerMile*odt_skims['WLK_LOC_DRV_DDIST']/100),util_DRIVE_LOC_inbound_Fare_and_operating_cost,0.0,24.380882463294668
@df.outbound * dacc_ratio_multiplier * (odt_skims['WLK_LOC_DRV_DDIST']/100)/ (od_skims['DIST']),util_DRIVE_LOC_inbound_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0
auto_ownership == 0 # (4),util_DRIVE_LRF_Unavailable_for_zero_auto_households,0.0,0.0
age < 16 # (4),util_DRIVE_LRF_Unavailable_for_persons_less_than_16,0.0,0.0
@density_index_multiplier * df.density_index # (8),util_DRIVE_LRF_Destination_zone_densityIndex,-183.76839703803847,-183.76839703803847
@topology_trn_multiplier * df.trip_topology # (7),util_DRIVE_LRF_Topology,2.2,2.2
outbound & ~drive_lrf_available_outbound,util_DRIVE_LRF_outbound_Unavailable,1.0,0.0
@df.outbound * odt_skims['DRV_LRF_WLK_TOTIVT']/100,util_DRIVE_LRF_outbound_In_vehicle_time,23.42729949951172,0.0
@df.outbound * (coef_ivt_lrt_multiplier - 1)*odt_skims['DRV_LRF_WLK_KEYIVT']/100,util_DRIVE_LRF_outbound_In_vehicle_time_on_LR,-0.0,-0.0
@df.outbound * (coef_ivt_ferry_multiplier-coef_ivt_lrt_multiplier)*odt_skims['DRV_LRF_WLK_FERRYIVT']/100,util_DRIVE_LRF_outbound_In_vehicle_time_on_Ferry,-0.0,-0.0
@df.outbound * coef_short_iwait_multiplier * (odt_skims['DRV_LRF_WLK_IWAIT']/100).clip(upper=waitThresh),util_DRIVE_LRF_outbound_Short_iwait_time,20.0,0.0
@df.outbound * coef_long_iwait_multiplier * (odt_skims['DRV_LRF_WLK_IWAIT']/100-waitThresh).clip(0),util_DRIVE_LRF_outbound_Long_iwait_time,0.023499488830566406,0.0
@df.outbound * coef_xwait_multiplier * odt_skims['DRV_LRF_WLK_XWAIT']/100,util_DRIVE_LRF_outbound_transfer_wait_time,3.24,0.0
@df.outbound * xfers_drv_multiplier * (odt_skims['DRV_LRF_WLK_BOARDS']-1).clip(0),util_DRIVE_LRF_outbound_number_of_transfers,15.0,0.0
@df.outbound * coef_dtim_multiplier * odt_skims['DRV_LRF_WLK_DTIM']/100,util_DRIVE_LRF_outbound_Drive_time,25.28,0.0
@df.outbound * coef_wegr_multiplier * df.destination_walk_time # (2),util_DRIVE_LRF_outbound_Walk_egress_time,13.32,0.0
@df.outbound * coef_waux_multiplier * odt_skims['DRV_LRF_WLK_WAUX']/100,util_DRIVE_LRF_outbound_Walk_other_time,0.0,0.0
@df.outbound * ivt_cost_multiplier * df.ivot * (odt_skims['DRV_LRF_WLK_FAR'] + costPerMile * odt_skims['DRV_LRF_WLK_DDIST']/100),util_DRIVE_LRF_outbound_Fare_and_operating_cost,62.69946685557894,0.0
@df.outbound * dacc_ratio_multiplier * (odt_skims['DRV_LRF_WLK_DDIST']/100) / od_skims['DIST'],util_DRIVE_LRF_outbound_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0
inbound & ~drive_lrf_available_inbound,util_DRIVE_LRF_inbound_Unavailable,0.0,1.0
@df.inbound * odt_skims['WLK_LRF_DRV_TOTIVT']/100,util_DRIVE_LRF_inbound_In_vehicle_time,0.0,26.25279998779297
@df.inbound * (coef_ivt_lrt_multiplier - 1)*odt_skims['WLK_LRF_DRV_KEYIVT']/100,util_DRIVE_LRF_inbound_In_vehicle_time_on_LR,-0.0,-0.0
@df.inbound * (coef_ivt_ferry_multiplier-coef_ivt_lrt_multiplier)*odt_skims['WLK_LRF_DRV_FERRYIVT']/100,util_DRIVE_LRF_inbound_In_vehicle_time_on_Ferry,-0.0,-0.0
@df.inbound * coef_short_iwait_multiplier * (odt_skims['WLK_LRF_DRV_IWAIT']/100).clip(upper=waitThresh),util_DRIVE_LRF_inbound_Short_iwait_time,0.0,7.046999931335449
@df.inbound * coef_long_iwait_multiplier * (odt_skims['WLK_LRF_DRV_IWAIT']/100-waitThresh).clip(0),util_DRIVE_LRF_inbound_Long_iwait_time,0.0,0.0
@df.inbound * coef_xwait_multiplier * odt_skims['WLK_LRF_DRV_XWAIT']/100,util_DRIVE_LRF_inbound_transfer_wait_time,0.0,20.0
@df.inbound * xfers_drv_multiplier * (odt_skims['WLK_LRF_DRV_BOARDS']-1).clip(0),util_DRIVE_LRF_inbound_number_of_transfers,0.0,15.0
@df.inbound * coef_dtim_multiplier * odt_skims['WLK_LRF_DRV_DTIM']/100,util_DRIVE_LRF_inbound_Drive_time,0.0,25.28
@df.inbound * coef_wacc_multiplier * df.origin_walk_time # (2),util_DRIVE_LRF_inbound_Walk_access_time,0.0,13.32
@df.inbound * coef_waux_multiplier * odt_skims['WLK_LRF_DRV_WAUX']/100,util_DRIVE_LRF_inbound_Walk_other_time,0.0,0.0
@df.inbound * ivt_cost_multiplier * df.ivot * (odt_skims['WLK_LRF_DRV_FAR'] + costPerMile * odt_skims['WLK_LRF_DRV_DDIST']/100),util_DRIVE_LRF_inbound_Fare_and_operating_cost,0.0,85.96074800673668
@df.inbound * dacc_ratio_multiplier * (odt_skims['WLK_LRF_DRV_DDIST']/100)/ od_skims['DIST'],util_DRIVE_LRF_inbound_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0
auto_ownership == 0 # (5),util_DRIVE_EXP_Unavailable_for_zero_auto_households,0.0,0.0
age < 16 # (5),util_DRIVE_EXP_Unavailable_for_persons_less_than_16,0.0,0.0
@density_index_multiplier * df.density_index # (9),util_DRIVE_EXP_Destination_zone_densityIndex,-183.76839703803847,-183.76839703803847
@topology_trn_multiplier * df.trip_topology # (8),util_DRIVE_EXP_Topology,2.2,2.2
outbound & ~drive_express_available_outbound,util_DRIVE_EXP_outbound_Unavailable,1.0,0.0
@df.outbound * odt_skims['DRV_EXP_WLK_TOTIVT']/100,util_DRIVE_EXP_outbound_In_vehicle_time,23.42729949951172,0.0
@df.outbound * (ivt_exp_multiplier - 1) * odt_skims['DRV_EXP_WLK_KEYIVT']/100,util_DRIVE_EXP_outbound_In_vehicle_time_on_EXP,-0.0,-0.0
@df.outbound * coef_short_iwait_multiplier * (odt_skims['DRV_EXP_WLK_IWAIT']/100).clip(upper=waitThresh),util_DRIVE_EXP_outbound_Short_iwait_time,20.0,0.0
@df.outbound * coef_long_iwait_multiplier * (odt_skims['DRV_EXP_WLK_IWAIT']/100-waitThresh).clip(0),util_DRIVE_EXP_outbound_Long_iwait_time,0.023499488830566406,0.0
@df.outbound * coef_xwait_multiplier * odt_skims['DRV_EXP_WLK_XWAIT']/100,util_DRIVE_EXP_outbound_transfer_wait_time,3.24,0.0
@df.outbound * xfers_drv_multiplier * (odt_skims['DRV_EXP_WLK_BOARDS']-1).clip(0),util_DRIVE_EXP_outbound_number_of_transfers,15.0,0.0
@df.outbound * coef_dtim_multiplier * odt_skims['DRV_EXP_WLK_DTIM']/100,util_DRIVE_EXP_outbound_Drive_time,25.28,0.0
@df.outbound * coef_wegr_multiplier * df.destination_walk_time # (3),util_DRIVE_EXP_outbound_Walk_egress_time,13.32,0.0
@df.outbound * coef_waux_multiplier * odt_skims['DRV_EXP_WLK_WAUX']/100,util_DRIVE_EXP_outbound_Walk_other_time,0.0,0.0
@df.outbound * ivt_cost_multiplier * df.ivot * (odt_skims['DRV_EXP_WLK_FAR'] + costPerMile * odt_skims['DRV_EXP_WLK_DDIST']/100),util_DRIVE_EXP_outbound_Fare_and_operating_cost,62.69946685557894,0.0
@df.outbound * dacc_ratio_multiplier * (odt_skims['DRV_EXP_WLK_DDIST']/100) / od_skims['DIST'],util_DRIVE_EXP_outbound_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0
inbound & ~drive_express_available_inbound,util_DRIVE_EXP_inbound_Unavailable,0.0,1.0
@df.inbound * odt_skims['WLK_EXP_DRV_TOTIVT']/100,util_DRIVE_EXP_inbound_In_vehicle_time,0.0,26.25279998779297
@df.inbound * (ivt_exp_multiplier - 1) * odt_skims['WLK_EXP_DRV_KEYIVT']/100,util_DRIVE_EXP_inbound_In_vehicle_time_on_EXP,-0.0,-0.0
@df.inbound * coef_short_iwait_multiplier * (odt_skims['WLK_EXP_DRV_IWAIT']/100).clip(upper=waitThresh),util_DRIVE_EXP_inbound_Short_iwait_time,0.0,7.046999931335449
@df.inbound * coef_long_iwait_multiplier * (odt_skims['WLK_EXP_DRV_IWAIT']/100-waitThresh).clip(0),util_DRIVE_EXP_inbound_Long_iwait_time,0.0,0.0
@df.inbound * coef_xwait_multiplier * odt_skims['WLK_EXP_DRV_XWAIT']/100,util_DRIVE_EXP_inbound_transfer_wait_time,0.0,20.0
@df.inbound * xfers_drv_multiplier * (odt_skims['WLK_EXP_DRV_BOARDS']-1).clip(0),util_DRIVE_EXP_inbound_number_of_transfers,0.0,15.0
@df.inbound * coef_dtim_multiplier * odt_skims['WLK_EXP_DRV_DTIM']/100,util_DRIVE_EXP_inbound_Drive_time,0.0,25.28
@df.inbound * coef_wacc_multiplier * df.origin_walk_time # (3),util_DRIVE_EXP_inbound_Walk_access_time,0.0,13.32
@df.inbound * coef_waux_multiplier * odt_skims['WLK_EXP_DRV_WAUX']/100,util_DRIVE_EXP_inbound_Walk_other_time,0.0,0.0
@df.inbound * ivt_cost_multiplier * df.ivot * (odt_skims['WLK_EXP_DRV_FAR'] + costPerMile * odt_skims['WLK_EXP_DRV_DDIST']/100),util_DRIVE_EXP_inbound_Fare_and_operating_cost,0.0,85.96074800673668
@df.inbound * dacc_ratio_multiplier * (odt_skims['WLK_EXP_DRV_DDIST']/100) / od_skims['DIST'],util_DRIVE_EXP_inbound_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0
auto_ownership == 0 # (6),util_DRIVE_HVY_Unavailable_for_zero_auto_households,0.0,0.0
age < 16 # (6),util_DRIVE_HVY_Unavailable_for_persons_less_than_16,0.0,0.0
@density_index_multiplier * df.density_index # (10),util_DRIVE_HVY_Destination_zone_densityIndex,-183.76839703803847,-183.76839703803847
@topology_trn_multiplier * df.trip_topology # (9),util_DRIVE_HVY_Topology,2.2,2.2
outbound & ~drive_heavyrail_available_outbound,util_DRIVE_HVY_outbound_Unavailable,1.0,0.0
@df.outbound * odt_skims['DRV_HVY_WLK_TOTIVT']/100,util_DRIVE_HVY_outbound_In_vehicle_time,18.980501174926758,0.0
@df.outbound * (ivt_hvy_multiplier - 1) * odt_skims['DRV_HVY_WLK_KEYIVT']/100,util_DRIVE_HVY_outbound_In_vehicle_time_on_HVY,-3.796100097656249,-0.0
@df.outbound * coef_short_iwait_multiplier * (odt_skims['DRV_HVY_WLK_IWAIT']/100).clip(upper=waitThresh),util_DRIVE_HVY_outbound_Short_iwait_time,4.192399978637695,0.0
@df.outbound * coef_long_iwait_multiplier * (odt_skims['DRV_HVY_WLK_IWAIT']/100-waitThresh).clip(0),util_DRIVE_HVY_outbound_Long_iwait_time,0.0,0.0
@df.outbound * coef_xwait_multiplier * odt_skims['DRV_HVY_WLK_XWAIT']/100,util_DRIVE_HVY_outbound_transfer_wait_time,0.0,0.0
@df.outbound * xfers_drv_multiplier * (odt_skims['DRV_HVY_WLK_BOARDS']-1).clip(0),util_DRIVE_HVY_outbound_number_of_transfers,0.0,0.0
@df.outbound * coef_dtim_multiplier * odt_skims['DRV_HVY_WLK_DTIM']/100,util_DRIVE_HVY_outbound_Drive_time,25.66,0.0
@df.outbound * coef_wegr_multiplier * df.destination_walk_time # (4),util_DRIVE_HVY_outbound_Walk_egress_time,13.32,0.0
@df.outbound * coef_waux_multiplier * odt_skims['DRV_HVY_WLK_WAUX']/100,util_DRIVE_HVY_outbound_Walk_other_time,12.0,0.0
@df.outbound * ivt_cost_multiplier * df.ivot * (odt_skims['DRV_HVY_WLK_FAR'] + costPerMile * odt_skims['DRV_HVY_WLK_DDIST']/100),util_DRIVE_HVY_outbound_Fare_and_operating_cost,57.43120094467718,0.0
@df.outbound * dacc_ratio_multiplier * (odt_skims['DRV_HVY_WLK_DDIST']/100) / od_skims['DIST'],util_DRIVE_HVY_outbound_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0
inbound & ~drive_heavyrail_available_inbound,util_DRIVE_HVY_inbound_Unavailable,0.0,1.0
@df.inbound * odt_skims['WLK_HVY_DRV_TOTIVT']/100,util_DRIVE_HVY_inbound_In_vehicle_time,0.0,18.980501174926758
@df.inbound * (ivt_hvy_multiplier - 1) * odt_skims['WLK_HVY_DRV_KEYIVT']/100,util_DRIVE_HVY_inbound_In_vehicle_time_on_HVY,-0.0,-3.796100097656249
@df.inbound * coef_short_iwait_multiplier * (odt_skims['WLK_HVY_DRV_IWAIT']/100).clip(upper=waitThresh),util_DRIVE_HVY_inbound_Short_iwait_time,0.0,3.77239990234375
@df.inbound * coef_long_iwait_multiplier * (odt_skims['WLK_HVY_DRV_IWAIT']/100-waitThresh).clip(0),util_DRIVE_HVY_inbound_Long_iwait_time,0.0,0.0
@df.inbound * coef_xwait_multiplier * odt_skims['WLK_HVY_DRV_XWAIT']/100,util_DRIVE_HVY_inbound_transfer_wait_time,0.0,0.0
@df.inbound * xfers_drv_multiplier * (odt_skims['WLK_HVY_DRV_BOARDS']-1).clip(0),util_DRIVE_HVY_inbound_number_of_transfers,0.0,0.0
@df.outbound * coef_dtim_multiplier * odt_skims['DRV_HVY_WLK_DTIM']/100 # (2),util_DRIVE_HVY_inbound_Drive_time,25.66,0.0
@df.inbound * coef_wacc_multiplier * df.origin_walk_time # (4),util_DRIVE_HVY_inbound_Walk_access_time,0.0,13.32
@coef_waux_multiplier * odt_skims['WLK_HVY_DRV_WAUX']/100,util_DRIVE_HVY_inbound_Walk_other_time,12.0,12.0
@df.inbound * ivt_cost_multiplier * df.ivot * (odt_skims['WLK_HVY_DRV_FAR'] + costPerMile * odt_skims['WLK_HVY_DRV_DDIST']/100),util_DRIVE_HVY_inbound_Fare_and_operating_cost,0.0,57.43120094467718
@df.inbound * dacc_ratio_multiplier * (odt_skims['WLK_HVY_DRV_DDIST']/100)/ od_skims['DIST'],util_DRIVE_HVY_inbound_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0
auto_ownership == 0 # (7),util_DRIVE_COM_Unavailable_for_zero_auto_households,0.0,0.0
age < 16 # (7),util_DRIVE_COM_Unavailable_for_persons_less_than_16,0.0,0.0
@density_index_multiplier * df.density_index # (11),util_DRIVE_COM_Destination_zone_densityIndex,-183.76839703803847,-183.76839703803847
@topology_trn_multiplier * df.trip_topology # (10),util_DRIVE_COM_Topology,2.2,2.2
outbound & ~drive_commuter_available_outbound,util_DRIVE_COM_outbound_Unavailable,1.0,0.0
@df.outbound * odt_skims['DRV_COM_WLK_TOTIVT']/100,util_DRIVE_COM_outbound_In_vehicle_time,24.831899642944336,0.0
@df.outbound * (ivt_com_multiplier - 1) * odt_skims['DRV_COM_WLK_KEYIVT']/100,util_DRIVE_COM_outbound_In_vehicle_time_on_COM,-3.896879882812499,-0.0
@df.outbound * coef_short_iwait_multiplier * (odt_skims['DRV_COM_WLK_IWAIT']/100).clip(upper=waitThresh),util_DRIVE_COM_outbound_Short_iwait_time,20.0,0.0
@df.outbound * coef_long_iwait_multiplier * (odt_skims['DRV_COM_WLK_IWAIT']/100-waitThresh).clip(0),util_DRIVE_COM_outbound_Long_iwait_time,7.163299560546875,0.0
@df.outbound * coef_xwait_multiplier * odt_skims['DRV_COM_WLK_XWAIT']/100,util_DRIVE_COM_outbound_transfer_wait_time,2.26,0.0
@df.outbound * xfers_drv_multiplier * (odt_skims['DRV_COM_WLK_BOARDS']-1).clip(0),util_DRIVE_COM_outbound_number_of_transfers,15.0,0.0
@df.outbound * coef_dtim_multiplier * odt_skims['DRV_COM_WLK_DTIM']/100,util_DRIVE_COM_outbound_Drive_time,30.52,0.0
@df.outbound * coef_wegr_multiplier * df.destination_walk_time # (5),util_DRIVE_COM_outbound_Walk_egress_time,13.32,0.0
@df.outbound * coef_waux_multiplier * odt_skims['DRV_COM_WLK_WAUX']/100,util_DRIVE_COM_outbound_Walk_other_time,6.0,0.0
@df.outbound * ivt_cost_multiplier * df.ivot * (odt_skims['DRV_COM_WLK_FAR'] + costPerMile * odt_skims['DRV_COM_WLK_DDIST']/100),util_DRIVE_COM_outbound_Fare_and_operating_cost,66.5690443335505,0.0
@df.outbound * dacc_ratio_multiplier * (odt_skims['DRV_COM_WLK_DDIST']/100) / od_skims['DIST'],util_DRIVE_COM_outbound_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0
inbound & ~drive_commuter_available_inbound,util_DRIVE_COM_inbound_Unavailable,0.0,1.0
@df.inbound * odt_skims['WLK_COM_DRV_TOTIVT']/100,util_DRIVE_COM_inbound_In_vehicle_time,0.0,29.837299346923828
@df.inbound * (ivt_com_multiplier - 1) * odt_skims['WLK_COM_DRV_KEYIVT']/100,util_DRIVE_COM_inbound_In_vehicle_time_on_COM,-0.0,-4.120839843749999
@df.inbound * coef_short_iwait_multiplier * (odt_skims['WLK_COM_DRV_IWAIT']/100).clip(upper=waitThresh),util_DRIVE_COM_inbound_Short_iwait_time,0.0,3.8666000366210938
@df.inbound * coef_long_iwait_multiplier * (odt_skims['WLK_COM_DRV_IWAIT']/100-waitThresh).clip(0),util_DRIVE_COM_inbound_Long_iwait_time,0.0,0.0
@df.inbound * coef_xwait_multiplier * odt_skims['WLK_COM_DRV_XWAIT']/100,util_DRIVE_COM_inbound_transfer_wait_time,0.0,40.0
@df.inbound * xfers_drv_multiplier * (odt_skims['WLK_COM_DRV_BOARDS']-1).clip(0),util_DRIVE_COM_inbound_number_of_transfers,0.0,15.0
@df.inbound * coef_dtim_multiplier * odt_skims['WLK_COM_DRV_DTIM']/100,util_DRIVE_COM_inbound_Drive_time,0.0,34.62
@df.inbound * coef_wacc_multiplier * df.origin_walk_time # (5),util_DRIVE_COM_inbound_Walk_access_time,0.0,13.32
@df.inbound * coef_waux_multiplier * odt_skims['WLK_COM_DRV_WAUX']/100,util_DRIVE_COM_inbound_Walk_other_time,0.0,6.0
@df.inbound * ivt_cost_multiplier * df.ivot * (odt_skims['WLK_COM_DRV_FAR'] + costPerMile * odt_skims['WLK_COM_DRV_DDIST']/100),util_DRIVE_COM_inbound_Fare_and_operating_cost,0.0,95.12044349427698
@df.inbound * dacc_ratio_multiplier * (odt_skims['WLK_COM_DRV_DDIST']/100) / od_skims['DIST'],util_DRIVE_COM_inbound_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0
@odt_skims['HOV2TOLL_TIME'] # (2),util_Taxi_In_vehicle_time,2.9800000190734863,3.2300000190734863
@ridehail_wait_time_multiplier * df.origTaxiWaitTime,util_Taxi_Wait_time,8.25,8.25
@ivt_cost_multiplier * df.ivot * odt_skims['HOV2TOLL_VTOLL'],util_Taxi_Tolls,0.0,0.0
@ivt_cost_multiplier * df.ivot * odt_skims['HOV2TOLL_BTOLL'],util_Taxi_Bridge_toll,0.183641700595879,0.19741481445819759
@ivt_cost_multiplier * df.ivot * (Taxi_baseFare + odt_skims['HOV2TOLL_DIST'] * Taxi_costPerMile + odt_skims['HOV2TOLL_TIME'] * Taxi_costPerMinute)*100,util_Taxi_Fare,71.66617215248083,74.16063282377581
@odt_skims['HOV2TOLL_TIME'] ,util_TNC_Single_In_vehicle_time,2.9800000190734863,3.2300000190734863
@ridehail_wait_time_multiplier * df.origSingleTNCWaitTime,util_TNC_Single_Wait_time,4.500000000000001,4.500000000000001
@ivt_cost_multiplier * df.ivot * odt_skims['HOV2TOLL_VTOLL'] # (2),util_TNC_Single_Tolls,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_BTOLL'] + dot_skims['HOV2TOLL_BTOLL']),util_TNC_Single_Bridge_toll,0.38105651505407656,0.38105651505407656
"@ivt_cost_multiplier * df.ivot * np.maximum(TNC_single_baseFare + odt_skims['HOV2TOLL_DIST'] * TNC_single_costPerMile + odt_skims['HOV2TOLL_TIME'] * TNC_single_costPerMinute, TNC_single_costMinimum) * 100",util_TNC_Single_Cost,110.18501306026214,110.18501306026214
@odt_skims['HOV2TOLL_TIME'] * TNC_shared_IVTFactor,util_TNC_Shared_In_vehicle_time,4.470000267028809,4.845000267028809
@ridehail_wait_time_multiplier * df.origSharedTNCWaitTime,util_TNC_Shared_Wait_time,7.499999999999998,7.499999999999998
@ivt_cost_multiplier * df.ivot * odt_skims['HOV2TOLL_VTOLL'] # (3),util_TNC_Shared_Tolls,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_BTOLL'] + dot_skims['HOV2TOLL_BTOLL']) # (2),util_TNC_Shared_Bridge_toll,0.38105651505407656,0.38105651505407656
"@ivt_cost_multiplier * df.ivot * np.maximum(TNC_shared_baseFare + odt_skims['HOV2TOLL_DIST'] * TNC_shared_costPerMile + odt_skims['HOV2TOLL_TIME']* TNC_shared_costPerMinute, TNC_shared_costMinimum) * 100",util_TNC_Shared_Cost,45.93338052117192,46.80261616481086
tour_mode_is_auto,util_tour_mode_is_auto,0.0,0.0
tour_mode_is_walk,util_tour_mode_is_walk,1.0,1.0
tour_mode_is_bike,util_tour_mode_is_bike,0.0,0.0
tour_mode_is_walk_transit,util_tour_mode_is_walk_transit,0.0,0.0
tour_mode_is_drive_transit,util_tour_mode_is_drive_transit,0.0,0.0
tour_mode_is_ride_hail,util_tour_mode_is_ride_hail,0.0,0.0
@(df.is_indiv & df.i_tour_mode.isin(I_SOV_MODES)),util_Drive_Alone_tour_mode_ASC_shared_ride_2_df_is_indiv,0.0,0.0
@(df.is_indiv & df.i_tour_mode.isin(I_SOV_MODES)) # (2),util_Drive_Alone_tour_mode_ASC_shared_ride_3_plus,0.0,0.0
@(df.is_indiv & df.i_tour_mode.isin(I_SOV_MODES)) # (3),util_Drive_Alone_tour_mode_ASC_walk,0.0,0.0
@(df.is_indiv & df.i_tour_mode.isin(I_SR2_MODES)),util_Shared_Ride_2_tour_mode_ASC_shared_ride_2,0.0,0.0
@(df.is_indiv & df.i_tour_mode.isin(I_SR2_MODES)) # (2),util_Shared_Ride_2_tour_mode_ASC_shared_ride_3_plus,0.0,0.0
@(df.is_indiv & df.i_tour_mode.isin(I_SR2_MODES)) # (3),util_Shared_Ride_2_tour_mode_ASC_walk,0.0,0.0
@(df.is_indiv & df.i_tour_mode.isin(I_SR2_MODES)) # (4),util_Shared_Ride_2_tour_mode_ASC_ride_hail,0.0,0.0
@(df.is_indiv & df.i_tour_mode.isin(I_SR3P_MODES)),util_Shared_Ride_3_tour_mode_ASC_shared_ride_2,0.0,0.0
@(df.is_indiv & df.i_tour_mode.isin(I_SR3P_MODES)) # (2),util_Shared_Ride_3_tour_mode_ASC_shared_ride_3_plus,0.0,0.0
@(df.is_indiv & df.i_tour_mode.isin(I_SR3P_MODES)) # (3),util_Shared_Ride_3_tour_mode_ASC_walk,0.0,0.0
@(df.is_indiv & df.i_tour_mode.isin(I_SR3P_MODES)) # (4),util_Shared_Ride_3_tour_mode_ASC_ride_hail,0.0,0.0
@df.is_indiv & (df.i_tour_mode == I_WALK_MODE),util_Walk_tour_mode_ASC_ride_hail,1.0,1.0
@df.is_indiv & (df.i_tour_mode == I_BIKE_MODE),util_Bike_tour_mode_ASC_walk,0.0,0.0
@df.is_indiv & (df.i_tour_mode == I_BIKE_MODE) # (2),util_Bike_tour_mode_ASC_ride_hail,0.0,0.0
@(df.is_indiv & df.tour_mode_is_walk_transit & ~df.walk_ferry_available),util_Walk_to_Transit_tour_mode_ASC_light_rail,0.0,0.0
@(df.is_indiv & df.tour_mode_is_walk_transit & df.walk_ferry_available),util_Walk_to_Transit_tour_mode_ASC_ferry,0.0,0.0
@(df.is_indiv & df.tour_mode_is_walk_transit),util_Walk_to_Transit_tour_mode_ASC_express_bus,0.0,0.0
@(df.is_indiv & df.tour_mode_is_walk_transit) # (2),util_Walk_to_Transit_tour_mode_ASC_heavy_rail,0.0,0.0
@(df.is_indiv & df.tour_mode_is_walk_transit) # (3),util_Walk_to_Transit_tour_mode_ASC_commuter_rail,0.0,0.0
@(df.is_indiv & df.tour_mode_is_walk_transit) # (4),util_Walk_to_Transit_tour_mode_ASC_shared_ride_2,0.0,0.0
@(df.is_indiv & df.tour_mode_is_walk_transit) # (5),util_Walk_to_Transit_tour_mode_ASC_shared_ride_3_plus,0.0,0.0
@(df.is_indiv & df.tour_mode_is_walk_transit) # (6),util_Walk_to_Transit_tour_mode_ASC_walk,0.0,0.0
@(df.is_indiv & df.tour_mode_is_walk_transit) # (7),util_Walk_to_Transit_tour_mode_ASC_ride_hail,0.0,0.0
@(df.is_indiv & df.tour_mode_is_drive_transit & ~df.drive_ferry_available),util_Drive_to_Transit_tour_mode_ASC_light_rail_skims_differ,0.0,0.0
@(df.is_indiv & df.tour_mode_is_drive_transit & df.drive_ferry_available),util_Drive_to_Transit_tour_mode_ASC_ferry,0.0,0.0
@(df.is_indiv & df.tour_mode_is_drive_transit),util_Drive_to_Transit_tour_mode_ASC_express_bus,0.0,0.0
@(df.is_indiv & df.tour_mode_is_drive_transit) # (2),util_Drive_to_Transit_tour_mode_ASC_heavy_rail,0.0,0.0
@(df.is_indiv & df.tour_mode_is_drive_transit) # (3),util_Drive_to_Transit_tour_mode_ASC_commuter_rail,0.0,0.0
@(df.is_indiv & df.tour_mode_is_drive_transit) # (4),util_Drive_to_Transit_tour_mode_ASC_ride_hail,0.0,0.0
@(df.is_indiv & df.tour_mode_is_ride_hail),util_Ride_Hail_tour_mode_ASC_shared_ride_2,0.0,0.0
@(df.is_indiv & df.tour_mode_is_ride_hail) # (2),util_Ride_Hail_tour_mode_ASC_shared_ride_3_plus,0.0,0.0
@(df.is_indiv & df.tour_mode_is_ride_hail) # (3),util_Ride_Hail_tour_mode_ASC_walk,0.0,0.0
@(df.is_indiv & df.i_tour_mode.isin(I_RIDE_HAIL_MODES)),util_Ride_Hail_tour_mode_ASC_ride_hail_taxi,0.0,0.0
@(df.is_indiv & df.i_tour_mode.isin(I_RIDE_HAIL_MODES)) # (2),util_Ride_Hail_tour_mode_ASC_ride_hail_single,0.0,0.0
@(df.is_joint & df.i_tour_mode.isin(I_AUTO_MODES)),util_joint_auto_tour_mode_ASC_shared_ride_2,0.0,0.0
@(df.is_joint & df.i_tour_mode.isin(I_AUTO_MODES)) # (2),util_joint_auto_tour_mode_ASC_shared_ride_3_,0.0,0.0
@(df.is_joint & df.i_tour_mode.isin(I_AUTO_MODES)) # (3),util_joint_auto_tour_mode_ASC_walk,0.0,0.0
@(df.is_joint & df.i_tour_mode.isin(I_RIDE_HAIL_MODES)),util_joint_auto_tour_mode_ASC_ride_hail,0.0,0.0
@(df.is_joint & df.i_tour_mode.isin(I_RIDE_HAIL_MODES)) # (2),util_joint_Walk_tour_mode_ASC_ride_hail,0.0,0.0
@df.is_joint & (df.i_tour_mode == I_BIKE_MODE),util_joint_Bike_tour_mode_ASC_walk,0.0,0.0
@df.is_joint & (df.i_tour_mode == I_BIKE_MODE) # (2),util_joint_Bike_tour_mode_ASC_ride_hail,0.0,0.0
@(df.is_joint & df.tour_mode_is_walk_transit & ~df.walk_ferry_available),util_joint_Walk_to_Transit_tour_mode_ASC_light_rail,0.0,0.0
@(df.is_joint & df.tour_mode_is_walk_transit & df.walk_ferry_available),util_joint_Walk_to_Transit_tour_mode_ASC_ferry,0.0,0.0
@(df.is_joint & df.tour_mode_is_walk_transit),util_joint_Walk_to_Transit_tour_mode_ASC_express_bus,0.0,0.0
@(df.is_joint & df.tour_mode_is_walk_transit) # (2),util_joint_Walk_to_Transit_tour_mode_ASC_heavy_rail,0.0,0.0
@(df.is_joint & df.tour_mode_is_walk_transit) # (3),util_joint_Walk_to_Transit_tour_mode_ASC_commuter_rail,0.0,0.0
@(df.is_joint & df.tour_mode_is_walk_transit) # (4),util_joint_Walk_to_Transit_tour_mode_ASC_shared_ride_2,0.0,0.0
@(df.is_joint & df.tour_mode_is_walk_transit) # (5),util_joint_Walk_to_Transit_tour_mode_ASC_shared_ride_3_plus,0.0,0.0
@(df.is_joint & df.tour_mode_is_walk_transit) # (6),util_joint_Walk_to_Transit_tour_mode_ASC_walk,0.0,0.0
@(df.is_joint & df.tour_mode_is_walk_transit) # (7),util_joint_Walk_to_Transit_tour_mode_ASC_ride_hail,0.0,0.0
@(df.is_joint & df.tour_mode_is_drive_transit & ~df.drive_ferry_available),util_joint_Drive_to_Transit_tour_mode_ASC_light_rail_skims_differ,0.0,0.0
@(df.is_joint & df.tour_mode_is_drive_transit & df.drive_ferry_available),util_joint_Drive_to_Transit_tour_mode_ASC_ferry,0.0,0.0
@(df.is_joint & df.tour_mode_is_drive_transit),util_joint_Drive_to_Transit_tour_mode_ASC_express_bus,0.0,0.0
@(df.is_joint & df.tour_mode_is_drive_transit) # (2),util_joint_Drive_to_Transit_tour_mode_ASC_heavy_rail,0.0,0.0
@(df.is_joint & df.tour_mode_is_drive_transit) # (3),util_joint_Drive_to_Transit_tour_mode_ASC_commuter_rail,0.0,0.0
@(df.is_joint & df.tour_mode_is_drive_transit) # (4),util_joint_Drive_to_Transit_tour_mode_ASC_ride_hail,0.0,0.0
@(df.is_joint & df.tour_mode_is_ride_hail),util_joint_Ride_Hail_tour_mode_ASC_shared_ride_2,0.0,0.0
@(df.is_joint & df.tour_mode_is_ride_hail) # (2),util_joint_Ride_Hail_tour_mode_ASC_shared_ride_3_plus,0.0,0.0
@(df.is_joint & df.tour_mode_is_ride_hail) # (3),util_joint_Ride_Hail_tour_mode_ASC_walk,0.0,0.0
@(df.is_joint & df.i_tour_mode.isin(I_RIDE_HAIL_MODES)) # (3),util_joint_Ride_Hail_tour_mode_ASC_ride_hail_taxi,0.0,0.0
@(df.is_joint & df.i_tour_mode.isin(I_RIDE_HAIL_MODES)) # (4),util_joint_Ride_Hail_tour_mode_ASC_ride_hail_single,0.0,0.0
@df.tour_mode_is_walk & (od_skims['DISTWALK'] > 3),util_Walk_not_available_for_long_distances,0.0,0.0
@df.tour_mode_is_walk & (od_skims['DISTBIKE'] > 8),util_Bike_not_available_for_long_distances,0.0,0.0
@origin_density_applied*(origin_density_index_multiplier*df.origin_density_index).clip(origin_density_index_max),util_origin_density_index,-15.0,-15.0
@walk_express_penalty * ~(df.first_trip | df.first_trip),util_walk_express_penalty,0.0,0.0
@adjust_tnc_shared,util_adjust_tnc_shared,30.0,30.0
