Expression,Label,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
sov_available == False,util_DRIVEALONEFREE_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
auto_ownership == 0,util_DRIVEALONEFREE_Unavailable_for_zero_auto_households,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16,util_DRIVEALONEFREE_Unavailable_for_persons_less_than_16,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
is_joint == True,util_DRIVEALONEFREE_Unavailable_for_joint_tours,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
is_atwork_subtour & ~work_tour_is_SOV,util_DRIVEALONEFREE_Unavailable_if_didn't_drive_to_work,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@odt_skims['SOV_TIME'],util_DRIVEALONEFREE_In_vehicle_time,1.6100000143051147,2.0799999237060547,3.0899999141693115,4.0,5.820000171661377,5.380000114440918,3.5799999237060547,1.4900000095367432,1.059999942779541,1.4800000190734863,0.5299999713897705,1.75,3.109999895095825,3.130000114440918,2.9100000858306885,4.21999979019165
@coef_walktimeshort_multiplier * df.total_terminal_time,util_DRIVEALONEFREE_Terminal_time,14.3470387627,14.283792609599999,13.8482795724,13.140065510699998,13.4438033753,12.786949017299998,12.6648096852,13.831622371199998,13.842781078799998,13.9354603447,12.803323207799998,12.5760925691,12.1914810278,13.056631261,13.6231647756,12.993290771
@ivt_cost_multiplier * df.ivot * costPerMile * odt_skims['SOV_DIST'],util_DRIVEALONEFREE_Operating_cost,1.427492765740053,1.8473436871442448,2.6870451962851742,3.610716956440433,5.010219694120285,4.56237891148962,3.2468462579903696,1.2875425420221858,0.9236718435721224,1.3155325700823866,0.47583093581616154,1.5394530448145827,2.7430254192393027,2.826995503419905,2.519104861090243,3.638706984500634
@ivt_cost_multiplier * df.ivot * df.total_parking_cost,util_DRIVEALONEFREE_Parking_cost,46.83121578280596,45.731159955392556,39.71426230225901,36.576384340602814,38.95254793057896,32.03169623222092,33.97479368553912,40.559106677453,43.260369626728234,45.177963839889586,37.648167764159176,33.43917208008482,34.51041529099341,39.7135966011208,43.6719925349987,42.85080886163878
@ivt_cost_multiplier * df.ivot * odt_skims['SOV_BTOLL'],util_DRIVEALONEFREE_Bridge_toll,0.10100293532773345,0.13007953640181738,0.18517204658058106,0.24638594069815303,0.3473888669043049,0.31831225670863944,0.22649142465386307,0.09794223423674775,0.06886563316266384,0.10100293532773345,0.03519799185407835,0.12089745137202342,0.19282377650409138,0.2020058706554669,0.17598995242920554,0.2555680166063654
sovtoll_available == False,util_DRIVEALONEPAY_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
auto_ownership == 0 # (2),util_DRIVEALONEPAY_Unavailable_for_zero_auto_households,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (2),util_DRIVEALONEPAY_Unavailable_for_persons_less_than_16,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
is_joint == True # (2),util_DRIVEALONEPAY_Unavailable_for_joint_tours,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
is_atwork_subtour & ~work_tour_is_SOV # (2),util_DRIVEALONEPAY_Unavailable_if_didn't_drive_to_work,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@odt_skims['SOVTOLL_TIME'],util_DRIVEALONEPAY_In_vehicle_time,1.6100000143051147,2.0799999237060547,3.0899999141693115,4.0,5.820000171661377,5.380000114440918,3.5799999237060547,1.4900000095367432,1.059999942779541,1.4800000190734863,0.5299999713897705,1.75,3.109999895095825,3.130000114440918,2.9100000858306885,4.21999979019165
@coef_walktimeshort_multiplier * df.total_terminal_time # (2),util_DRIVEALONEPAY_Terminal_time,14.3470387627,14.283792609599999,13.8482795724,13.140065510699998,13.4438033753,12.786949017299998,12.6648096852,13.831622371199998,13.842781078799998,13.9354603447,12.803323207799998,12.5760925691,12.1914810278,13.056631261,13.6231647756,12.993290771
@ivt_cost_multiplier * df.ivot * costPerMile * odt_skims['SOVTOLL_DIST'],util_DRIVEALONEPAY_Operating_cost,1.427492765740053,1.8473436871442448,2.6870451962851742,3.610716956440433,5.010219694120285,4.56237891148962,3.2468462579903696,1.2875425420221858,0.9236718435721224,1.3155325700823866,0.47583093581616154,1.5394530448145827,2.7430254192393027,2.826995503419905,2.519104861090243,3.638706984500634
@ivt_cost_multiplier * df.ivot * df.total_parking_cost # (2),util_DRIVEALONEPAY_Parking_cost,46.83121578280596,45.731159955392556,39.71426230225901,36.576384340602814,38.95254793057896,32.03169623222092,33.97479368553912,40.559106677453,43.260369626728234,45.177963839889586,37.648167764159176,33.43917208008482,34.51041529099341,39.7135966011208,43.6719925349987,42.85080886163878
@ivt_cost_multiplier * df.ivot * odt_skims['SOVTOLL_BTOLL'],util_DRIVEALONEPAY_Bridge_toll,0.10100293532773345,0.13007953640181738,0.18517204658058106,0.24638594069815303,0.3473888669043049,0.31831225670863944,0.22649142465386307,0.09794223423674775,0.06886563316266384,0.10100293532773345,0.03519799185407835,0.12089745137202342,0.19282377650409138,0.2020058706554669,0.17598995242920554,0.2555680166063654
@ivt_cost_multiplier * df.ivot * odt_skims['SOVTOLL_VTOLL'],util_DRIVEALONEPAY_Value_toll,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
hov2_available == False,util_SHARED2FREE_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
is_joint & (number_of_participants > 2),util_SHARED2FREE_Unavailable_based_on_party_size,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@odt_skims['HOV2_TIME'],util_SHARED2FREE_In_vehicle_time,1.6100000143051147,2.0799999237060547,3.0899999141693115,4.0,5.820000171661377,5.380000114440918,3.5799999237060547,1.4900000095367432,1.059999942779541,1.4800000190734863,0.5299999713897705,1.75,3.109999895095825,3.130000114440918,2.9100000858306885,4.21999979019165
@coef_walktimeshort_multiplier * df.total_terminal_time # (3),util_SHARED2FREE_Terminal_time,14.3470387627,14.283792609599999,13.8482795724,13.140065510699998,13.4438033753,12.786949017299998,12.6648096852,13.831622371199998,13.842781078799998,13.9354603447,12.803323207799998,12.5760925691,12.1914810278,13.056631261,13.6231647756,12.993290771
@ivt_cost_multiplier * df.ivot * costPerMile * odt_skims['HOV2_DIST'],util_SHARED2FREE_Operating_cost,1.427492765740053,1.8473436871442448,2.6870451962851742,3.610716956440433,5.010219694120285,4.56237891148962,3.2468462579903696,1.2875425420221858,0.9236718435721224,1.3155325700823866,0.47583093581616154,1.5394530448145827,2.7430254192393027,2.826995503419905,2.519104861090243,3.638706984500634
@ivt_cost_multiplier * df.ivot * df.total_parking_cost / costShareSr2,util_SHARED2FREE_Parking_cost,26.76069473303198,26.13209140308146,22.693864172719433,20.900791051773037,22.25859881747369,18.303826418411955,19.41416782030807,23.176632387116,24.720211215273277,25.815979337079764,21.513238722376673,19.10809833147704,19.72023730913909,22.693483772069026,24.955424305713542,24.48617649236502
@ivt_cost_multiplier * df.ivot * odt_skims['HOV2_BTOLL'] / costShareSr2,util_SHARED2FREE_Bridge_toll,0.057715963044419116,0.07433116365818136,0.10581259804604633,0.1407919661132303,0.1985079239453171,0.18189271811922253,0.1294236712307789,0.05596699099242729,0.03935179037866505,0.057715963044419116,0.020113138202330485,0.06908425792687052,0.11018501514519508,0.11543192608883823,0.10056568710240317,0.1460388666322088
@(df.hhsize == 1),util_SHARED2FREE_One_person_household,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
hov2toll_available == False,util_SHARED2PAY_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
is_joint & (number_of_participants > 2) # (2),util_SHARED2PAY_Unavailable_based_on_party_size,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@odt_skims['HOV2TOLL_TIME'],util_SHARED2PAY_In_vehicle_time,1.6100000143051147,2.0799999237060547,3.0899999141693115,4.0,5.820000171661377,5.380000114440918,3.5799999237060547,1.4900000095367432,1.059999942779541,1.4800000190734863,0.5299999713897705,1.75,3.109999895095825,3.130000114440918,2.9100000858306885,4.21999979019165
@coef_walktimeshort_multiplier * df.total_terminal_time # (4),util_SHARED2PAY_Terminal_time,14.3470387627,14.283792609599999,13.8482795724,13.140065510699998,13.4438033753,12.786949017299998,12.6648096852,13.831622371199998,13.842781078799998,13.9354603447,12.803323207799998,12.5760925691,12.1914810278,13.056631261,13.6231647756,12.993290771
@ivt_cost_multiplier * df.ivot * costPerMile * odt_skims['HOV2TOLL_DIST'],util_SHARED2PAY_Operating_cost,1.427492765740053,1.8473436871442448,2.6870451962851742,3.610716956440433,5.010219694120285,4.56237891148962,3.2468462579903696,1.2875425420221858,0.9236718435721224,1.3155325700823866,0.47583093581616154,1.5394530448145827,2.7430254192393027,2.826995503419905,2.519104861090243,3.638706984500634
@ivt_cost_multiplier * df.ivot * df.total_parking_cost / costShareSr2 # (2),util_SHARED2PAY_Parking_cost,26.76069473303198,26.13209140308146,22.693864172719433,20.900791051773037,22.25859881747369,18.303826418411955,19.41416782030807,23.176632387116,24.720211215273277,25.815979337079764,21.513238722376673,19.10809833147704,19.72023730913909,22.693483772069026,24.955424305713542,24.48617649236502
@ivt_cost_multiplier * df.ivot * odt_skims['HOV2TOLL_BTOLL'] / costShareSr2,util_SHARED2PAY_Bridge_toll,0.057715963044419116,0.07433116365818136,0.10581259804604633,0.1407919661132303,0.1985079239453171,0.18189271811922253,0.1294236712307789,0.05596699099242729,0.03935179037866505,0.057715963044419116,0.020113138202330485,0.06908425792687052,0.11018501514519508,0.11543192608883823,0.10056568710240317,0.1460388666322088
@ivt_cost_multiplier * df.ivot * odt_skims['HOV2TOLL_VTOLL'] / costShareSr2,util_SHARED2PAY_Value_toll,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.hhsize == 1) # (2),util_SHARED2PAY_One_person_household,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
hov3_available == False,util_SHARED3FREE_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@odt_skims['HOV3_TIME'],util_SHARED3FREE_In_vehicle_time,1.6100000143051147,2.0799999237060547,3.0899999141693115,4.0,5.820000171661377,5.380000114440918,3.5799999237060547,1.4900000095367432,1.059999942779541,1.4800000190734863,0.5299999713897705,1.75,3.109999895095825,3.130000114440918,2.9100000858306885,4.21999979019165
@coef_walktimeshort_multiplier * df.total_terminal_time # (5),util_SHARED3FREE_Terminal_time,14.3470387627,14.283792609599999,13.8482795724,13.140065510699998,13.4438033753,12.786949017299998,12.6648096852,13.831622371199998,13.842781078799998,13.9354603447,12.803323207799998,12.5760925691,12.1914810278,13.056631261,13.6231647756,12.993290771
@ivt_cost_multiplier * df.ivot * costPerMile * odt_skims['HOV3_DIST'],util_SHARED3FREE_Operating_cost,1.427492765740053,1.8473436871442448,2.6870451962851742,3.610716956440433,5.010219694120285,4.56237891148962,3.2468462579903696,1.2875425420221858,0.9236718435721224,1.3155325700823866,0.47583093581616154,1.5394530448145827,2.7430254192393027,2.826995503419905,2.519104861090243,3.638706984500634
@ivt_cost_multiplier * df.ivot *  df.total_parking_cost / costShareSr3,util_SHARED3FREE_Parking_cost,18.732486313122386,18.292463982157024,15.885704920903603,14.630553736241126,15.581019172231583,12.81267849288837,13.589917474215648,16.2236426709812,17.304147850691294,18.071185535955834,15.05926710566367,13.375668832033929,13.804166116397363,15.885438640448319,17.46879701399948,17.140323544655512
@ivt_cost_multiplier * df.ivot * odt_skims['HOV3_BTOLL'] / costShareSr3,util_SHARED3FREE_Bridge_toll,0.040401174131093384,0.052031814560726954,0.07406881863223243,0.09855437627926121,0.13895554676172198,0.12732490268345578,0.09059656986154523,0.0391768936946991,0.027546253265065535,0.040401174131093384,0.014079196741631338,0.04835898054880937,0.07712951060163656,0.08080234826218677,0.07039598097168222,0.10222720664254617
@(df.hhsize == 1) # (3),util_SHARED3FREE_One_person_household,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
hov3toll_available == False,util_SHARED3PAY_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@odt_skims['HOV3TOLL_TIME'],util_SHARED3PAY_In_vehicle_time,1.6100000143051147,2.0799999237060547,3.0899999141693115,4.0,5.820000171661377,5.380000114440918,3.5799999237060547,1.4900000095367432,1.059999942779541,1.4800000190734863,0.5299999713897705,1.75,3.109999895095825,3.130000114440918,2.9100000858306885,4.21999979019165
@coef_walktimeshort_multiplier * df.total_terminal_time # (6),util_SHARED3PAY_Terminal_time,14.3470387627,14.283792609599999,13.8482795724,13.140065510699998,13.4438033753,12.786949017299998,12.6648096852,13.831622371199998,13.842781078799998,13.9354603447,12.803323207799998,12.5760925691,12.1914810278,13.056631261,13.6231647756,12.993290771
@ivt_cost_multiplier * df.ivot * costPerMile * odt_skims['HOV3TOLL_DIST'],util_SHARED3PAY_Operating_cost,1.427492765740053,1.8473436871442448,2.6870451962851742,3.610716956440433,5.010219694120285,4.56237891148962,3.2468462579903696,1.2875425420221858,0.9236718435721224,1.3155325700823866,0.47583093581616154,1.5394530448145827,2.7430254192393027,2.826995503419905,2.519104861090243,3.638706984500634
@ivt_cost_multiplier * df.ivot * df.total_parking_cost / costShareSr3,util_SHARED3PAY_Parking_cost,18.732486313122386,18.292463982157024,15.885704920903603,14.630553736241126,15.581019172231583,12.81267849288837,13.589917474215648,16.2236426709812,17.304147850691294,18.071185535955834,15.05926710566367,13.375668832033929,13.804166116397363,15.885438640448319,17.46879701399948,17.140323544655512
@ivt_cost_multiplier * df.ivot * odt_skims['HOV3TOLL_BTOLL'] / costShareSr3,util_SHARED3PAY_Bridge_toll,0.040401174131093384,0.052031814560726954,0.07406881863223243,0.09855437627926121,0.13895554676172198,0.12732490268345578,0.09059656986154523,0.0391768936946991,0.027546253265065535,0.040401174131093384,0.014079196741631338,0.04835898054880937,0.07712951060163656,0.08080234826218677,0.07039598097168222,0.10222720664254617
@ivt_cost_multiplier * df.ivot * odt_skims['HOV3TOLL_VTOLL'] / costShareSr3,util_SHARED3PAY_Value_toll,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.hhsize == 1) # (4),util_SHARED3PAY_One_person_household,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@coef_walktimeshort_multiplier * od_skims['DISTWALK'].clip(upper=walkThresh) * 60/walkSpeed,util_WALK_Time_up_to_2_miles,13.746233940124512,17.789243698120117,25.066659927368164,26.953399658203125,26.953399658203125,26.953399658203125,26.953399658203125,12.398563385009766,8.894621849060059,12.668097496032715,4.582077980041504,14.824370384216309,25.87526512145996,26.953399658203125,24.258058547973633,26.953399658203125
@walktimelong_multiplier * (od_skims['DISTWALK'] - walkThresh).clip(lower=0) * 60/walkSpeed,util_WALK_Time_beyond_2_of_a_miles,0.0,0.0,0.0,28.9999942779541,77.0,61.000003814697266,13.0,0.0,0.0,0.0,0.0,0.0,0.0,0.9999990463256836,0.0,27.999998092651367
@density_index_multiplier * df.density_index,util_WALK_Destination_zone_densityIndex,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556
@topology_walk_multiplier * df.trip_topology,util_WALK_Topology,30.0,30.0,30.0,30.0,30.0,30.0,30.0,30.0,30.0,30.0,30.0,30.0,30.0,30.0,30.0,30.0
is_atwork_subtour & ~work_tour_is_bike,util_BIKE_Unavailable_if_didn't_bike_to_work,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@coef_biketimeshort_multiplier * od_skims['DISTBIKE'].clip(upper=bikeThresh)*60/bikeSpeed,util_BIKE_Time_up_to_6_miles,6.873142242431641,8.894655227661133,12.533377647399902,17.385005950927734,23.853845596313477,21.69756507873535,15.228726387023926,6.199305057525635,4.447327613830566,6.334072113037109,2.2910473346710205,7.412212371826172,12.937679290771484,13.611515998840332,12.129074096679688,17.2502384185791
@coef_biketimeshort_multiplier * biketimelong_multiplier * (od_skims['DISTBIKE']-bikeThresh).clip(lower=0)*60/bikeSpeed,util_BIKE_Time_beyond_6_of_a_miles,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@density_index_multiplier*df.density_index,util_BIKE_Destination_zone_densityIndex,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556
@topology_bike_multiplier * df.trip_topology,util_BIKE_Topology,40.0,40.0,40.0,40.0,40.0,40.0,40.0,40.0,40.0,40.0,40.0,40.0,40.0,40.0,40.0,40.0
walk_local_available == False,util_WALK_LOC_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0
@odt_skims['WLK_LOC_WLK_TOTIVT']/100,util_WALK_LOC_In_vehicle_time,2.043800115585327,2.408400058746338,4.341599941253662,6.930700302124023,9.143799781799316,9.541299819946289,5.066900253295898,0.9719000458717346,0.6072999835014343,0.6072999835014343,0.0,2.6338000297546387,6.424099922180176,1.3864998817443848,5.824899673461914,8.486599922180176
@coef_short_iwait_multiplier * (odt_skims['WLK_LOC_WLK_IWAIT']/100).clip(upper=waitThresh),util_WALK_LOC_Short_iwait_time,2.273653984069824,2.7992453575134277,1.2629015445709229,5.076807498931885,2.7992453575134277,2.880105495452881,2.8396754264831543,2.8396754264831543,2.7992453575134277,2.7992453575134277,0.0,10.130570411682129,2.862720251083374,2.7992453575134277,5.076807498931885,5.076807498931885
@coef_long_iwait_multiplier * (odt_skims['WLK_LOC_WLK_IWAIT']/100-waitThresh).clip(0),util_WALK_LOC_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@coef_xwait_multiplier * odt_skims['WLK_LOC_WLK_XWAIT']/100,util_WALK_LOC_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.2398563623428345,0.0,0.0,0.0
@xfers_wlk_multiplier * (odt_skims['WLK_LOC_WLK_BOARDS']-1).clip(0),util_WALK_LOC_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.0,0.0,0.0,0.0
@coef_wacc_multiplier * df.origin_walk_time,util_WALK_LOC_Walk_access_time,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822
@coef_wegr_multiplier * df.destination_walk_time,util_WALK_LOC_Walk_egress_time,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822
@coef_waux_multiplier * odt_skims['WLK_LOC_WLK_WAUX']/100,util_WALK_LOC_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * odt_skims['WLK_LOC_WLK_FAR'],util_WALK_LOC_Fare,23.261281151157743,23.261281151157743,23.261281151157743,23.261281151157743,23.261281151157743,23.261281151157743,23.261281151157743,23.261281151157743,23.261281151157743,23.261281151157743,0.0,23.261281151157743,23.261281151157743,23.261281151157743,23.261281151157743,23.261281151157743
@density_index_multiplier * df.density_index # (2),util_WALK_LOC_Destination_zone_densityIndex,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556
@topology_trn_multiplier * df.trip_topology,util_WALK_LOC_Topology,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4
walk_lrf_available == False,util_WALK_LRF_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@odt_skims['WLK_LRF_WLK_TOTIVT']/100,util_WALK_LRF_In_vehicle_time,2.043800115585327,2.043800115585327,4.341599941253662,6.930700302124023,6.668300151824951,9.541299819946289,5.066900253295898,0.9719000458717346,0.6072999835014343,0.6072999835014343,0.0,2.9626998901367188,3.5350000858306885,1.3864998817443848,5.824899673461914,8.486599922180176
@(coef_ivt_lrt_multiplier-1) * odt_skims['WLK_LRF_WLK_KEYIVT']/100,util_WALK_LRF_In_vehicle_time_on_Light_Rail,-0.0,-0.0,-0.0,-0.0,-2.624309778213501,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-1.1659705638885498,-0.0,-0.0,-0.0,-0.0
@(coef_ivt_ferry_multiplier-coef_ivt_lrt_multiplier) * odt_skims['WLK_LRF_WLK_FERRYIVT']/100,util_WALK_LRF_In_vehicle_time_on_Ferry,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@coef_short_iwait_multiplier * (odt_skims['WLK_LRF_WLK_IWAIT']/100).clip(upper=waitThresh),util_WALK_LRF_Short_iwait_time,2.273653984069824,2.273653984069824,1.2629015445709229,5.076807498931885,1.5327050685882568,2.880105495452881,2.8396754264831543,2.8396754264831543,2.7992453575134277,2.7992453575134277,0.0,3.500303268432617,2.8396754264831543,2.7992453575134277,5.076807498931885,5.076807498931885
@coef_long_iwait_multiplier * (odt_skims['WLK_LRF_WLK_IWAIT']/100-waitThresh).clip(0),util_WALK_LRF_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@coef_xwait_multiplier * odt_skims['WLK_LRF_WLK_XWAIT']/100,util_WALK_LRF_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xfers_wlk_multiplier * (odt_skims['WLK_LRF_WLK_BOARDS']-1).clip(0),util_WALK_LRF_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@coef_wacc_multiplier * df.origin_walk_time # (2),util_WALK_LRF_Walk_access_time,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822
@coef_wegr_multiplier * df.destination_walk_time # (2),util_WALK_LRF_Walk_egress_time,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822
@coef_waux_multiplier * odt_skims['WLK_LRF_WLK_WAUX']/100,util_WALK_LRF_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * odt_skims['WLK_LRF_WLK_FAR'],util_WALK_LRF_Fare,23.261281151157743,23.261281151157743,23.261281151157743,23.261281151157743,0.0,23.261281151157743,23.261281151157743,23.261281151157743,23.261281151157743,23.261281151157743,0.0,23.261281151157743,23.261281151157743,23.261281151157743,23.261281151157743,23.261281151157743
@density_index_multiplier * df.density_index # (3),util_WALK_LRF_Destination_zone_densityIndex,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556
@topology_trn_multiplier * df.trip_topology # (2),util_WALK_LRF_Topology,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4
walk_express_available == False,util_WALK_EXP_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@odt_skims['WLK_EXP_WLK_TOTIVT']/100,util_WALK_EXP_In_vehicle_time,2.043800115585327,2.043800115585327,4.341599941253662,6.930700302124023,9.143799781799316,9.541299819946289,5.066900253295898,0.9719000458717346,0.6072999835014343,0.6072999835014343,0.0,2.9626998901367188,3.5350000858306885,1.3864998817443848,5.824899673461914,8.486599922180176
@(ivt_exp_multiplier - 1) * odt_skims['WLK_EXP_WLK_KEYIVT']/100,util_WALK_EXP_In_vehicle_time_on_Express_bus,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@coef_short_iwait_multiplier * (odt_skims['WLK_EXP_WLK_IWAIT']/100).clip(upper=waitThresh),util_WALK_EXP_Short_iwait_time,2.273653984069824,2.273653984069824,1.2629015445709229,5.076807498931885,2.7992453575134277,2.880105495452881,2.8396754264831543,2.8396754264831543,2.7992453575134277,2.7992453575134277,0.0,3.500303268432617,2.8396754264831543,2.7992453575134277,5.076807498931885,5.076807498931885
@coef_long_iwait_multiplier * (odt_skims['WLK_EXP_WLK_IWAIT']/100-waitThresh).clip(0),util_WALK_EXP_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@coef_xwait_multiplier * odt_skims['WLK_EXP_WLK_XWAIT']/100,util_WALK_EXP_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xfers_wlk_multiplier * (odt_skims['WLK_EXP_WLK_BOARDS']-1).clip(0),util_WALK_EXP_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@coef_wacc_multiplier * df.origin_walk_time # (3),util_WALK_EXP_Walk_access_time,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822
@coef_wegr_multiplier * df.destination_walk_time # (3),util_WALK_EXP_Walk_egress_time,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822
@coef_waux_multiplier * odt_skims['WLK_EXP_WLK_WAUX']/100,util_WALK_EXP_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * odt_skims['WLK_EXP_WLK_FAR'],util_WALK_EXP_Fare,23.261281151157743,23.261281151157743,23.261281151157743,23.261281151157743,23.261281151157743,23.261281151157743,23.261281151157743,23.261281151157743,23.261281151157743,23.261281151157743,0.0,23.261281151157743,23.261281151157743,23.261281151157743,23.261281151157743,23.261281151157743
@density_index_multiplier * df.density_index # (4),util_WALK_EXP_Destination_zone_densityIndex,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556
@topology_trn_multiplier * df.trip_topology # (3),util_WALK_EXP_Topology,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4
walk_heavyrail_available == False,util_WALK_HVY_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@odt_skims['WLK_HVY_WLK_TOTIVT']/100,util_WALK_HVY_In_vehicle_time,2.043800115585327,2.043800115585327,4.341599941253662,6.930700302124023,4.71750020980835,9.541299819946289,5.066900253295898,0.9719000458717346,0.6072999835014343,0.6072999835014343,0.0,2.9626998901367188,3.5350000858306885,1.3864998817443848,5.824899673461914,8.486599922180176
@(ivt_hvy_multiplier-1) * odt_skims['WLK_HVY_WLK_KEYIVT']/100,util_WALK_HVY_In_vehicle_time_on_heavy_rail,-0.0,-0.0,-0.0,-0.0,-0.9434999823570251,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@coef_short_iwait_multiplier * (odt_skims['WLK_HVY_WLK_IWAIT']/100).clip(upper=waitThresh),util_WALK_HVY_Short_iwait_time,2.273653984069824,2.273653984069824,1.2629015445709229,5.076807498931885,2.8249857425689697,2.880105495452881,2.8396754264831543,2.8396754264831543,2.7992453575134277,2.7992453575134277,0.0,3.500303268432617,2.8396754264831543,2.7992453575134277,5.076807498931885,5.076807498931885
@coef_long_iwait_multiplier * (odt_skims['WLK_HVY_WLK_IWAIT']/100-waitThresh).clip(0),util_WALK_HVY_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@coef_xwait_multiplier * odt_skims['WLK_HVY_WLK_XWAIT']/100,util_WALK_HVY_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xfers_wlk_multiplier * (odt_skims['WLK_HVY_WLK_BOARDS']-1).clip(0),util_WALK_HVY_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@coef_wacc_multiplier * df.origin_walk_time # (4),util_WALK_HVY_Walk_access_time,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822
@coef_wegr_multiplier * df.destination_walk_time # (4),util_WALK_HVY_Walk_egress_time,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822
@coef_waux_multiplier * odt_skims['WLK_HVY_WLK_WAUX']/100,util_WALK_HVY_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * odt_skims['WLK_HVY_WLK_FAR'],util_WALK_HVY_Fare,23.261281151157743,23.261281151157743,23.261281151157743,23.261281151157743,19.741482029600977,23.261281151157743,23.261281151157743,23.261281151157743,23.261281151157743,23.261281151157743,0.0,23.261281151157743,23.261281151157743,23.261281151157743,23.261281151157743,23.261281151157743
@density_index_multiplier * df.density_index # (5),util_WALK_HVY_Destination_zone_densityIndex,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556
@topology_trn_multiplier * df.trip_topology # (4),util_WALK_HVY_Topology,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4
walk_commuter_available == False,util_WALK_COM_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@odt_skims['WLK_COM_WLK_TOTIVT']/100,util_WALK_COM_In_vehicle_time,2.043800115585327,2.043800115585327,4.341599941253662,6.930700302124023,9.143799781799316,9.541299819946289,5.066900253295898,0.9719000458717346,0.6072999835014343,0.6072999835014343,0.0,2.9626998901367188,3.5350000858306885,1.3864998817443848,5.824899673461914,8.486599922180176
@(ivt_com_multiplier - 1) * odt_skims['WLK_COM_WLK_KEYIVT']/100,util_WALK_COM_In_vehicle_time_on_commuter_rail,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@coef_short_iwait_multiplier * (odt_skims['WLK_COM_WLK_IWAIT']/100).clip(upper=waitThresh),util_WALK_COM_Short_iwait_time,2.273653984069824,2.273653984069824,1.2629015445709229,5.076807498931885,2.7992453575134277,2.880105495452881,2.8396754264831543,2.8396754264831543,2.7992453575134277,2.7992453575134277,0.0,3.500303268432617,2.8396754264831543,2.7992453575134277,5.076807498931885,5.076807498931885
@coef_long_iwait_multiplier * (odt_skims['WLK_COM_WLK_IWAIT']/100-waitThresh).clip(0),util_WALK_COM_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@coef_xwait_multiplier * odt_skims['WLK_COM_WLK_XWAIT']/100,util_WALK_COM_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xfers_wlk_multiplier * (odt_skims['WLK_COM_WLK_BOARDS']-1).clip(0),util_WALK_COM_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@coef_wacc_multiplier * df.origin_walk_time # (5),util_WALK_COM_Walk_access_time,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822
@coef_wegr_multiplier * df.destination_walk_time # (5),util_WALK_COM_Walk_egress_time,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822
@coef_waux_multiplier * odt_skims['WLK_COM_WLK_WAUX']/100,util_WALK_COM_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * odt_skims['WLK_COM_WLK_FAR'],util_WALK_COM_Fare,23.261281151157743,23.261281151157743,23.261281151157743,23.261281151157743,23.261281151157743,23.261281151157743,23.261281151157743,23.261281151157743,23.261281151157743,23.261281151157743,0.0,23.261281151157743,23.261281151157743,23.261281151157743,23.261281151157743,23.261281151157743
@density_index_multiplier * df.density_index # (6),util_WALK_COM_Destination_zone_densityIndex,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556
@topology_trn_multiplier * df.trip_topology # (5),util_WALK_COM_Topology,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4
auto_ownership == 0 # (3),util_DRIVE_LOC_Unavailable_for_zero_auto_households,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (3),util_DRIVE_LOC_Unavailable_for_persons_less_than_16,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@density_index_multiplier * df.density_index # (7),util_DRIVE_LOC_Destination_zone_densityIndex,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556
@topology_trn_multiplier * df.trip_topology # (6),util_DRIVE_LOC_Topology,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4
outbound & ~drive_local_available_outbound,util_DRIVE_LOC_outbound_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * odt_skims['DRV_LOC_WLK_TOTIVT']/100,util_DRIVE_LOC_outbound_In_vehicle_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * coef_short_iwait_multiplier * (odt_skims['DRV_LOC_WLK_IWAIT']/100).clip(upper=waitThresh),util_DRIVE_LOC_outbound_Short_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * coef_long_iwait_multiplier * (odt_skims['DRV_LOC_WLK_IWAIT']/100-waitThresh).clip(0),util_DRIVE_LOC_outbound_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * coef_xwait_multiplier * odt_skims['DRV_LOC_WLK_XWAIT']/100,util_DRIVE_LOC_outbound_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * xfers_wlk_multiplier * (odt_skims['DRV_LOC_WLK_BOARDS']-1).clip(0),util_DRIVE_LOC_outbound_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * coef_dtim_multiplier * odt_skims['DRV_LOC_WLK_DTIM']/100,util_DRIVE_LOC_outbound_Drive_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * coef_wegr_multiplier * df.destination_walk_time,util_DRIVE_LOC_outbound_Walk_egress_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * coef_waux_multiplier * odt_skims['DRV_LOC_WLK_WAUX']/100,util_DRIVE_LOC_outbound_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * ivt_cost_multiplier * df.ivot * (odt_skims['DRV_LOC_WLK_FAR'] + costPerMile*odt_skims['DRV_LOC_WLK_DDIST']/100),util_DRIVE_LOC_outbound_Fare_and_operating_cost,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * dacc_ratio_multiplier * (odt_skims['DRV_LOC_WLK_DDIST']/100)/ (od_skims['DIST']),util_DRIVE_LOC_outbound_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
inbound & ~drive_local_available_inbound,util_DRIVE_LOC_inbound_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * odt_skims['WLK_LOC_DRV_TOTIVT']/100,util_DRIVE_LOC_inbound_In_vehicle_time,2.043800115585327,2.043800115585327,4.341599941253662,4.341599941253662,6.496699810028076,5.066900253295898,4.341599941253662,2.043800115585327,0.6072999835014343,0.6072999835014343,0.0,0.6378999948501587,4.341599941253662,2.043800115585327,2.408400058746338,4.341599941253662
@df.inbound * coef_short_iwait_multiplier * (odt_skims['WLK_LOC_DRV_IWAIT']/100).clip(upper=waitThresh),util_DRIVE_LOC_inbound_Short_iwait_time,2.2736541282021996,2.2736541282021996,1.2629015478748082,1.2629015478748082,2.7992454089236256,2.839675470366478,1.2629015478748082,2.2736541282021996,2.7992454089236256,2.7992454089236256,0.0,1.4111451868259905,1.2629015478748082,2.2736541282021996,2.7992454089236256,1.2629015478748082
@df.inbound * coef_long_iwait_multiplier * (odt_skims['WLK_LOC_DRV_IWAIT']/100-waitThresh).clip(0),util_DRIVE_LOC_inbound_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * coef_xwait_multiplier * odt_skims['WLK_LOC_DRV_XWAIT']/100,util_DRIVE_LOC_inbound_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * xfers_wlk_multiplier * (odt_skims['WLK_LOC_DRV_BOARDS']-1).clip(0),util_DRIVE_LOC_inbound_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * coef_dtim_multiplier * odt_skims['WLK_LOC_DRV_DTIM']/100,util_DRIVE_LOC_inbound_Drive_time,0.40430099999999997,1.0107525,0.5255913,2.4258059999999997,2.4258059999999997,2.3449457999999996,2.3449457999999996,0.9298922999999999,0.4851612,0.4851612,0.0,2.3045156999999996,2.5470962999999998,1.4959136999999998,1.8597845999999998,2.7492468
@df.inbound * coef_wacc_multiplier * df.origin_walk_time,util_DRIVE_LOC_inbound_Walk_access_time,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822
@df.inbound * coef_waux_multiplier * odt_skims['WLK_LOC_DRV_WAUX']/100,util_DRIVE_LOC_inbound_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * ivt_cost_multiplier * df.ivot * (odt_skims['WLK_LOC_DRV_FAR'] + costPerMile*odt_skims['WLK_LOC_DRV_DDIST']/100),util_DRIVE_LOC_inbound_Fare_and_operating_cost,23.54118089541075,23.96103167935271,23.625151986249097,24.94068428692557,24.94068428692557,24.884704338074968,24.884704338074968,23.90505173050211,23.597160844261353,23.597160844261353,0.0,24.856713196087227,25.024655377763917,24.296913707581208,24.548824644971358,25.16460408232798
@df.outbound * dacc_ratio_multiplier * (odt_skims['WLK_LOC_DRV_DDIST']/100)/ (od_skims['DIST']),util_DRIVE_LOC_inbound_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
auto_ownership == 0 # (4),util_DRIVE_LRF_Unavailable_for_zero_auto_households,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (4),util_DRIVE_LRF_Unavailable_for_persons_less_than_16,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@density_index_multiplier * df.density_index # (8),util_DRIVE_LRF_Destination_zone_densityIndex,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556
@topology_trn_multiplier * df.trip_topology # (7),util_DRIVE_LRF_Topology,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4
outbound & ~drive_lrf_available_outbound,util_DRIVE_LRF_outbound_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * odt_skims['DRV_LRF_WLK_TOTIVT']/100,util_DRIVE_LRF_outbound_In_vehicle_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * (coef_ivt_lrt_multiplier - 1)*odt_skims['DRV_LRF_WLK_KEYIVT']/100,util_DRIVE_LRF_outbound_In_vehicle_time_on_LR,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * (coef_ivt_ferry_multiplier-coef_ivt_lrt_multiplier)*odt_skims['DRV_LRF_WLK_FERRYIVT']/100,util_DRIVE_LRF_outbound_In_vehicle_time_on_Ferry,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * coef_short_iwait_multiplier * (odt_skims['DRV_LRF_WLK_IWAIT']/100).clip(upper=waitThresh),util_DRIVE_LRF_outbound_Short_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * coef_long_iwait_multiplier * (odt_skims['DRV_LRF_WLK_IWAIT']/100-waitThresh).clip(0),util_DRIVE_LRF_outbound_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * coef_xwait_multiplier * odt_skims['DRV_LRF_WLK_XWAIT']/100,util_DRIVE_LRF_outbound_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * xfers_drv_multiplier * (odt_skims['DRV_LRF_WLK_BOARDS']-1).clip(0),util_DRIVE_LRF_outbound_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * coef_dtim_multiplier * odt_skims['DRV_LRF_WLK_DTIM']/100,util_DRIVE_LRF_outbound_Drive_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * coef_wegr_multiplier * df.destination_walk_time # (2),util_DRIVE_LRF_outbound_Walk_egress_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * coef_waux_multiplier * odt_skims['DRV_LRF_WLK_WAUX']/100,util_DRIVE_LRF_outbound_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * ivt_cost_multiplier * df.ivot * (odt_skims['DRV_LRF_WLK_FAR'] + costPerMile * odt_skims['DRV_LRF_WLK_DDIST']/100),util_DRIVE_LRF_outbound_Fare_and_operating_cost,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * dacc_ratio_multiplier * (odt_skims['DRV_LRF_WLK_DDIST']/100) / od_skims['DIST'],util_DRIVE_LRF_outbound_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
inbound & ~drive_lrf_available_inbound,util_DRIVE_LRF_inbound_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@df.inbound * odt_skims['WLK_LRF_DRV_TOTIVT']/100,util_DRIVE_LRF_inbound_In_vehicle_time,40.217098236083984,40.217098236083984,40.217098236083984,40.217098236083984,40.217098236083984,40.217098236083984,40.217098236083984,40.217098236083984,40.217098236083984,40.217098236083984,0.0,40.217098236083984,40.217098236083984,40.217098236083984,40.217098236083984,40.217098236083984
@df.inbound * (coef_ivt_lrt_multiplier - 1)*odt_skims['WLK_LRF_DRV_KEYIVT']/100,util_DRIVE_LRF_inbound_In_vehicle_time_on_LR,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.inbound * (coef_ivt_ferry_multiplier-coef_ivt_lrt_multiplier)*odt_skims['WLK_LRF_DRV_FERRYIVT']/100,util_DRIVE_LRF_inbound_In_vehicle_time_on_Ferry,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.inbound * coef_short_iwait_multiplier * (odt_skims['WLK_LRF_DRV_IWAIT']/100).clip(upper=waitThresh),util_DRIVE_LRF_inbound_Short_iwait_time,13.4767,13.4767,13.4767,13.4767,13.4767,13.4767,13.4767,13.4767,13.4767,13.4767,0.0,13.4767,13.4767,13.4767,13.4767,13.4767
@df.inbound * coef_long_iwait_multiplier * (odt_skims['WLK_LRF_DRV_IWAIT']/100-waitThresh).clip(0),util_DRIVE_LRF_inbound_Long_iwait_time,3.3733123929977413,3.3733123929977413,3.3733123929977413,3.3733123929977413,3.3733123929977413,3.3733123929977413,3.3733123929977413,3.3733123929977413,3.3733123929977413,3.3733123929977413,0.0,3.3733123929977413,3.3733123929977413,3.3733123929977413,3.3733123929977413,3.3733123929977413
@df.inbound * coef_xwait_multiplier * odt_skims['WLK_LRF_DRV_XWAIT']/100,util_DRIVE_LRF_inbound_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * xfers_drv_multiplier * (odt_skims['WLK_LRF_DRV_BOARDS']-1).clip(0),util_DRIVE_LRF_inbound_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * coef_dtim_multiplier * odt_skims['WLK_LRF_DRV_DTIM']/100,util_DRIVE_LRF_inbound_Drive_time,18.3148353,17.8566275,16.158563299999997,17.2636527,15.673402099999999,14.271825299999998,14.366162199999998,16.670677899999998,17.4388498,17.371466299999998,0.0,14.1235816,14.0561981,19.325587799999997,19.0695305,19.3121111
@df.inbound * coef_wacc_multiplier * df.origin_walk_time # (2),util_DRIVE_LRF_inbound_Walk_access_time,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822
@df.inbound * coef_waux_multiplier * odt_skims['WLK_LRF_DRV_WAUX']/100,util_DRIVE_LRF_inbound_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * ivt_cost_multiplier * df.ivot * (odt_skims['WLK_LRF_DRV_FAR'] + costPerMile * odt_skims['WLK_LRF_DRV_DDIST']/100),util_DRIVE_LRF_inbound_Fare_and_operating_cost,63.651132991413824,63.371230912035934,62.2236337876615,60.46026423130509,58.66890119783606,57.99714181162883,58.528952493271994,62.44755825331367,63.06334002579518,63.67911712802692,0.0,60.90810382210991,60.88011501524704,64.2949035707582,64.21092780967008,64.35088585473368
@df.inbound * dacc_ratio_multiplier * (odt_skims['WLK_LRF_DRV_DDIST']/100)/ od_skims['DIST'],util_DRIVE_LRF_inbound_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
auto_ownership == 0 # (5),util_DRIVE_EXP_Unavailable_for_zero_auto_households,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (5),util_DRIVE_EXP_Unavailable_for_persons_less_than_16,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@density_index_multiplier * df.density_index # (9),util_DRIVE_EXP_Destination_zone_densityIndex,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556
@topology_trn_multiplier * df.trip_topology # (8),util_DRIVE_EXP_Topology,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4
outbound & ~drive_express_available_outbound,util_DRIVE_EXP_outbound_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * odt_skims['DRV_EXP_WLK_TOTIVT']/100,util_DRIVE_EXP_outbound_In_vehicle_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * (ivt_exp_multiplier - 1) * odt_skims['DRV_EXP_WLK_KEYIVT']/100,util_DRIVE_EXP_outbound_In_vehicle_time_on_EXP,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * coef_short_iwait_multiplier * (odt_skims['DRV_EXP_WLK_IWAIT']/100).clip(upper=waitThresh),util_DRIVE_EXP_outbound_Short_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * coef_long_iwait_multiplier * (odt_skims['DRV_EXP_WLK_IWAIT']/100-waitThresh).clip(0),util_DRIVE_EXP_outbound_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * coef_xwait_multiplier * odt_skims['DRV_EXP_WLK_XWAIT']/100,util_DRIVE_EXP_outbound_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * xfers_drv_multiplier * (odt_skims['DRV_EXP_WLK_BOARDS']-1).clip(0),util_DRIVE_EXP_outbound_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * coef_dtim_multiplier * odt_skims['DRV_EXP_WLK_DTIM']/100,util_DRIVE_EXP_outbound_Drive_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * coef_wegr_multiplier * df.destination_walk_time # (3),util_DRIVE_EXP_outbound_Walk_egress_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * coef_waux_multiplier * odt_skims['DRV_EXP_WLK_WAUX']/100,util_DRIVE_EXP_outbound_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * ivt_cost_multiplier * df.ivot * (odt_skims['DRV_EXP_WLK_FAR'] + costPerMile * odt_skims['DRV_EXP_WLK_DDIST']/100),util_DRIVE_EXP_outbound_Fare_and_operating_cost,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * dacc_ratio_multiplier * (odt_skims['DRV_EXP_WLK_DDIST']/100) / od_skims['DIST'],util_DRIVE_EXP_outbound_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
inbound & ~drive_express_available_inbound,util_DRIVE_EXP_inbound_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@df.inbound * odt_skims['WLK_EXP_DRV_TOTIVT']/100,util_DRIVE_EXP_inbound_In_vehicle_time,40.217098236083984,40.217098236083984,40.217098236083984,40.217098236083984,40.217098236083984,40.217098236083984,40.217098236083984,40.217098236083984,40.217098236083984,40.217098236083984,0.0,40.217098236083984,40.217098236083984,40.217098236083984,40.217098236083984,40.217098236083984
@df.inbound * (ivt_exp_multiplier - 1) * odt_skims['WLK_EXP_DRV_KEYIVT']/100,util_DRIVE_EXP_inbound_In_vehicle_time_on_EXP,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.inbound * coef_short_iwait_multiplier * (odt_skims['WLK_EXP_DRV_IWAIT']/100).clip(upper=waitThresh),util_DRIVE_EXP_inbound_Short_iwait_time,13.4767,13.4767,13.4767,13.4767,13.4767,13.4767,13.4767,13.4767,13.4767,13.4767,0.0,13.4767,13.4767,13.4767,13.4767,13.4767
@df.inbound * coef_long_iwait_multiplier * (odt_skims['WLK_EXP_DRV_IWAIT']/100-waitThresh).clip(0),util_DRIVE_EXP_inbound_Long_iwait_time,3.3733123929977413,3.3733123929977413,3.3733123929977413,3.3733123929977413,3.3733123929977413,3.3733123929977413,3.3733123929977413,3.3733123929977413,3.3733123929977413,3.3733123929977413,0.0,3.3733123929977413,3.3733123929977413,3.3733123929977413,3.3733123929977413,3.3733123929977413
@df.inbound * coef_xwait_multiplier * odt_skims['WLK_EXP_DRV_XWAIT']/100,util_DRIVE_EXP_inbound_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * xfers_drv_multiplier * (odt_skims['WLK_EXP_DRV_BOARDS']-1).clip(0),util_DRIVE_EXP_inbound_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * coef_dtim_multiplier * odt_skims['WLK_EXP_DRV_DTIM']/100,util_DRIVE_EXP_inbound_Drive_time,18.3148353,17.8566275,16.158563299999997,17.2636527,15.673402099999999,14.271825299999998,14.366162199999998,16.670677899999998,17.4388498,17.371466299999998,0.0,14.1235816,14.0561981,19.325587799999997,19.0695305,19.3121111
@df.inbound * coef_wacc_multiplier * df.origin_walk_time # (3),util_DRIVE_EXP_inbound_Walk_access_time,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822
@df.inbound * coef_waux_multiplier * odt_skims['WLK_EXP_DRV_WAUX']/100,util_DRIVE_EXP_inbound_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * ivt_cost_multiplier * df.ivot * (odt_skims['WLK_EXP_DRV_FAR'] + costPerMile * odt_skims['WLK_EXP_DRV_DDIST']/100),util_DRIVE_EXP_inbound_Fare_and_operating_cost,63.651132991413824,63.371230912035934,62.2236337876615,60.46026423130509,58.66890119783606,57.99714181162883,58.528952493271994,62.44755825331367,63.06334002579518,63.67911712802692,0.0,60.90810382210991,60.88011501524704,64.2949035707582,64.21092780967008,64.35088585473368
@df.inbound * dacc_ratio_multiplier * (odt_skims['WLK_EXP_DRV_DDIST']/100) / od_skims['DIST'],util_DRIVE_EXP_inbound_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
auto_ownership == 0 # (6),util_DRIVE_HVY_Unavailable_for_zero_auto_households,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (6),util_DRIVE_HVY_Unavailable_for_persons_less_than_16,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@density_index_multiplier * df.density_index # (10),util_DRIVE_HVY_Destination_zone_densityIndex,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556
@topology_trn_multiplier * df.trip_topology # (9),util_DRIVE_HVY_Topology,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4
outbound & ~drive_heavyrail_available_outbound,util_DRIVE_HVY_outbound_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * odt_skims['DRV_HVY_WLK_TOTIVT']/100,util_DRIVE_HVY_outbound_In_vehicle_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * (ivt_hvy_multiplier - 1) * odt_skims['DRV_HVY_WLK_KEYIVT']/100,util_DRIVE_HVY_outbound_In_vehicle_time_on_HVY,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * coef_short_iwait_multiplier * (odt_skims['DRV_HVY_WLK_IWAIT']/100).clip(upper=waitThresh),util_DRIVE_HVY_outbound_Short_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * coef_long_iwait_multiplier * (odt_skims['DRV_HVY_WLK_IWAIT']/100-waitThresh).clip(0),util_DRIVE_HVY_outbound_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * coef_xwait_multiplier * odt_skims['DRV_HVY_WLK_XWAIT']/100,util_DRIVE_HVY_outbound_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * xfers_drv_multiplier * (odt_skims['DRV_HVY_WLK_BOARDS']-1).clip(0),util_DRIVE_HVY_outbound_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * coef_dtim_multiplier * odt_skims['DRV_HVY_WLK_DTIM']/100,util_DRIVE_HVY_outbound_Drive_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * coef_wegr_multiplier * df.destination_walk_time # (4),util_DRIVE_HVY_outbound_Walk_egress_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * coef_waux_multiplier * odt_skims['DRV_HVY_WLK_WAUX']/100,util_DRIVE_HVY_outbound_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * ivt_cost_multiplier * df.ivot * (odt_skims['DRV_HVY_WLK_FAR'] + costPerMile * odt_skims['DRV_HVY_WLK_DDIST']/100),util_DRIVE_HVY_outbound_Fare_and_operating_cost,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * dacc_ratio_multiplier * (odt_skims['DRV_HVY_WLK_DDIST']/100) / od_skims['DIST'],util_DRIVE_HVY_outbound_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
inbound & ~drive_heavyrail_available_inbound,util_DRIVE_HVY_inbound_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@df.inbound * odt_skims['WLK_HVY_DRV_TOTIVT']/100,util_DRIVE_HVY_inbound_In_vehicle_time,20.44260025024414,20.44260025024414,20.44260025024414,20.44260025024414,20.44260025024414,20.44260025024414,20.44260025024414,20.44260025024414,20.44260025024414,20.44260025024414,0.0,20.44260025024414,20.44260025024414,20.44260025024414,20.44260025024414,20.44260025024414
@df.inbound * (ivt_hvy_multiplier - 1) * odt_skims['WLK_HVY_DRV_KEYIVT']/100,util_DRIVE_HVY_inbound_In_vehicle_time_on_HVY,-4.0885200195312486,-4.0885200195312486,-4.0885200195312486,-4.0885200195312486,-4.0885200195312486,-4.0885200195312486,-4.0885200195312486,-4.0885200195312486,-4.0885200195312486,-4.0885200195312486,-0.0,-4.0885200195312486,-4.0885200195312486,-4.0885200195312486,-4.0885200195312486,-4.0885200195312486
@df.inbound * coef_short_iwait_multiplier * (odt_skims['WLK_HVY_DRV_IWAIT']/100).clip(upper=waitThresh),util_DRIVE_HVY_inbound_Short_iwait_time,2.8249858396053313,2.8249858396053313,2.8249858396053313,2.8249858396053313,2.8249858396053313,2.8249858396053313,2.8249858396053313,2.8249858396053313,2.8249858396053313,2.8249858396053313,0.0,2.8249858396053313,2.8249858396053313,2.8249858396053313,2.8249858396053313,2.8249858396053313
@df.inbound * coef_long_iwait_multiplier * (odt_skims['WLK_HVY_DRV_IWAIT']/100-waitThresh).clip(0),util_DRIVE_HVY_inbound_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * coef_xwait_multiplier * odt_skims['WLK_HVY_DRV_XWAIT']/100,util_DRIVE_HVY_inbound_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * xfers_drv_multiplier * (odt_skims['WLK_HVY_DRV_BOARDS']-1).clip(0),util_DRIVE_HVY_inbound_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * coef_dtim_multiplier * odt_skims['DRV_HVY_WLK_DTIM']/100 # (2),util_DRIVE_HVY_inbound_Drive_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * coef_wacc_multiplier * df.origin_walk_time # (4),util_DRIVE_HVY_inbound_Walk_access_time,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822
@coef_waux_multiplier * odt_skims['WLK_HVY_DRV_WAUX']/100,util_DRIVE_HVY_inbound_Walk_other_time,8.086019515991211,8.086019515991211,8.086019515991211,8.086019515991211,8.086019515991211,8.086019515991211,8.086019515991211,8.086019515991211,8.086019515991211,8.086019515991211,0.0,8.086019515991211,8.086019515991211,8.086019515991211,8.086019515991211,8.086019515991211
@df.inbound * ivt_cost_multiplier * df.ivot * (odt_skims['WLK_HVY_DRV_FAR'] + costPerMile * odt_skims['WLK_HVY_DRV_DDIST']/100),util_DRIVE_HVY_inbound_Fare_and_operating_cost,58.01898924004606,57.739091830917936,56.591499376793266,56.815419172195675,55.024056138726635,54.35229208226964,54.88410276391281,56.815419172195675,57.43120094467718,59.894328034603205,0.0,57.123310058436424,54.71616992273565,58.662764489640196,58.57879339880185,58.71874210336591
@df.inbound * dacc_ratio_multiplier * (odt_skims['WLK_HVY_DRV_DDIST']/100)/ od_skims['DIST'],util_DRIVE_HVY_inbound_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
auto_ownership == 0 # (7),util_DRIVE_COM_Unavailable_for_zero_auto_households,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (7),util_DRIVE_COM_Unavailable_for_persons_less_than_16,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@density_index_multiplier * df.density_index # (11),util_DRIVE_COM_Destination_zone_densityIndex,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556,-284.55553789232556
@topology_trn_multiplier * df.trip_topology # (10),util_DRIVE_COM_Topology,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4,4.4
outbound & ~drive_commuter_available_outbound,util_DRIVE_COM_outbound_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * odt_skims['DRV_COM_WLK_TOTIVT']/100,util_DRIVE_COM_outbound_In_vehicle_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * (ivt_com_multiplier - 1) * odt_skims['DRV_COM_WLK_KEYIVT']/100,util_DRIVE_COM_outbound_In_vehicle_time_on_COM,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * coef_short_iwait_multiplier * (odt_skims['DRV_COM_WLK_IWAIT']/100).clip(upper=waitThresh),util_DRIVE_COM_outbound_Short_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * coef_long_iwait_multiplier * (odt_skims['DRV_COM_WLK_IWAIT']/100-waitThresh).clip(0),util_DRIVE_COM_outbound_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * coef_xwait_multiplier * odt_skims['DRV_COM_WLK_XWAIT']/100,util_DRIVE_COM_outbound_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * xfers_drv_multiplier * (odt_skims['DRV_COM_WLK_BOARDS']-1).clip(0),util_DRIVE_COM_outbound_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * coef_dtim_multiplier * odt_skims['DRV_COM_WLK_DTIM']/100,util_DRIVE_COM_outbound_Drive_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * coef_wegr_multiplier * df.destination_walk_time # (5),util_DRIVE_COM_outbound_Walk_egress_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * coef_waux_multiplier * odt_skims['DRV_COM_WLK_WAUX']/100,util_DRIVE_COM_outbound_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * ivt_cost_multiplier * df.ivot * (odt_skims['DRV_COM_WLK_FAR'] + costPerMile * odt_skims['DRV_COM_WLK_DDIST']/100),util_DRIVE_COM_outbound_Fare_and_operating_cost,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * dacc_ratio_multiplier * (odt_skims['DRV_COM_WLK_DDIST']/100) / od_skims['DIST'],util_DRIVE_COM_outbound_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
inbound & ~drive_commuter_available_inbound,util_DRIVE_COM_inbound_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@df.inbound * odt_skims['WLK_COM_DRV_TOTIVT']/100,util_DRIVE_COM_inbound_In_vehicle_time,28.26580047607422,28.26580047607422,28.26580047607422,28.26580047607422,28.26580047607422,28.26580047607422,28.26580047607422,28.26580047607422,28.26580047607422,28.26580047607422,0.0,28.26580047607422,28.26580047607422,28.26580047607422,28.26580047607422,28.26580047607422
@df.inbound * (ivt_com_multiplier - 1) * odt_skims['WLK_COM_DRV_KEYIVT']/100,util_DRIVE_COM_inbound_In_vehicle_time_on_COM,-4.120839843749999,-4.120839843749999,-4.120839843749999,-4.120839843749999,-4.120839843749999,-4.120839843749999,-4.120839843749999,-4.120839843749999,-4.120839843749999,-4.120839843749999,-0.0,-4.120839843749999,-4.120839843749999,-4.120839843749999,-4.120839843749999,-4.120839843749999
@df.inbound * coef_short_iwait_multiplier * (odt_skims['WLK_COM_DRV_IWAIT']/100).clip(upper=waitThresh),util_DRIVE_COM_inbound_Short_iwait_time,3.5086590172219276,3.5086590172219276,3.5086590172219276,3.5086590172219276,3.5086590172219276,3.5086590172219276,3.5086590172219276,3.5086590172219276,3.5086590172219276,3.5086590172219276,0.0,3.5086590172219276,3.5086590172219276,3.5086590172219276,3.5086590172219276,3.5086590172219276
@df.inbound * coef_long_iwait_multiplier * (odt_skims['WLK_COM_DRV_IWAIT']/100-waitThresh).clip(0),util_DRIVE_COM_inbound_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * coef_xwait_multiplier * odt_skims['WLK_COM_DRV_XWAIT']/100,util_DRIVE_COM_inbound_transfer_wait_time,33.69175,33.69175,33.69175,33.69175,33.69175,33.69175,33.69175,33.69175,33.69175,33.69175,0.0,33.69175,33.69175,33.69175,33.69175,33.69175
@df.inbound * xfers_drv_multiplier * (odt_skims['WLK_COM_DRV_BOARDS']-1).clip(0),util_DRIVE_COM_inbound_number_of_transfers,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,0.0,15.0,15.0,15.0,15.0,15.0
@df.inbound * coef_dtim_multiplier * odt_skims['WLK_COM_DRV_DTIM']/100,util_DRIVE_COM_inbound_Drive_time,24.177199799999997,23.7459454,22.007451099999997,23.085587099999998,21.495336499999997,20.107236399999998,20.215049999999998,22.506088999999996,23.301214299999998,23.193400699999998,0.0,19.9859461,19.891609199999998,25.1609989,24.891464900000003,25.147522199999997
@df.inbound * coef_wacc_multiplier * df.origin_walk_time # (5),util_DRIVE_COM_inbound_Walk_access_time,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822,8.9754822
@df.inbound * coef_waux_multiplier * odt_skims['WLK_COM_DRV_WAUX']/100,util_DRIVE_COM_inbound_Walk_other_time,4.04301,4.04301,4.04301,4.04301,4.04301,4.04301,4.04301,4.04301,4.04301,4.04301,0.0,4.04301,4.04301,4.04301,4.04301,4.04301
@df.inbound * ivt_cost_multiplier * df.ivot * (odt_skims['WLK_COM_DRV_FAR'] + costPerMile * odt_skims['WLK_COM_DRV_DDIST']/100),util_DRIVE_COM_inbound_Fare_and_operating_cost,96.07210963011188,95.79220288048421,94.64461042635955,92.8812455402529,91.0898778365341,90.41811845032687,90.94992913197004,94.86853956226149,95.484321334743,96.1001031072245,0.0,93.32908513105772,93.3010916539451,96.71588487970601,96.63191378886766,96.7718531529322
@df.inbound * dacc_ratio_multiplier * (odt_skims['WLK_COM_DRV_DDIST']/100) / od_skims['DIST'],util_DRIVE_COM_inbound_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@odt_skims['HOV2TOLL_TIME'] # (2),util_Taxi_In_vehicle_time,1.6100000143051147,2.0799999237060547,3.0899999141693115,4.0,5.820000171661377,5.380000114440918,3.5799999237060547,1.4900000095367432,1.059999942779541,1.4800000190734863,0.5299999713897705,1.75,3.109999895095825,3.130000114440918,2.9100000858306885,4.21999979019165
@ridehail_wait_time_multiplier * df.origTaxiWaitTime,util_Taxi_Wait_time,8.25,8.25,8.25,8.25,8.25,8.25,8.25,8.25,8.25,8.25,8.25,8.25,8.25,8.25,8.25,8.25
@ivt_cost_multiplier * df.ivot * odt_skims['HOV2TOLL_VTOLL'],util_Taxi_Tolls,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * odt_skims['HOV2TOLL_BTOLL'],util_Taxi_Bridge_toll,0.10100293532773345,0.13007953640181738,0.18517204658058106,0.24638594069815303,0.3473888669043049,0.31831225670863944,0.22649142465386307,0.09794223423674775,0.06886563316266384,0.10100293532773345,0.03519799185407835,0.12089745137202342,0.19282377650409138,0.2020058706554669,0.17598995242920554,0.2555680166063654
@ivt_cost_multiplier * df.ivot * (Taxi_baseFare + odt_skims['HOV2TOLL_DIST'] * Taxi_costPerMile + odt_skims['HOV2TOLL_TIME'] * Taxi_costPerMinute)*100,util_Taxi_Fare,54.082481099133815,60.08143881861895,72.18648905755299,85.19444087341842,105.5786581463682,99.27363852720792,79.97595486290892,52.1389347661602,46.9051500390261,52.47561599088033,40.462387240754936,55.70464857264453,72.92105367075695,74.00760187393824,69.79914494305862,85.8830910935854
@odt_skims['HOV2TOLL_TIME'] ,util_TNC_Single_In_vehicle_time,1.6100000143051147,2.0799999237060547,3.0899999141693115,4.0,5.820000171661377,5.380000114440918,3.5799999237060547,1.4900000095367432,1.059999942779541,1.4800000190734863,0.5299999713897705,1.75,3.109999895095825,3.130000114440918,2.9100000858306885,4.21999979019165
@ridehail_wait_time_multiplier * df.origSingleTNCWaitTime,util_TNC_Single_Wait_time,4.500000000000001,4.500000000000001,4.500000000000001,4.500000000000001,4.500000000000001,4.500000000000001,4.500000000000001,4.500000000000001,4.500000000000001,4.500000000000001,4.500000000000001,4.500000000000001,4.500000000000001,4.500000000000001,4.500000000000001,4.500000000000001
@ivt_cost_multiplier * df.ivot * odt_skims['HOV2TOLL_VTOLL'] # (2),util_TNC_Single_Tolls,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_BTOLL'] + dot_skims['HOV2TOLL_BTOLL']),util_TNC_Single_Bridge_toll,0.24026455675934477,0.2922963567255412,0.38258686103877865,0.4943022273810081,0.7008991177474181,0.6519280462369521,0.4652256171853426,0.1958844684734955,0.1698685684903973,0.22802177063856513,0.0703959837081567,0.2647501107577409,0.35044955887370904,0.38105651505407656,0.3963600113874235,0.48818084344219986
"@ivt_cost_multiplier * df.ivot * np.maximum(TNC_single_baseFare + odt_skims['HOV2TOLL_DIST'] * TNC_single_costPerMile + odt_skims['HOV2TOLL_TIME'] * TNC_single_costPerMinute, TNC_single_costMinimum) * 100",util_TNC_Single_Cost,110.18501306026214,110.18501306026214,110.18501306026214,110.18501306026214,110.18501306026214,110.18501306026214,110.18501306026214,110.18501306026214,110.18501306026214,110.18501306026214,110.18501306026214,110.18501306026214,110.18501306026214,110.18501306026214,110.18501306026214,110.18501306026214
@odt_skims['HOV2TOLL_TIME'] * TNC_shared_IVTFactor,util_TNC_Shared_In_vehicle_time,2.4149999618530273,3.119999885559082,4.634999752044678,6.0,8.730000495910645,8.069999694824219,5.369999885559082,2.2350001335144043,1.5899999141693115,2.2200000286102295,0.7949999570846558,2.625,4.664999961853027,4.695000171661377,4.365000247955322,6.329999923706055
@ridehail_wait_time_multiplier * df.origSharedTNCWaitTime,util_TNC_Shared_Wait_time,7.499999999999998,7.499999999999998,7.499999999999998,7.499999999999998,7.499999999999998,7.499999999999998,7.499999999999998,7.499999999999998,7.499999999999998,7.499999999999998,7.499999999999998,7.499999999999998,7.499999999999998,7.499999999999998,7.499999999999998,7.499999999999998
@ivt_cost_multiplier * df.ivot * odt_skims['HOV2TOLL_VTOLL'] # (3),util_TNC_Shared_Tolls,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_BTOLL'] + dot_skims['HOV2TOLL_BTOLL']) # (2),util_TNC_Shared_Bridge_toll,0.24026455675934477,0.2922963567255412,0.38258686103877865,0.4943022273810081,0.7008991177474181,0.6519280462369521,0.4652256171853426,0.1958844684734955,0.1698685684903973,0.22802177063856513,0.0703959837081567,0.2647501107577409,0.35044955887370904,0.38105651505407656,0.3963600113874235,0.48818084344219986
"@ivt_cost_multiplier * df.ivot * np.maximum(TNC_shared_baseFare + odt_skims['HOV2TOLL_DIST'] * TNC_shared_costPerMile + odt_skims['HOV2TOLL_TIME']* TNC_shared_costPerMinute, TNC_shared_costMinimum) * 100",util_TNC_Shared_Cost,45.910423324653436,45.910423324653436,46.18282658830142,50.25201886026276,57.09267234428297,55.12158613220549,48.55486468890592,45.910423324653436,45.910423324653436,45.910423324653436,45.910423324653436,45.910423324653436,46.37564587698737,46.64958156634065,45.910423324653436,50.66980189111969
tour_mode_is_auto,util_tour_mode_is_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
tour_mode_is_walk,util_tour_mode_is_walk,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
tour_mode_is_bike,util_tour_mode_is_bike,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
tour_mode_is_walk_transit,util_tour_mode_is_walk_transit,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
tour_mode_is_drive_transit,util_tour_mode_is_drive_transit,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
tour_mode_is_ride_hail,util_tour_mode_is_ride_hail,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.i_tour_mode.isin(I_SOV_MODES)),util_Drive_Alone_tour_mode_ASC_shared_ride_2_df_is_indiv,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.i_tour_mode.isin(I_SOV_MODES)) # (2),util_Drive_Alone_tour_mode_ASC_shared_ride_3_plus,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.i_tour_mode.isin(I_SOV_MODES)) # (3),util_Drive_Alone_tour_mode_ASC_walk,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.i_tour_mode.isin(I_SOV_MODES)) # (4),util_Drive_Alone_tour_mode_ASC_ride_hail,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.i_tour_mode.isin(I_SR2_MODES)),util_Shared_Ride_2_tour_mode_ASC_shared_ride_2,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.i_tour_mode.isin(I_SR2_MODES)) # (2),util_Shared_Ride_2_tour_mode_ASC_shared_ride_3_plus,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.i_tour_mode.isin(I_SR2_MODES)) # (3),util_Shared_Ride_2_tour_mode_ASC_walk,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.i_tour_mode.isin(I_SR2_MODES)) # (4),util_Shared_Ride_2_tour_mode_ASC_ride_hail,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.i_tour_mode.isin(I_SR3P_MODES)),util_Shared_Ride_3_tour_mode_ASC_shared_ride_2,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.i_tour_mode.isin(I_SR3P_MODES)) # (2),util_Shared_Ride_3_tour_mode_ASC_shared_ride_3_plus,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.i_tour_mode.isin(I_SR3P_MODES)) # (3),util_Shared_Ride_3_tour_mode_ASC_walk,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.i_tour_mode.isin(I_SR3P_MODES)) # (4),util_Shared_Ride_3_tour_mode_ASC_ride_hail,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.is_indiv & (df.i_tour_mode == I_WALK_MODE),util_Walk_tour_mode_ASC_ride_hail,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@df.is_indiv & (df.i_tour_mode == I_BIKE_MODE),util_Bike_tour_mode_ASC_walk,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.is_indiv & (df.i_tour_mode == I_BIKE_MODE) # (2),util_Bike_tour_mode_ASC_ride_hail,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.tour_mode_is_walk_transit & ~df.walk_ferry_available),util_Walk_to_Transit_tour_mode_ASC_light_rail,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.tour_mode_is_walk_transit & df.walk_ferry_available),util_Walk_to_Transit_tour_mode_ASC_ferry,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.tour_mode_is_walk_transit),util_Walk_to_Transit_tour_mode_ASC_express_bus,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.tour_mode_is_walk_transit) # (2),util_Walk_to_Transit_tour_mode_ASC_heavy_rail,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.tour_mode_is_walk_transit) # (3),util_Walk_to_Transit_tour_mode_ASC_commuter_rail,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.tour_mode_is_walk_transit) # (4),util_Walk_to_Transit_tour_mode_ASC_shared_ride_2,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.tour_mode_is_walk_transit) # (5),util_Walk_to_Transit_tour_mode_ASC_shared_ride_3_plus,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.tour_mode_is_walk_transit) # (6),util_Walk_to_Transit_tour_mode_ASC_walk,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.tour_mode_is_walk_transit) # (7),util_Walk_to_Transit_tour_mode_ASC_ride_hail,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.tour_mode_is_drive_transit & ~df.drive_ferry_available),util_Drive_to_Transit_tour_mode_ASC_light_rail_skims_differ,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.tour_mode_is_drive_transit & df.drive_ferry_available),util_Drive_to_Transit_tour_mode_ASC_ferry,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.tour_mode_is_drive_transit),util_Drive_to_Transit_tour_mode_ASC_express_bus,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.tour_mode_is_drive_transit) # (2),util_Drive_to_Transit_tour_mode_ASC_heavy_rail,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.tour_mode_is_drive_transit) # (3),util_Drive_to_Transit_tour_mode_ASC_commuter_rail,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.tour_mode_is_drive_transit) # (4),util_Drive_to_Transit_tour_mode_ASC_ride_hail,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.tour_mode_is_ride_hail),util_Ride_Hail_tour_mode_ASC_shared_ride_2,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.tour_mode_is_ride_hail) # (2),util_Ride_Hail_tour_mode_ASC_shared_ride_3_plus,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.tour_mode_is_ride_hail) # (3),util_Ride_Hail_tour_mode_ASC_walk,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.i_tour_mode.isin(I_RIDE_HAIL_MODES)),util_Ride_Hail_tour_mode_ASC_ride_hail_taxi,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.i_tour_mode.isin(I_RIDE_HAIL_MODES)) # (2),util_Ride_Hail_tour_mode_ASC_ride_hail_single,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.tour_mode_is_walk & (od_skims['DISTWALK'] > 3),util_Walk_not_available_for_long_distances,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.tour_mode_is_walk & (od_skims['DISTBIKE'] > 8),util_Bike_not_available_for_long_distances,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@origin_density_applied*(origin_density_index_multiplier*df.origin_density_index).clip(origin_density_index_max),util_origin_density_index,-15.0,-15.0,-15.0,-15.0,-15.0,-15.0,-15.0,-15.0,-15.0,-15.0,-15.0,-15.0,-15.0,-15.0,-15.0,-15.0
@walk_express_penalty * ~(df.first_trip | df.first_trip),util_walk_express_penalty,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@adjust_tnc_shared,util_adjust_tnc_shared,30.0,30.0,30.0,30.0,30.0,30.0,30.0,30.0,30.0,30.0,30.0,30.0,30.0,30.0,30.0,30.0
