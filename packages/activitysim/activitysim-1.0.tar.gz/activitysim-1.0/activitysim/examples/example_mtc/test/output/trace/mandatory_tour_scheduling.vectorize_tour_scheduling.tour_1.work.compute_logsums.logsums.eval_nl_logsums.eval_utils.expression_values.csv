Expression,Label,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14
sov_available == False,util_DRIVEALONEFREE_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
auto_ownership == 0,util_DRIVEALONEFREE_Unavailable_for_zero_auto_households,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16,util_DRIVEALONEFREE_Unavailable_for_persons_less_than_16,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
is_joint == True,util_DRIVEALONEFREE_Unavailable_for_joint_tours,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
is_atwork_subtour & ~work_tour_is_SOV,util_DRIVEALONEFREE_Unavailable_if_didn't_drive_to_work,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@odt_skims['SOV_TIME'] + dot_skims['SOV_TIME'],util_DRIVEALONEFREE_In_vehicle_time,9.799999237060547,9.829999923706055,9.84000015258789,9.829999923706055,9.799999237060547,9.889999389648438,9.899999618530273,9.889999389648438,9.859999656677246,9.90999984741211,9.899999618530273,9.869999885559082,9.869999885559082,9.84000015258789,9.809999465942383
@2 * walktimeshort_multiplier * df.terminal_time,util_DRIVEALONEFREE_Terminal_time,18.95208,18.95208,18.95208,18.95208,18.95208,18.95208,18.95208,18.95208,18.95208,18.95208,18.95208,18.95208,18.95208,18.95208,18.95208
@ivt_cost_multiplier * df.ivot * costPerMile * (odt_skims['SOV_DIST'] + dot_skims['SOV_DIST']),util_DRIVEALONEFREE_Operating_cost,6.032600302876988,5.996149579891928,5.996149579891928,5.996149579891928,6.032600302876988,5.996149579891928,5.996149579891928,5.996149579891928,6.032600302876988,5.996149579891928,5.996149579891928,6.032600302876988,5.996149579891928,6.032600302876988,6.032600302876988
@ivt_cost_multiplier * df.ivot * df.daily_parking_cost,util_DRIVEALONEFREE_Parking_cost,18.057135408924346,45.14283852231086,90.28567704462172,126.39994786247041,180.57135408924344,18.057135408924346,63.199973931235206,99.31424474908391,153.48565097585694,27.085703113386522,63.199973931235206,117.37138015800826,18.057135408924346,72.22854163569738,36.11427081784869
@ivt_cost_multiplier * df.ivot * (odt_skims['SOV_BTOLL'] + dot_skims['SOV_BTOLL']),util_DRIVEALONEFREE_Bridge_toll,0.41652313047062683,0.42449490526527006,0.42449490526527006,0.42449490526527006,0.41652313047062683,0.42449490526527006,0.42449490526527006,0.42449490526527006,0.41652313047062683,0.42449490526527006,0.42449490526527006,0.41652313047062683,0.42449490526527006,0.41652313047062683,0.41652313047062683
sovtoll_available == False,util_DRIVEALONEPAY_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
auto_ownership == 0 # (2),util_DRIVEALONEPAY_Unavailable_for_zero_auto_households,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (2),util_DRIVEALONEPAY_Unavailable_for_persons_less_than_16,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
is_joint == True # (2),util_DRIVEALONEPAY_Unavailable_for_joint_tours,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
is_atwork_subtour & ~work_tour_is_SOV # (2),util_DRIVEALONEPAY_Unavailable_if_didn't_drive_to_work,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@odt_skims['SOVTOLL_TIME'] + dot_skims['SOVTOLL_TIME'],util_DRIVEALONEPAY_In_vehicle_time,9.799999237060547,9.829999923706055,9.84000015258789,9.829999923706055,9.799999237060547,9.889999389648438,9.899999618530273,9.889999389648438,9.859999656677246,9.90999984741211,9.899999618530273,9.869999885559082,9.869999885559082,9.84000015258789,9.809999465942383
@2 * walktimeshort_multiplier * df.terminal_time # (2),util_DRIVEALONEPAY_Terminal_time,18.95208,18.95208,18.95208,18.95208,18.95208,18.95208,18.95208,18.95208,18.95208,18.95208,18.95208,18.95208,18.95208,18.95208,18.95208
@ivt_cost_multiplier * df.ivot * costPerMile * (odt_skims['SOVTOLL_DIST'] + dot_skims['SOVTOLL_DIST']),util_DRIVEALONEPAY_Operating_cost,6.032600302876988,5.996149579891928,5.996149579891928,5.996149579891928,6.032600302876988,5.996149579891928,5.996149579891928,5.996149579891928,6.032600302876988,5.996149579891928,5.996149579891928,6.032600302876988,5.996149579891928,6.032600302876988,6.032600302876988
@ivt_cost_multiplier * df.ivot * df.daily_parking_cost # (2),util_DRIVEALONEPAY_Parking_cost,18.057135408924346,45.14283852231086,90.28567704462172,126.39994786247041,180.57135408924344,18.057135408924346,63.199973931235206,99.31424474908391,153.48565097585694,27.085703113386522,63.199973931235206,117.37138015800826,18.057135408924346,72.22854163569738,36.11427081784869
@ivt_cost_multiplier * df.ivot * (odt_skims['SOVTOLL_BTOLL'] + dot_skims['SOVTOLL_BTOLL']),util_DRIVEALONEPAY_Bridge_toll,0.41652313047062683,0.42449490526527006,0.42449490526527006,0.42449490526527006,0.41652313047062683,0.42449490526527006,0.42449490526527006,0.42449490526527006,0.41652313047062683,0.42449490526527006,0.42449490526527006,0.41652313047062683,0.42449490526527006,0.41652313047062683,0.41652313047062683
@ivt_cost_multiplier * df.ivot * (odt_skims['SOVTOLL_VTOLL'] + dot_skims['SOVTOLL_VTOLL']),util_DRIVEALONEPAY_Value_toll,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
hov2_available == False,util_SHARED2FREE_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
is_joint & (number_of_participants > 2),util_SHARED2FREE_Unavailable_based_on_party_size,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(odt_skims['HOV2_TIME'] + dot_skims['HOV2_TIME']),util_SHARED2FREE_In_vehicle_time,9.799999237060547,9.829999923706055,9.84000015258789,9.829999923706055,9.799999237060547,9.889999389648438,9.899999618530273,9.889999389648438,9.859999656677246,9.90999984741211,9.899999618530273,9.869999885559082,9.869999885559082,9.84000015258789,9.809999465942383
@2 * walktimeshort_multiplier * df.terminal_time # (3),util_SHARED2FREE_Terminal_time,18.95208,18.95208,18.95208,18.95208,18.95208,18.95208,18.95208,18.95208,18.95208,18.95208,18.95208,18.95208,18.95208,18.95208,18.95208
@ivt_cost_multiplier * df.ivot * costPerMile * (odt_skims['HOV2_DIST'] + dot_skims['HOV2_DIST']),util_SHARED2FREE_Operating_cost,6.032600302876988,5.996149579891928,5.996149579891928,5.996149579891928,6.032600302876988,5.996149579891928,5.996149579891928,5.996149579891928,6.032600302876988,5.996149579891928,5.996149579891928,6.032600302876988,5.996149579891928,6.032600302876988,6.032600302876988
@ivt_cost_multiplier * df.ivot * df.daily_parking_cost / costShareSr2,util_SHARED2FREE_Parking_cost,10.318363090813913,25.795907727034777,51.591815454069554,72.22854163569738,103.18363090813911,10.318363090813913,36.11427081784869,56.75099699947652,87.70608627191825,15.47754463622087,36.11427081784869,67.06936009029043,10.318363090813913,41.27345236325565,20.636726181627825
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2_BTOLL'] + dot_skims['HOV2_BTOLL']) / costShareSr2,util_SHARED2FREE_Bridge_toll,0.23801321741178677,0.24256851729444004,0.24256851729444004,0.24256851729444004,0.23801321741178677,0.24256851729444004,0.24256851729444004,0.24256851729444004,0.23801321741178677,0.24256851729444004,0.24256851729444004,0.23801321741178677,0.24256851729444004,0.23801321741178677,0.23801321741178677
@(df.hhsize == 1),util_SHARED2FREE_One_person_household,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
hov2toll_available == False,util_SHARED2PAY_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
is_joint & (number_of_participants > 2) # (2),util_SHARED2PAY_Unavailable_based_on_party_size,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(odt_skims['HOV2TOLL_TIME'] + dot_skims['HOV2TOLL_TIME']),util_SHARED2PAY_In_vehicle_time,9.799999237060547,9.829999923706055,9.84000015258789,9.829999923706055,9.799999237060547,9.889999389648438,9.899999618530273,9.889999389648438,9.859999656677246,9.90999984741211,9.899999618530273,9.869999885559082,9.869999885559082,9.84000015258789,9.809999465942383
@2 * walktimeshort_multiplier * df.terminal_time # (4),util_SHARED2PAY_Terminal_time,18.95208,18.95208,18.95208,18.95208,18.95208,18.95208,18.95208,18.95208,18.95208,18.95208,18.95208,18.95208,18.95208,18.95208,18.95208
@ivt_cost_multiplier * df.ivot * costPerMile * (odt_skims['HOV2TOLL_DIST'] + dot_skims['HOV2TOLL_DIST']),util_SHARED2PAY_Operating_cost,6.032600302876988,5.996149579891928,5.996149579891928,5.996149579891928,6.032600302876988,5.996149579891928,5.996149579891928,5.996149579891928,6.032600302876988,5.996149579891928,5.996149579891928,6.032600302876988,5.996149579891928,6.032600302876988,6.032600302876988
@ivt_cost_multiplier * df.ivot * df.daily_parking_cost / costShareSr2 # (2),util_SHARED2PAY_Parking_cost,10.318363090813913,25.795907727034777,51.591815454069554,72.22854163569738,103.18363090813911,10.318363090813913,36.11427081784869,56.75099699947652,87.70608627191825,15.47754463622087,36.11427081784869,67.06936009029043,10.318363090813913,41.27345236325565,20.636726181627825
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_BTOLL'] + dot_skims['HOV2TOLL_BTOLL']) / costShareSr2,util_SHARED2PAY_Bridge_toll,0.23801321741178677,0.24256851729444004,0.24256851729444004,0.24256851729444004,0.23801321741178677,0.24256851729444004,0.24256851729444004,0.24256851729444004,0.23801321741178677,0.24256851729444004,0.24256851729444004,0.23801321741178677,0.24256851729444004,0.23801321741178677,0.23801321741178677
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_VTOLL'] + dot_skims['HOV2TOLL_VTOLL']) / costShareSr2,util_SHARED2PAY_Value_toll,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.hhsize == 1) # (2),util_SHARED2PAY_One_person_household,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
hov3_available == False,util_SHARED3FREE_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(odt_skims['HOV3_TIME'] + dot_skims['HOV3_TIME']),util_SHARED3FREE_In_vehicle_time,9.799999237060547,9.829999923706055,9.84000015258789,9.829999923706055,9.799999237060547,9.889999389648438,9.899999618530273,9.889999389648438,9.859999656677246,9.90999984741211,9.899999618530273,9.869999885559082,9.869999885559082,9.84000015258789,9.809999465942383
@2 * walktimeshort_multiplier * df.terminal_time # (5),util_SHARED3FREE_Terminal_time,18.95208,18.95208,18.95208,18.95208,18.95208,18.95208,18.95208,18.95208,18.95208,18.95208,18.95208,18.95208,18.95208,18.95208,18.95208
@ivt_cost_multiplier * df.ivot * costPerMile * (odt_skims['HOV3_DIST'] + dot_skims['HOV3_DIST']),util_SHARED3FREE_Operating_cost,6.032600302876988,5.996149579891928,5.996149579891928,5.996149579891928,6.032600302876988,5.996149579891928,5.996149579891928,5.996149579891928,6.032600302876988,5.996149579891928,5.996149579891928,6.032600302876988,5.996149579891928,6.032600302876988,6.032600302876988
@ivt_cost_multiplier * df.ivot *  df.daily_parking_cost / costShareSr3,util_SHARED3FREE_Parking_cost,7.222854163569738,18.057135408924346,36.11427081784869,50.55997914498816,72.22854163569738,7.222854163569738,25.27998957249408,39.725697899633566,61.39426039034278,10.834281245354608,25.27998957249408,46.94855206320331,7.222854163569738,28.891416654278952,14.445708327139476
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV3_BTOLL'] + dot_skims['HOV3_BTOLL']) / costShareSr3,util_SHARED3FREE_Bridge_toll,0.16660925218825073,0.16979796210610804,0.16979796210610804,0.16979796210610804,0.16660925218825073,0.16979796210610804,0.16979796210610804,0.16979796210610804,0.16660925218825073,0.16979796210610804,0.16979796210610804,0.16660925218825073,0.16979796210610804,0.16660925218825073,0.16660925218825073
@(df.hhsize == 1) # (3),util_SHARED3FREE_One_person_household,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
hov3toll_available == False,util_SHARED3PAY_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(odt_skims['HOV3TOLL_TIME'] + dot_skims['HOV3TOLL_TIME']),util_SHARED3PAY_In_vehicle_time,9.799999237060547,9.829999923706055,9.84000015258789,9.829999923706055,9.799999237060547,9.889999389648438,9.899999618530273,9.889999389648438,9.859999656677246,9.90999984741211,9.899999618530273,9.869999885559082,9.869999885559082,9.84000015258789,9.809999465942383
@2 * walktimeshort_multiplier * df.terminal_time # (6),util_SHARED3PAY_Terminal_time,18.95208,18.95208,18.95208,18.95208,18.95208,18.95208,18.95208,18.95208,18.95208,18.95208,18.95208,18.95208,18.95208,18.95208,18.95208
@ivt_cost_multiplier * df.ivot * costPerMile * (odt_skims['HOV3TOLL_DIST'] + dot_skims['HOV3TOLL_DIST']),util_SHARED3PAY_Operating_cost,6.032600302876988,5.996149579891928,5.996149579891928,5.996149579891928,6.032600302876988,5.996149579891928,5.996149579891928,5.996149579891928,6.032600302876988,5.996149579891928,5.996149579891928,6.032600302876988,5.996149579891928,6.032600302876988,6.032600302876988
@ivt_cost_multiplier * df.ivot * df.daily_parking_cost / costShareSr3,util_SHARED3PAY_Parking_cost,7.222854163569738,18.057135408924346,36.11427081784869,50.55997914498816,72.22854163569738,7.222854163569738,25.27998957249408,39.725697899633566,61.39426039034278,10.834281245354608,25.27998957249408,46.94855206320331,7.222854163569738,28.891416654278952,14.445708327139476
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV3TOLL_BTOLL'] + dot_skims['HOV3TOLL_BTOLL']) / costShareSr3,util_SHARED3PAY_Bridge_toll,0.16660925218825073,0.16979796210610804,0.16979796210610804,0.16979796210610804,0.16660925218825073,0.16979796210610804,0.16979796210610804,0.16979796210610804,0.16660925218825073,0.16979796210610804,0.16979796210610804,0.16660925218825073,0.16979796210610804,0.16660925218825073,0.16660925218825073
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV3TOLL_VTOLL'] + dot_skims['HOV3TOLL_VTOLL']) / costShareSr3,util_SHARED3PAY_Value_toll,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.hhsize == 1) # (4),util_SHARED3PAY_One_person_household,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@walktimeshort_multiplier * (od_skims['DISTWALK'].clip(upper=walkThresh) + od_skims.reverse('DISTWALK').clip(upper=walkThresh))*60/walkSpeed,util_WALK_Time_up_to_2_miles,120.0,120.0,120.0,120.0,120.0,120.0,120.0,120.0,120.0,120.0,120.0,120.0,120.0,120.0,120.0
@walktimelong_multiplier * ((od_skims['DISTWALK'] - walkThresh).clip(lower=0) + (od_skims.reverse('DISTWALK') - walkThresh).clip(lower=0))*60/walkSpeed,util_WALK_Time_beyond_2_of_a_miles,42.00000762939453,42.00000762939453,42.00000762939453,42.00000762939453,42.00000762939453,42.00000762939453,42.00000762939453,42.00000762939453,42.00000762939453,42.00000762939453,42.00000762939453,42.00000762939453,42.00000762939453,42.00000762939453,42.00000762939453
@density_index_multiplier * df.density_index,util_WALK_Destination_zone_densityIndex,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024
@coef_topology_walk_multiplier * df.dest_topology,util_WALK_Topology,45.0,45.0,45.0,45.0,45.0,45.0,45.0,45.0,45.0,45.0,45.0,45.0,45.0,45.0,45.0
is_atwork_subtour & ~work_tour_is_bike,util_BIKE_Unavailable_if_didn't_bike_to_work,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@biketimeshort_multiplier * (od_skims['DISTBIKE'].clip(upper=bikeThresh) + od_skims.reverse('DISTBIKE').clip(upper=bikeThresh))*60/bikeSpeed,util_BIKE_Time_up_to_6_miles,64.20000457763672,64.20000457763672,64.20000457763672,64.20000457763672,64.20000457763672,64.20000457763672,64.20000457763672,64.20000457763672,64.20000457763672,64.20000457763672,64.20000457763672,64.20000457763672,64.20000457763672,64.20000457763672,64.20000457763672
@biketimelong_multiplier * ((od_skims['DISTBIKE']-bikeThresh).clip(lower=0) + (od_skims.reverse('DISTBIKE')-bikeThresh).clip(lower=0))*60/bikeSpeed,util_BIKE_Time_beyond_6_of_a_miles,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@density_index_multiplier * df.density_index # (2),util_BIKE_Destination_zone_densityIndex,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024,-11.382221515693024
@coef_topology_bike_multiplier * df.dest_topology,util_BIKE_Topology,60.0,60.0,60.0,60.0,60.0,60.0,60.0,60.0,60.0,60.0,60.0,60.0,60.0,60.0,60.0
walk_local_available == False,util_WALK_LOC_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(odt_skims['WLK_LOC_WLK_TOTIVT']/100 + dot_skims['WLK_LOC_WLK_TOTIVT']/100),util_WALK_LOC_In_vehicle_time,16.433700561523438,18.64820098876953,19.606300354003906,19.516300201416016,16.44369888305664,18.56909942626953,19.527198791503906,19.43720054626465,16.364601135253906,19.607200622558594,19.517200469970703,16.444599151611328,19.467201232910156,16.39459991455078,17.38249969482422
@short_i_wait_multiplier * ((odt_skims['WLK_LOC_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_LOC_WLK_IWAIT']/100).clip(upper=waitThresh)),util_WALK_LOC_Short_iwait_time,20.908401489257812,16.7283992767334,14.24839973449707,13.868399620056152,16.24839973449707,10.348400115966797,7.8684000968933105,7.488400459289551,9.868400573730469,8.488399505615234,8.108400344848633,10.488399505615234,7.7484002113342285,10.128399848937988,18.248401641845703
@long_i_wait_multiplier * ((odt_skims['WLK_LOC_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_LOC_WLK_IWAIT']/100-waitThresh).clip(0)),util_WALK_LOC_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xwait_multiplier * (odt_skims['WLK_LOC_WLK_XWAIT']/100 + dot_skims['WLK_LOC_WLK_XWAIT']/100),util_WALK_LOC_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xfers_wlk_multiplier * ((odt_skims['WLK_LOC_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_LOC_WLK_BOARDS']-1).clip(0)),util_WALK_LOC_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@2 * wacc_multiplier * df.origin_walk_time,util_WALK_LOC_Walk_access_time,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64
@2 * wegr_multiplier * df.destination_walk_time,util_WALK_LOC_Walk_egress_time,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64
@waux_multiplier * (odt_skims['WLK_LOC_WLK_WAUX']/100 + dot_skims['WLK_LOC_WLK_WAUX']/100),util_WALK_LOC_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['WLK_LOC_WLK_FAR'] + dot_skims['WLK_LOC_WLK_FAR']),util_WALK_LOC_Fare,30.29259255099012,30.29259255099012,30.29259255099012,30.29259255099012,30.29259255099012,30.29259255099012,30.29259255099012,30.29259255099012,30.29259255099012,30.29259255099012,30.29259255099012,30.29259255099012,30.29259255099012,30.29259255099012,30.29259255099012
@density_index_multiplier * df.dest_density_index,util_WALK_LOC_Destination_zone_densityIndex,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745
@coef_topology_trn_multiplier * df.dest_topology,util_WALK_LOC_Topology,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005
walk_lrf_available == False,util_WALK_LRF_Unavailable,0.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0,0.0,1.0,1.0,0.0,1.0,0.0,0.0
@(odt_skims['WLK_LRF_WLK_TOTIVT']/100 + dot_skims['WLK_LRF_WLK_TOTIVT']/100),util_WALK_LRF_In_vehicle_time,16.15869903564453,16.573699951171875,16.83370018005371,16.53369903564453,16.15869903564453,16.544599533081055,16.80459976196289,16.504600524902344,16.129600524902344,16.884599685668945,16.5846004486084,16.2096004486084,16.53459930419922,16.15959930419922,13.336600303649902
@(ivt_lrt_multiplier-1)*(odt_skims['WLK_LRF_WLK_KEYIVT']/100 + dot_skims['WLK_LRF_WLK_KEYIVT']/100),util_WALK_LRF_In_vehicle_time_on_Light_Rail,-1.6158698797225952,-0.9490399360656738,-0.9490399360656738,-0.9490399360656738,-1.6158698797225952,-0.0,-0.0,-0.0,-0.6668300032615662,-0.0,-0.0,-0.6668300032615662,-0.0,-0.6668300032615662,-1.3336600065231323
@(ivt_ferry_multiplier-ivt_lrt_multiplier)*(odt_skims['WLK_LRF_WLK_FERRYIVT']/100 + dot_skims['WLK_LRF_WLK_FERRYIVT']/100),util_WALK_LRF_In_vehicle_time_on_Ferry,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@short_i_wait_multiplier * ((odt_skims['WLK_LRF_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_LRF_WLK_IWAIT']/100).clip(upper=waitThresh)),util_WALK_LRF_Short_iwait_time,19.08919906616211,13.148799896240234,13.688798904418945,13.408799171447754,14.529199600219727,5.8084001541137695,6.348400115966797,6.0684003829956055,7.188799858093262,6.968400001525879,6.6884002685546875,7.808799743652344,6.328400135040283,7.448800086975098,7.209199905395508
@long_i_wait_multiplier * ((odt_skims['WLK_LRF_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_LRF_WLK_IWAIT']/100-waitThresh).clip(0)),util_WALK_LRF_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xwait_multiplier * (odt_skims['WLK_LRF_WLK_XWAIT']/100 + dot_skims['WLK_LRF_WLK_XWAIT']/100),util_WALK_LRF_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xfers_wlk_multiplier * ((odt_skims['WLK_LRF_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_LRF_WLK_BOARDS']-1).clip(0)),util_WALK_LRF_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@2 * wacc_multiplier * df.origin_walk_time # (2),util_WALK_LRF_Walk_access_time,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64
@2 * wegr_multiplier * df.destination_walk_time # (2),util_WALK_LRF_Walk_egress_time,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64
@waux_multiplier * (odt_skims['WLK_LRF_WLK_WAUX']/100 + dot_skims['WLK_LRF_WLK_WAUX']/100),util_WALK_LRF_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['WLK_LRF_WLK_FAR'] + dot_skims['WLK_LRF_WLK_FAR']),util_WALK_LRF_Fare,15.14629627549506,30.29259255099012,30.29259255099012,30.29259255099012,15.14629627549506,30.29259255099012,30.29259255099012,30.29259255099012,15.14629627549506,30.29259255099012,30.29259255099012,15.14629627549506,30.29259255099012,15.14629627549506,0.0
@density_index_multiplier * df.dest_density_index # (2),util_WALK_LRF_Destination_zone_densityIndex,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745
@coef_topology_trn_multiplier * df.dest_topology # (2),util_WALK_LRF_Topology,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005
walk_express_available == False,util_WALK_EXP_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(odt_skims['WLK_EXP_WLK_TOTIVT']/100 + dot_skims['WLK_EXP_WLK_TOTIVT']/100),util_WALK_EXP_In_vehicle_time,15.557100296020508,15.747100830078125,16.00710105895996,15.707099914550781,15.567100524902344,16.544599533081055,16.80459976196289,16.504600524902344,16.364601135253906,16.884599685668945,16.5846004486084,16.444599151611328,16.53459930419922,16.39459991455078,13.796600341796875
@(ivt_exp_multiplier - 1)*(odt_skims['WLK_EXP_WLK_KEYIVT']/100 + dot_skims['WLK_EXP_WLK_KEYIVT']/100),util_WALK_EXP_In_vehicle_time_on_Express_bus,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@short_i_wait_multiplier * ((odt_skims['WLK_EXP_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_EXP_WLK_IWAIT']/100).clip(upper=waitThresh)),util_WALK_EXP_Short_iwait_time,20.908401489257812,12.188400268554688,12.728399276733398,12.448399543762207,16.24839973449707,5.8084001541137695,6.348400115966797,6.0684003829956055,9.868400573730469,6.968400001525879,6.6884002685546875,10.488399505615234,6.328400135040283,10.128399848937988,14.668399810791016
@long_i_wait_multiplier * ((odt_skims['WLK_EXP_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_EXP_WLK_IWAIT']/100-waitThresh).clip(0)),util_WALK_EXP_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xwait_multiplier * (odt_skims['WLK_EXP_WLK_XWAIT']/100 + dot_skims['WLK_EXP_WLK_XWAIT']/100),util_WALK_EXP_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xfers_wlk_multiplier * ((odt_skims['WLK_EXP_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_EXP_WLK_BOARDS']-1).clip(0)),util_WALK_EXP_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@2 * wacc_multiplier * df.origin_walk_time # (3),util_WALK_EXP_Walk_access_time,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64
@2 * wegr_multiplier * df.destination_walk_time # (3),util_WALK_EXP_Walk_egress_time,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64
@waux_multiplier * (odt_skims['WLK_EXP_WLK_WAUX']/100 + dot_skims['WLK_EXP_WLK_WAUX']/100),util_WALK_EXP_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['WLK_EXP_WLK_FAR'] + dot_skims['WLK_EXP_WLK_FAR']),util_WALK_EXP_Fare,30.29259255099012,30.29259255099012,30.29259255099012,30.29259255099012,30.29259255099012,30.29259255099012,30.29259255099012,30.29259255099012,30.29259255099012,30.29259255099012,30.29259255099012,30.29259255099012,30.29259255099012,30.29259255099012,30.29259255099012
@density_index_multiplier * df.dest_density_index # (3),util_WALK_EXP_Destination_zone_densityIndex,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745
@coef_topology_trn_multiplier * df.dest_topology # (3),util_WALK_EXP_Topology,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005
walk_heavyrail_available == False,util_WALK_HVY_Unavailable,0.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(odt_skims['WLK_HVY_WLK_TOTIVT']/100 + dot_skims['WLK_HVY_WLK_TOTIVT']/100),util_WALK_HVY_In_vehicle_time,9.4350004196167,11.800800323486328,12.060800552368164,11.7608003616333,11.620800018310547,16.544599533081055,16.80459976196289,16.504600524902344,16.364601135253906,16.884599685668945,16.5846004486084,16.444599151611328,16.53459930419922,16.39459991455078,13.796600341796875
@(ivt_hvy_multiplier-1) * (odt_skims['WLK_HVY_WLK_KEYIVT']/100 + dot_skims['WLK_HVY_WLK_KEYIVT']/100),util_WALK_HVY_In_vehicle_time_on_heavy_rail,-1.8870000839233398,-0.9435000419616699,-0.9435000419616699,-0.9435000419616699,-0.9435000419616699,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@short_i_wait_multiplier * ((odt_skims['WLK_HVY_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_HVY_WLK_IWAIT']/100).clip(upper=waitThresh)),util_WALK_HVY_Short_iwait_time,11.524799346923828,6.766600131988525,7.306600093841553,7.026599884033203,10.826600074768066,5.8084001541137695,6.348400115966797,6.0684003829956055,9.868400573730469,6.968400001525879,6.6884002685546875,10.488399505615234,6.328400135040283,10.128399848937988,14.668399810791016
@long_i_wait_multiplier * ((odt_skims['WLK_HVY_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_HVY_WLK_IWAIT']/100-waitThresh).clip(0)),util_WALK_HVY_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xwait_multiplier * (odt_skims['WLK_HVY_WLK_XWAIT']/100 + dot_skims['WLK_HVY_WLK_XWAIT']/100),util_WALK_HVY_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xfers_wlk_multiplier * ((odt_skims['WLK_HVY_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_HVY_WLK_BOARDS']-1).clip(0)),util_WALK_HVY_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@2 * wacc_multiplier * df.origin_walk_time # (4),util_WALK_HVY_Walk_access_time,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64
@wegr_multiplier * 2 *df.destination_walk_time,util_WALK_HVY_Walk_egress_time,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64
@waux_multiplier * (odt_skims['WLK_HVY_WLK_WAUX']/100 + dot_skims['WLK_HVY_WLK_WAUX']/100),util_WALK_HVY_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['WLK_HVY_WLK_FAR'] + dot_skims['WLK_HVY_WLK_FAR']),util_WALK_HVY_Fare,25.708844993932402,28.000718772461262,28.000718772461262,28.000718772461262,28.000718772461262,30.29259255099012,30.29259255099012,30.29259255099012,30.29259255099012,30.29259255099012,30.29259255099012,30.29259255099012,30.29259255099012,30.29259255099012,30.29259255099012
@density_index_multiplier * df.dest_density_index # (4),util_WALK_HVY_Destination_zone_densityIndex,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745
@coef_topology_trn_multiplier * df.dest_topology # (4),util_WALK_HVY_Topology,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005
walk_commuter_available == False,util_WALK_COM_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(odt_skims['WLK_COM_WLK_TOTIVT']/100 + dot_skims['WLK_COM_WLK_TOTIVT']/100),util_WALK_COM_In_vehicle_time,9.4350004196167,11.800800323486328,12.060800552368164,11.7608003616333,11.620800018310547,16.544599533081055,16.80459976196289,16.504600524902344,16.364601135253906,16.884599685668945,16.5846004486084,16.444599151611328,16.53459930419922,16.39459991455078,13.796600341796875
@(ivt_com_multiplier - 1) * (odt_skims['WLK_COM_WLK_KEYIVT']/100 + dot_skims['WLK_COM_WLK_KEYIVT']/100),util_WALK_COM_In_vehicle_time_on_commuter_rail,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@short_i_wait_multiplier * ((odt_skims['WLK_COM_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_COM_WLK_IWAIT']/100).clip(upper=waitThresh)),util_WALK_COM_Short_iwait_time,11.524799346923828,6.766600131988525,7.306600093841553,7.026599884033203,10.826600074768066,5.8084001541137695,6.348400115966797,6.0684003829956055,9.868400573730469,6.968400001525879,6.6884002685546875,10.488399505615234,6.328400135040283,10.128399848937988,14.668399810791016
@long_i_wait_multiplier * ((odt_skims['WLK_COM_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_COM_WLK_IWAIT']/100-waitThresh).clip(0)),util_WALK_COM_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xwait_multiplier * (odt_skims['WLK_COM_WLK_XWAIT']/100 + dot_skims['WLK_COM_WLK_XWAIT']/100),util_WALK_COM_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xfers_wlk_multiplier * ((odt_skims['WLK_COM_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_COM_WLK_BOARDS']-1).clip(0)),util_WALK_COM_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@2 * wacc_multiplier * df.origin_walk_time # (5),util_WALK_COM_Walk_access_time,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64
@2 * wegr_multiplier * df.destination_walk_time # (4),util_WALK_COM_Walk_egress_time,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64
@waux_multiplier * (odt_skims['WLK_COM_WLK_WAUX']/100 + dot_skims['WLK_COM_WLK_WAUX']/100),util_WALK_COM_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['WLK_COM_WLK_FAR'] + dot_skims['WLK_COM_WLK_FAR']),util_WALK_COM_Fare,25.708844993932402,28.000718772461262,28.000718772461262,28.000718772461262,28.000718772461262,30.29259255099012,30.29259255099012,30.29259255099012,30.29259255099012,30.29259255099012,30.29259255099012,30.29259255099012,30.29259255099012,30.29259255099012,30.29259255099012
@density_index_multiplier * df.dest_density_index # (5),util_WALK_COM_Destination_zone_densityIndex,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745
@coef_topology_trn_multiplier * df.dest_topology # (5),util_WALK_COM_Topology,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005
drive_local_available == False,util_DRIVE_LOC_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
auto_ownership == 0 # (3),util_DRIVE_LOC_Unavailable_for_zero_auto_households,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (3),util_DRIVE_LOC_Unavailable_for_persons_less_than_16,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(odt_skims['DRV_LOC_WLK_TOTIVT']/100 + dot_skims['WLK_LOC_DRV_TOTIVT']/100),util_DRIVE_LOC_In_vehicle_time,10.040300369262695,9.472400665283203,9.652400970458984,10.180299758911133,10.040300369262695,10.120399475097656,10.300399780273438,10.828300476074219,10.688300132751465,10.720399856567383,11.248300552368164,11.10830020904541,11.238300323486328,11.09830093383789,10.678299903869629
@short_i_wait_multiplier * ((odt_skims['DRV_LOC_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_LOC_DRV_IWAIT']/100).clip(upper=waitThresh)),util_DRIVE_LOC_Short_iwait_time,19.908401489257812,11.188400268554688,11.728399276733398,11.448399543762207,15.24839973449707,5.528400421142578,6.0684003829956055,5.788400173187256,9.588399887084961,6.14840030670166,5.8684000968933105,9.668399810791016,5.3684000968933105,9.168399810791016,14.668399810791016
@long_i_wait_multiplier * ((odt_skims['DRV_LOC_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_LOC_DRV_IWAIT']/100-waitThresh).clip(0)),util_DRIVE_LOC_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xwait_multiplier * (odt_skims['DRV_LOC_WLK_XWAIT']/100 + dot_skims['WLK_LOC_DRV_XWAIT']/100),util_DRIVE_LOC_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xfers_wlk_multiplier * ((odt_skims['DRV_LOC_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_LOC_DRV_BOARDS']-1).clip(0)),util_DRIVE_LOC_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@dtim_multiplier * (odt_skims['DRV_LOC_WLK_DTIM']/100 + dot_skims['WLK_LOC_DRV_DTIM']/100),util_DRIVE_LOC_Drive_time,7.559999942779541,8.279999732971191,8.279999732971191,7.559999942779541,7.559999942779541,8.279999732971191,8.279999732971191,7.559999942779541,7.559999942779541,8.279999732971191,7.559999942779541,7.559999942779541,7.559999942779541,7.559999942779541,7.559999942779541
@wacc_multiplier * df.destination_walk_time,util_DRIVE_LOC_Walk_access_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@wegr_multiplier * df.destination_walk_time,util_DRIVE_LOC_Walk_egress_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@waux_multiplier * (odt_skims['DRV_LOC_WLK_WAUX']/100 + dot_skims['WLK_LOC_DRV_WAUX']/100),util_DRIVE_LOC_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * ((odt_skims['DRV_LOC_WLK_FAR'] + dot_skims['WLK_LOC_DRV_FAR']) + ((odt_skims['DRV_LOC_WLK_DDIST']/100+dot_skims['WLK_LOC_DRV_DDIST']/100) * costPerMile)),util_DRIVE_LOC_Fare_and_operating_cost,32.588991301101075,32.80769521992699,32.80769521992699,32.588991301101075,32.588991301101075,32.80769521992699,32.80769521992699,32.588991301101075,32.588991301101075,32.80769521992699,32.588991301101075,32.588991301101075,32.588991301101075,32.588991301101075,32.588991301101075
@dacc_ratio * ((odt_skims['DRV_LOC_WLK_DDIST']/100+ dot_skims['WLK_LOC_DRV_DDIST']/100)/ (od_skims['DIST']*2)),util_DRIVE_LOC_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@density_index_multiplier * df.dest_density_index # (6),util_DRIVE_LOC_Destination_zone_densityIndex,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745
@coef_topology_trn_multiplier * df.dest_topology # (6),util_DRIVE_LOC_Topology,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005
drive_lrf_available == False,util_DRIVE_LRF_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
auto_ownership == 0 # (4),util_DRIVE_LRF_Unavailable_for_zero_auto_households,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (4),util_DRIVE_LRF_Unavailable_for_persons_less_than_16,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(odt_skims['DRV_LRF_WLK_TOTIVT']/100 + dot_skims['WLK_LRF_DRV_TOTIVT']/100),util_DRIVE_LRF_In_vehicle_time,56.069801330566406,54.897701263427734,54.88770294189453,54.867698669433594,55.60980224609375,55.0077018737793,54.997703552246094,54.977699279785156,55.71980285644531,55.03770065307617,55.0177001953125,55.75979995727539,55.057701110839844,55.799800872802734,55.61980056762695
@(ivt_lrt_multiplier-1) * (odt_skims['DRV_LRF_WLK_KEYIVT']/100 + dot_skims['WLK_LRF_DRV_KEYIVT']/100),util_DRIVE_LRF_In_vehicle_time_on_Light_Rail,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@(ivt_ferry_multiplier-ivt_lrt_multiplier)*(odt_skims['DRV_LRF_WLK_FERRYIVT']/100 + dot_skims['WLK_LRF_DRV_FERRYIVT']/100),util_DRIVE_LRF_In_vehicle_time_on_Ferry,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@short_i_wait_multiplier * ((odt_skims['DRV_LRF_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_LRF_DRV_IWAIT']/100).clip(upper=waitThresh)),util_DRIVE_LRF_Short_iwait_time,40.0,40.0,40.0,40.0,40.0,40.0,40.0,40.0,40.0,40.0,40.0,40.0,40.0,40.0,40.0
@long_i_wait_multiplier * ((odt_skims['DRV_LRF_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_LRF_DRV_IWAIT']/100-waitThresh).clip(0)),util_DRIVE_LRF_Long_iwait_time,13.012801170349121,10.012800216674805,10.012800216674805,10.012800216674805,25.012798309326172,5.012800216674805,5.012800216674805,5.012800216674805,20.012798309326172,10.012800216674805,10.012800216674805,25.012798309326172,5.012800216674805,20.012798309326172,33.872798919677734
@xwait_multiplier * (odt_skims['DRV_LRF_WLK_XWAIT']/100 + dot_skims['WLK_LRF_DRV_XWAIT']/100),util_DRIVE_LRF_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xfers_drv_multiplier * ((odt_skims['DRV_LRF_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_LRF_DRV_BOARDS']-1).clip(0)),util_DRIVE_LRF_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@dtim_multiplier * (odt_skims['DRV_LRF_WLK_DTIM']/100 + dot_skims['WLK_LRF_DRV_DTIM']/100),util_DRIVE_LRF_Drive_time,45.720001220703125,48.13999938964844,48.02000045776367,48.86000061035156,45.880001068115234,50.560001373291016,50.44000244140625,51.279998779296875,48.30000305175781,50.31999969482422,51.15999984741211,48.18000030517578,52.0,49.02000045776367,46.040000915527344
@wacc_multiplier * df.destination_walk_time # (2),util_DRIVE_LRF_Walk_access_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@wegr_multiplier * df.destination_walk_time # (2),util_DRIVE_LRF_Walk_egress_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@waux_multiplier * (odt_skims['DRV_LRF_WLK_WAUX']/100 + dot_skims['WLK_LRF_DRV_WAUX']/100),util_DRIVE_LRF_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * ((odt_skims['DRV_LRF_WLK_FAR']+dot_skims['WLK_LRF_DRV_FAR']) + ((odt_skims['DRV_LRF_WLK_DDIST']/100+dot_skims['WLK_LRF_DRV_DDIST']/100) *costPerMile)),util_DRIVE_LRF_Fare_and_operating_cost,69.07491975485114,70.13199933925742,70.13199933925742,70.13199933925742,69.07491975485114,71.18906675976159,71.18906675976159,71.18906675976159,70.13199933925742,71.18906675976159,71.18906675976159,70.13199933925742,71.18906675976159,70.13199933925742,69.07491975485114
@dacc_ratio * ((odt_skims['DRV_LRF_WLK_DDIST']/100+ dot_skims['WLK_LRF_DRV_DDIST']/100)/ (od_skims['DIST']*2)),util_DRIVE_LRF_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@density_index_multiplier * df.dest_density_index # (7),util_DRIVE_LRF_Destination_zone_densityIndex,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745
@coef_topology_trn_multiplier * df.dest_topology # (7),util_DRIVE_LRF_Topology,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005
drive_express_available == False,util_DRIVE_EXP_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
auto_ownership == 0 # (5),util_DRIVE_EXP_Unavailable_for_zero_auto_households,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (5),util_DRIVE_EXP_Unavailable_for_persons_less_than_16,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(odt_skims['DRV_EXP_WLK_TOTIVT']/100 + dot_skims['WLK_EXP_DRV_TOTIVT']/100),util_DRIVE_EXP_In_vehicle_time,56.069801330566406,54.897701263427734,54.88770294189453,54.867698669433594,55.60980224609375,55.0077018737793,54.997703552246094,54.977699279785156,55.71980285644531,55.03770065307617,55.0177001953125,55.75979995727539,55.057701110839844,55.799800872802734,55.61980056762695
@(ivt_exp_multiplier-1) * (odt_skims['DRV_EXP_WLK_KEYIVT']/100 + dot_skims['WLK_EXP_DRV_KEYIVT']/100),util_DRIVE_EXP_In_vehicle_time_on_Express_bus,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@short_i_wait_multiplier * ((odt_skims['DRV_EXP_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_EXP_DRV_IWAIT']/100).clip(upper=waitThresh)),util_DRIVE_EXP_Short_iwait_time,40.0,40.0,40.0,40.0,40.0,40.0,40.0,40.0,40.0,40.0,40.0,40.0,40.0,40.0,40.0
@long_i_wait_multiplier * ((odt_skims['DRV_EXP_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_EXP_DRV_IWAIT']/100-waitThresh).clip(0)),util_DRIVE_EXP_Long_iwait_time,13.012801170349121,10.012800216674805,10.012800216674805,10.012800216674805,25.012798309326172,5.012800216674805,5.012800216674805,5.012800216674805,20.012798309326172,10.012800216674805,10.012800216674805,25.012798309326172,5.012800216674805,20.012798309326172,33.872798919677734
@xwait_multiplier * (odt_skims['DRV_EXP_WLK_XWAIT']/100 + dot_skims['WLK_EXP_DRV_XWAIT']/100),util_DRIVE_EXP_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xfers_drv_multiplier * ((odt_skims['DRV_EXP_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_EXP_DRV_BOARDS']-1).clip(0)),util_DRIVE_EXP_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@dtim_multiplier * (odt_skims['DRV_EXP_WLK_DTIM']/100 + dot_skims['WLK_EXP_DRV_DTIM']/100),util_DRIVE_EXP_Drive_time,45.720001220703125,48.13999938964844,48.02000045776367,48.86000061035156,45.880001068115234,50.560001373291016,50.44000244140625,51.279998779296875,48.30000305175781,50.31999969482422,51.15999984741211,48.18000030517578,52.0,49.02000045776367,46.040000915527344
@wacc_multiplier * df.destination_walk_time # (3),util_DRIVE_EXP_Walk_access_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@wegr_multiplier * df.destination_walk_time # (3),util_DRIVE_EXP_Walk_egress_ime,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@waux_multiplier * (odt_skims['DRV_EXP_WLK_WAUX']/100 + dot_skims['WLK_EXP_DRV_WAUX']/100),util_DRIVE_EXP_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * ((odt_skims['DRV_EXP_WLK_FAR']+dot_skims['WLK_EXP_DRV_FAR']) + ((odt_skims['DRV_EXP_WLK_DDIST']/100+dot_skims['WLK_EXP_DRV_DDIST']/100) *costPerMile)),util_DRIVE_EXP_Fare_and_operating_cost,69.07491975485114,70.13199933925742,70.13199933925742,70.13199933925742,69.07491975485114,71.18906675976159,71.18906675976159,71.18906675976159,70.13199933925742,71.18906675976159,71.18906675976159,70.13199933925742,71.18906675976159,70.13199933925742,69.07491975485114
@dacc_ratio * ((odt_skims['DRV_EXP_WLK_DDIST']/100+ dot_skims['WLK_EXP_DRV_DDIST']/100)/ (od_skims['DIST']*2)),util_DRIVE_EXP_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@density_index_multiplier * df.dest_density_index # (8),util_DRIVE_EXP_Destination_zone_densityIndex,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745
@coef_topology_trn_multiplier * df.dest_topology # (8),util_DRIVE_EXP_Topology,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005
drive_heavyrail_available == False,util_DRIVE_HVY_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
auto_ownership == 0 # (6),util_DRIVE_HVY_Unavailable_for_zero_auto_households,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (6),util_DRIVE_HVY_Unavailable_for_persons_less_than_16,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(odt_skims['DRV_HVY_WLK_TOTIVT']/100 + dot_skims['WLK_HVY_DRV_TOTIVT']/100),util_DRIVE_HVY_In_vehicle_time,31.450401306152344,31.450401306152344,31.450401306152344,31.450401306152344,31.450401306152344,31.450401306152344,31.450401306152344,31.450401306152344,31.450401306152344,31.450401306152344,31.450401306152344,31.450401306152344,31.450401306152344,31.450401306152344,31.450401306152344
@(ivt_hvy_multiplier-1) * (odt_skims['DRV_HVY_WLK_KEYIVT']/100 + dot_skims['WLK_HVY_DRV_KEYIVT']/100),util_DRIVE_HVY_In_vehicle_time_on_heavy_rail,-6.290080547332764,-6.290080547332764,-6.290080547332764,-6.290080547332764,-6.290080547332764,-6.290080547332764,-6.290080547332764,-6.290080547332764,-6.290080547332764,-6.290080547332764,-6.290080547332764,-6.290080547332764,-6.290080547332764,-6.290080547332764,-6.290080547332764
@short_i_wait_multiplier * ((odt_skims['DRV_HVY_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_HVY_DRV_IWAIT']/100).clip(upper=waitThresh)),util_DRIVE_HVY_Short_iwait_time,11.524799346923828,10.684799194335938,11.104799270629883,11.104799270629883,20.324800491333008,7.964799880981445,8.38479995727539,8.38479995727539,17.604801177978516,8.38479995727539,8.38479995727539,17.604801177978516,7.964799880981445,17.184799194335938,21.584800720214844
@long_i_wait_multiplier * ((odt_skims['DRV_HVY_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_HVY_DRV_IWAIT']/100-waitThresh).clip(0)),util_DRIVE_HVY_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xwait_multiplier * (odt_skims['DRV_HVY_WLK_XWAIT']/100 + dot_skims['WLK_HVY_DRV_XWAIT']/100),util_DRIVE_HVY_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xfers_drv_multiplier * ((odt_skims['DRV_HVY_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_HVY_DRV_BOARDS']-1).clip(0)),util_DRIVE_HVY_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@dtim_multiplier * (odt_skims['DRV_HVY_WLK_DTIM']/100 + dot_skims['WLK_HVY_DRV_DTIM']/100),util_DRIVE_HVY_Drive_time,47.599998474121094,49.459999084472656,49.63999938964844,51.279998779296875,47.779998779296875,51.31999969482422,51.5,53.13999938964844,49.63999938964844,51.68000030517578,53.31999969482422,49.81999969482422,54.959999084472656,51.459999084472656,47.959999084472656
@wacc_multiplier * df.destination_walk_time # (4),util_DRIVE_HVY_Walk_access_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@wegr_multiplier * df.destination_walk_time # (4),util_DRIVE_HVY_Walk_egress_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@waux_multiplier * (odt_skims['DRV_HVY_WLK_WAUX']/100 + dot_skims['WLK_HVY_DRV_WAUX']/100),util_DRIVE_HVY_Walk_other_time,24.0,24.0,24.0,24.0,24.0,24.0,24.0,24.0,24.0,24.0,24.0,24.0,24.0,24.0,24.0
@ivt_cost_multiplier * df.ivot * ((odt_skims['DRV_HVY_WLK_FAR']+dot_skims['WLK_HVY_DRV_FAR']) + ((odt_skims['DRV_HVY_WLK_DDIST']/100+dot_skims['WLK_HVY_DRV_DDIST']/100) *costPerMile)),util_DRIVE_HVY_Fare_and_operating_cost,74.79123607276273,74.79123607276273,75.75718370261771,75.75718370261771,74.79123607276273,74.79123607276273,75.75718370261771,75.75718370261771,74.79123607276273,76.72313133247268,76.72313133247268,75.75718370261771,76.72313133247268,75.75718370261771,74.79123607276273
@dacc_ratio * (odt_skims['DRV_HVY_WLK_DDIST']/100) / od_skims['DIST'],util_DRIVE_HVY_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@density_index_multiplier * df.dest_density_index # (9),util_DRIVE_HVY_Destination_zone_densityIndex,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745
@coef_topology_trn_multiplier * df.dest_topology # (9),util_DRIVE_HVY_Topology,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005
drive_commuter_available == False,util_DRIVE_COM_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
auto_ownership == 0 # (7),util_DRIVE_COM_Unavailable_for_zero_auto_households,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (7),util_DRIVE_COM_Unavailable_for_persons_less_than_16,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(odt_skims['DRV_COM_WLK_TOTIVT']/100 + dot_skims['WLK_COM_DRV_TOTIVT']/100),util_DRIVE_COM_In_vehicle_time,61.51409912109375,65.76390075683594,65.77389526367188,65.77389526367188,61.614097595214844,50.99689865112305,51.00689697265625,51.00689697265625,46.84709930419922,55.12670135498047,55.12670135498047,50.96689987182617,55.12670135498047,50.96689987182617,66.96279907226562
@(ivt_com_multiplier - 1) * (odt_skims['DRV_COM_WLK_KEYIVT']/100 + dot_skims['WLK_COM_DRV_KEYIVT']/100),util_DRIVE_COM_In_vehicle_time_on_commuter_rail,-10.790639877319336,-12.026580810546875,-12.026580810546875,-12.026580810546875,-10.790639877319336,-12.026580810546875,-12.026580810546875,-12.026580810546875,-10.790639877319336,-13.262519836425781,-13.262519836425781,-12.026580810546875,-13.262519836425781,-12.026580810546875,-7.4140801429748535
@short_i_wait_multiplier * ((odt_skims['DRV_COM_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_COM_DRV_IWAIT']/100).clip(upper=waitThresh)),util_DRIVE_COM_Short_iwait_time,32.90660095214844,23.866600036621094,23.046600341796875,23.046600341796875,28.32659912109375,23.866600036621094,23.046600341796875,23.046600341796875,28.32659912109375,23.046600341796875,23.046600341796875,28.32659912109375,23.046600341796875,28.32659912109375,28.32659912109375
@long_i_wait_multiplier * ((odt_skims['DRV_COM_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_COM_DRV_IWAIT']/100-waitThresh).clip(0)),util_DRIVE_COM_Long_iwait_time,15.143501281738281,15.143501281738281,15.143501281738281,15.143501281738281,15.143501281738281,7.163299560546875,7.163299560546875,7.163299560546875,7.163299560546875,15.023300170898438,15.023300170898438,15.023300170898438,5.023299217224121,5.023299217224121,27.342300415039062
@xwait_multiplier * (odt_skims['DRV_COM_WLK_XWAIT']/100 + dot_skims['WLK_COM_DRV_XWAIT']/100),util_DRIVE_COM_transfer_wait_time,68.0,58.0,68.0,44.65999984741211,92.23999786376953,48.0,58.0,34.65999984741211,82.23999786376953,59.0,35.65999984741211,83.23999786376953,34.65999984741211,82.23999786376953,84.23999786376953
@xfers_drv_multiplier * ((odt_skims['DRV_COM_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_COM_DRV_BOARDS']-1).clip(0)),util_DRIVE_COM_number_of_transfers,40.0,40.0,40.0,40.0,40.0,40.0,40.0,40.0,40.0,40.0,40.0,40.0,40.0,40.0,40.0
@dtim_multiplier * (odt_skims['DRV_COM_WLK_DTIM']/100 + dot_skims['WLK_COM_DRV_DTIM']/100),util_DRIVE_COM_Drive_time,54.68000030517578,61.959999084472656,61.18000030517578,62.47999954223633,54.79999923706055,65.13999938964844,64.36000061035156,65.66000366210938,57.97999954223633,67.68000030517578,68.97999572753906,61.29999923706055,70.27999877929688,62.599998474121094,54.91999816894531
@wacc_multiplier * df.destination_walk_time # (5),util_DRIVE_COM_Walk_access_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@wegr_multiplier * df.destination_walk_time # (5),util_DRIVE_COM_Walk_egress_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@waux_multiplier * (odt_skims['DRV_COM_WLK_WAUX']/100 + dot_skims['WLK_COM_DRV_WAUX']/100),util_DRIVE_COM_Walk_other_time,12.0,12.0,12.0,12.0,12.0,12.0,12.0,12.0,12.0,12.0,12.0,12.0,12.0,12.0,14.0
@ivt_cost_multiplier * df.ivot * ((odt_skims['DRV_COM_WLK_FAR']+dot_skims['WLK_COM_DRV_FAR']) + ((odt_skims['DRV_COM_WLK_DDIST']/100+dot_skims['WLK_COM_DRV_DDIST']/100) *costPerMile)),util_DRIVE_COM_Fare_and_operating_cost,109.88734140009491,114.38900694576553,114.38900694576553,114.38900694576553,109.88734140009491,105.28212455582644,105.28212455582644,105.28212455582644,100.78044684625372,108.72671051709077,108.72671051709077,104.22504497142016,108.72671051709077,104.22504497142016,144.86332819416575
@dacc_ratio * ((odt_skims['DRV_COM_WLK_DDIST']/100 + dot_skims['WLK_COM_DRV_DDIST']/100)/ (od_skims['DIST']*2)),util_DRIVE_COM_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@density_index_multiplier * df.dest_density_index # (10),util_DRIVE_COM_Destination_zone_densityIndex,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745,-15.932721761187745
@coef_topology_trn_multiplier * df.dest_topology # (10),util_DRIVE_COM_Topology,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005
@(odt_skims['HOV2TOLL_TIME'] + dot_skims['HOV2TOLL_TIME']) # (2),util_Taxi_In_vehicle_time,9.799999237060547,9.829999923706055,9.84000015258789,9.829999923706055,9.799999237060547,9.889999389648438,9.899999618530273,9.889999389648438,9.859999656677246,9.90999984741211,9.899999618530273,9.869999885559082,9.869999885559082,9.84000015258789,9.809999465942383
@ridehail_wait_time_multiplier * df.totalWaitTaxi, util_Taxi_Wait_time,16.5,16.5,16.5,16.5,16.5,16.5,16.5,16.5,16.5,16.5,16.5,16.5,16.5,16.5,16.5
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_VTOLL'] + dot_skims['HOV2TOLL_VTOLL']),util_Taxi_Tolls,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_BTOLL'] + dot_skims['HOV2TOLL_BTOLL']),util_Taxi_Bridge_toll,0.41652313047062683,0.42449490526527006,0.42449490526527006,0.42449490526527006,0.41652313047062683,0.42449490526527006,0.42449490526527006,0.42449490526527006,0.41652313047062683,0.42449490526527006,0.42449490526527006,0.41652313047062683,0.42449490526527006,0.41652313047062683,0.41652313047062683
@ivt_cost_multiplier * df.ivot * (Taxi_baseFare * 2 + (odt_skims['HOV2TOLL_DIST'] + dot_skims['HOV2TOLL_DIST']) * Taxi_costPerMile +(odt_skims['HOV2TOLL_TIME'] + dot_skims['HOV2TOLL_TIME']) * Taxi_costPerMinute)*100,util_Taxi_Fare,129.4709394537734,129.0424564991673,129.05242519706215,129.0424564991673,129.4709394537734,129.10224968043948,129.11220887528583,129.10224968043948,129.5307326350456,129.1221775731807,129.11220887528583,129.54069182989195,129.08232178769825,129.51080474230437,129.48090815166827
@(odt_skims['HOV2TOLL_TIME'] + dot_skims['HOV2TOLL_TIME']) # (3),util_TNC_Single_In_vehicle_time,9.799999237060547,9.829999923706055,9.84000015258789,9.829999923706055,9.799999237060547,9.889999389648438,9.899999618530273,9.889999389648438,9.859999656677246,9.90999984741211,9.899999618530273,9.869999885559082,9.869999885559082,9.84000015258789,9.809999465942383
@ridehail_wait_time_multiplier * df.totalWaitSingleTNC,util_TNC_Single_Wait_time,9.000000000000002,9.000000000000002,9.000000000000002,9.000000000000002,9.000000000000002,9.000000000000002,9.000000000000002,9.000000000000002,9.000000000000002,9.000000000000002,9.000000000000002,9.000000000000002,9.000000000000002,9.000000000000002,9.000000000000002
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_VTOLL'] + dot_skims['HOV2TOLL_VTOLL']) # (2),util_TNC_Single_Tolls,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_BTOLL'] + odr_skims['HOV2TOLL_BTOLL'] + dot_skims['HOV2TOLL_BTOLL'] + dor_skims['HOV2TOLL_BTOLL']),util_TNC_Single_Bridge_toll,0.8330462609412537,0.8410180832511395,0.8410180832511395,0.8410180832511395,0.8330462609412537,0.8489898105305401,0.8489898105305401,0.8489898105305401,0.8410179882206543,0.8489898105305401,0.8489898105305401,0.8410179882206543,0.8489898105305401,0.8410179882206543,0.8330462609412537
"@ivt_cost_multiplier * df.ivot * np.maximum(TNC_single_baseFare * 2 + (odt_skims['HOV2TOLL_DIST'] + dot_skims['HOV2TOLL_DIST']) * TNC_single_costPerMile + (odt_skims['HOV2TOLL_TIME'] + dot_skims['HOV2TOLL_TIME']) * TNC_single_costPerMinute, TNC_single_costMinimum) * 100",util_TNC_Single_Cost,111.14889085713564,110.9555798441924,110.97949901731097,110.9555798441924,111.14889085713564,111.09907587680684,111.12298554687689,111.09907587680684,111.29238688975009,111.14690471999549,111.12298554687689,111.31630606286866,111.0512470336182,111.24455804656144,111.17281003025423
@(odt_skims['HOV2TOLL_TIME'] + dot_skims['HOV2TOLL_TIME']) * TNC_shared_IVTFactor,util_TNC_Shared_In_vehicle_time,14.69999885559082,14.744999885559082,14.760000228881836,14.744999885559082,14.69999885559082,14.834999084472656,14.84999942779541,14.834999084472656,14.789999008178711,14.864999771118164,14.84999942779541,14.805000305175781,14.805000305175781,14.760000228881836,14.714999198913574
@ridehail_wait_time_multiplier * df.totalWaitSharedTNC,util_TNC_Shared_Wait_time,14.999999999999996,14.999999999999996,14.999999999999996,14.999999999999996,14.999999999999996,14.999999999999996,14.999999999999996,14.999999999999996,14.999999999999996,14.999999999999996,14.999999999999996,14.999999999999996,14.999999999999996,14.999999999999996,14.999999999999996
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_VTOLL'] + dot_skims['HOV2TOLL_VTOLL']) # (3),util_TNC_Shared_Tolls,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_BTOLL'] + odr_skims['HOV2TOLL_BTOLL'] + dot_skims['HOV2TOLL_BTOLL'] + dor_skims['HOV2TOLL_BTOLL']) # (2),util_TNC_Shared_Bridge_toll,0.8330462609412537,0.8410180832511395,0.8410180832511395,0.8410180832511395,0.8330462609412537,0.8489898105305401,0.8489898105305401,0.8489898105305401,0.8410179882206543,0.8489898105305401,0.8489898105305401,0.8410179882206543,0.8489898105305401,0.8410179882206543,0.8330462609412537
"@ivt_cost_multiplier * df.ivot * np.maximum(TNC_shared_baseFare * 2 + (odt_skims['HOV2TOLL_DIST'] + dot_skims['HOV2TOLL_DIST']) * TNC_shared_costPerMile + (odt_skims['HOV2TOLL_TIME'] + dot_skims['HOV2TOLL_TIME']) * TNC_shared_costPerMinute, TNC_shared_costMinimum) * 100",util_TNC_Shared_Cost,71.09093276900161,71.01520297536555,71.02517167326043,71.01520297536555,71.09093276900161,71.07499140511348,71.0849553514841,71.07499140511348,71.15072119874955,71.09492404937897,71.0849553514841,71.16068514512015,71.05506351237226,71.13079330600833,71.10089671537223
@(df.is_indiv & (df.auto_ownership == 0)),util_Walk_ASC_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),util_Walk_ASC_Auto_deficient,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(df.is_indiv & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)),util_Walk_ASC_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership == 0)) # (2),util_Bike_ASC_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (2),util_Bike_ASC_Auto_deficient,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(df.is_indiv & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (2),util_Bike_ASC_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (3),util_Shared_ride_2_ASC_Auto_deficient,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(df.is_indiv & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (3),util_Shared_ride_2_ASC_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership == 0)) # (4),util_Shared_ride_3p_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (4),util_Shared_ride_3p_Auto_deficient,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(df.is_indiv & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (4),util_Shared_ride_3p_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership == 0)) # (5),util_Walk_to_Transit_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (5),util_Walk_to_Transit_Auto_deficient,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(df.is_indiv & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (5),util_Walk_to_Transit_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (6),util_Drive_to_Transit_Auto_deficient,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(df.is_indiv & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (6),util_Drive_to_Transit_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership == 0)) # (7),util_Taxi_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (7),util_Taxi_Auto_deficient,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(df.is_indiv & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (7),util_Taxi_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership == 0)) # (8),util_TNC_Single_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (8),util_TNC_Single_Auto_deficient,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(df.is_indiv & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (8),util_TNC_Single_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership == 0)) # (9),util_TNC_Shared_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (9),util_TNC_Shared_Auto_deficient,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(df.is_indiv & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (9),util_TNC_Shared_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership == 0)),util_Joint_Walk_ASC_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),util_Joint_Walk_ASC_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)),util_Joint_Walk_ASC_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership == 0)) # (2),util_Joint_Bike_ASC_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (2),util_Joint_Bike_ASC_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (2),util_Joint_Bike_ASC_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership == 0)) # (4),util_Joint_Shared_ride_3p_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (4),util_Joint_Shared_ride_3p_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (4),util_Joint_Shared_ride_3p_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership == 0)) # (5),util_Joint_Walk_to_Transit_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (5),util_Joint_Walk_to_Transit_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (5),util_Joint_Walk_to_Transit_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (6),util_Joint_Drive_to_Transit_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (6),util_Joint_Drive_to_Transit_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership == 0)) # (7),util_Joint_Taxi_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (7),util_Joint_Taxi_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (7),util_Joint_Taxi_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership == 0)) # (8),util_Joint_TNC_Single_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (8),util_Joint_TNC_Single_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (8),util_Joint_TNC_Single_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership == 0)) # (9),util_Joint_TNC_Shared_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (9),util_Joint_TNC_Shared_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (9),util_Joint_TNC_Shared_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1,util_Local_bus_ASC,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(df.walk_ferry_available == False),util_Walk_to_Light_Rail_ASC,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(df.drive_ferry_available == False),util_Drive_to_Light_Rail_ASC,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@df.walk_ferry_available,util_Walk_to_Ferry_ASC,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.drive_ferry_available,util_Drive_to_Ferry_ASC,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1 # (2),util_Express_Bus_ASC,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
1 # (3),util_Heavy_Rail_ASC,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
1 # (4),util_Commuter_Rail,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@df.destination_in_cbd,util_Walk_to_Transit_dest_CBD,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@df.destination_in_cbd # (2),util_Drive_to_Transit_dest_CBD,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@drvtrn_distpen_0_multiplier * (1-od_skims['DIST']/drvtrn_distpen_max).clip(lower=0),util_Drive_to_Transit_distance_penalty,241.02000427246094,241.02000427246094,241.02000427246094,241.02000427246094,241.02000427246094,241.02000427246094,241.02000427246094,241.02000427246094,241.02000427246094,241.02000427246094,241.02000427246094,241.02000427246094,241.02000427246094,241.02000427246094,241.02000427246094
@od_skims.max('DISTWALK') > 3,util_Walk_not_available_for_long_distances,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@od_skims.max('DISTBIKE') > 8,util_Bike_not_available_for_long_distances,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
is_escort,util_Drive_alone_not_available_for_escort_tours,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
