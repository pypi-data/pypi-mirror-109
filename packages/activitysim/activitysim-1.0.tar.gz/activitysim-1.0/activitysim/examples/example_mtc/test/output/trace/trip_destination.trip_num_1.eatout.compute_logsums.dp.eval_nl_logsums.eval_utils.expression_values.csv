Expression,Label,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14
sov_available == False,util_DRIVEALONEFREE_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
auto_ownership == 0,util_DRIVEALONEFREE_Unavailable_for_zero_auto_households,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16,util_DRIVEALONEFREE_Unavailable_for_persons_less_than_16,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
is_joint == True,util_DRIVEALONEFREE_Unavailable_for_joint_tours,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
is_atwork_subtour & ~work_tour_is_SOV,util_DRIVEALONEFREE_Unavailable_if_didn't_drive_to_work,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@odt_skims['SOV_TIME'],util_DRIVEALONEFREE_In_vehicle_time,0.9700000286102295,1.8600000143051147,2.430000066757202,1.5,2.640000104904175,3.759999990463257,4.179999828338623,5.409999847412109,4.130000114440918,1.6299999952316284,0.7400000095367432,0.3799999952316284,1.059999942779541,1.559999942779541,2.9100000858306885
@coef_walktimeshort_multiplier * df.total_terminal_time,util_DRIVEALONEFREE_Terminal_time,11.04294,11.04294,11.04294,11.04294,11.04294,11.04294,11.04294,11.04294,11.04294,11.04294,11.04294,11.04294,11.04294,11.04294,11.04294
@ivt_cost_multiplier * df.ivot * costPerMile * odt_skims['SOV_DIST'],util_DRIVEALONEFREE_Operating_cost,0.5649867494270415,1.0570719442522403,1.403354138505477,0.8748181663793569,1.5309317775849094,2.0230170810418313,2.259946997708166,2.8613845787519905,1.6767348867885947,0.8201420275859058,0.4191837216971487,0.200479166523344,0.6014375267279628,0.8930435821877485,1.7131856097736544
@ivt_cost_multiplier * df.ivot * df.total_parking_cost,util_DRIVEALONEFREE_Parking_cost,11.825696018603182,11.825696018603182,11.825696018603182,11.825696018603182,11.825696018603182,11.825696018603182,11.825696018603182,11.825696018603182,11.825696018603182,11.825696018603182,11.825696018603182,11.825696018603182,11.825696018603182,11.825696018603182,11.825696018603182
@ivt_cost_multiplier * df.ivot * odt_skims['SOV_BTOLL'],util_DRIVEALONEFREE_Bridge_toll,0.04185160682298823,0.07573148042717044,0.09964668602299381,0.06277741171933368,0.10761842518120515,0.13950535805642922,0.15644530228277698,0.2002898379559127,0.12555482343866736,0.06178094580940859,0.03587280839373505,0.016939936802091108,0.04484100752246615,0.06775974720836443,0.12057249388904193
sovtoll_available == False,util_DRIVEALONEPAY_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
auto_ownership == 0 # (2),util_DRIVEALONEPAY_Unavailable_for_zero_auto_households,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (2),util_DRIVEALONEPAY_Unavailable_for_persons_less_than_16,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
is_joint == True # (2),util_DRIVEALONEPAY_Unavailable_for_joint_tours,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
is_atwork_subtour & ~work_tour_is_SOV # (2),util_DRIVEALONEPAY_Unavailable_if_didn't_drive_to_work,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@odt_skims['SOVTOLL_TIME'],util_DRIVEALONEPAY_In_vehicle_time,0.9700000286102295,1.8600000143051147,2.430000066757202,1.5,2.640000104904175,3.759999990463257,4.179999828338623,5.409999847412109,4.130000114440918,1.6299999952316284,0.7400000095367432,0.3799999952316284,1.059999942779541,1.559999942779541,2.9100000858306885
@coef_walktimeshort_multiplier * df.total_terminal_time # (2),util_DRIVEALONEPAY_Terminal_time,11.04294,11.04294,11.04294,11.04294,11.04294,11.04294,11.04294,11.04294,11.04294,11.04294,11.04294,11.04294,11.04294,11.04294,11.04294
@ivt_cost_multiplier * df.ivot * costPerMile * odt_skims['SOVTOLL_DIST'],util_DRIVEALONEPAY_Operating_cost,0.5649867494270415,1.0570719442522403,1.403354138505477,0.8748181663793569,1.5309317775849094,2.0230170810418313,2.259946997708166,2.8613845787519905,1.6767348867885947,0.8201420275859058,0.4191837216971487,0.200479166523344,0.6014375267279628,0.8930435821877485,1.7131856097736544
@ivt_cost_multiplier * df.ivot * df.total_parking_cost # (2),util_DRIVEALONEPAY_Parking_cost,11.825696018603182,11.825696018603182,11.825696018603182,11.825696018603182,11.825696018603182,11.825696018603182,11.825696018603182,11.825696018603182,11.825696018603182,11.825696018603182,11.825696018603182,11.825696018603182,11.825696018603182,11.825696018603182,11.825696018603182
@ivt_cost_multiplier * df.ivot * odt_skims['SOVTOLL_BTOLL'],util_DRIVEALONEPAY_Bridge_toll,0.04185160682298823,0.07573148042717044,0.09964668602299381,0.06277741171933368,0.10761842518120515,0.13950535805642922,0.15644530228277698,0.2002898379559127,0.12555482343866736,0.06178094580940859,0.03587280839373505,0.016939936802091108,0.04484100752246615,0.06775974720836443,0.12057249388904193
@ivt_cost_multiplier * df.ivot * odt_skims['SOVTOLL_VTOLL'],util_DRIVEALONEPAY_Value_toll,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
hov2_available == False,util_SHARED2FREE_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
is_joint & (number_of_participants > 2),util_SHARED2FREE_Unavailable_based_on_party_size,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@odt_skims['HOV2_TIME'],util_SHARED2FREE_In_vehicle_time,0.9700000286102295,1.8600000143051147,2.430000066757202,1.5,2.640000104904175,3.759999990463257,4.179999828338623,5.409999847412109,4.130000114440918,1.6299999952316284,0.7400000095367432,0.3799999952316284,1.059999942779541,1.559999942779541,2.9100000858306885
@coef_walktimeshort_multiplier * df.total_terminal_time # (3),util_SHARED2FREE_Terminal_time,11.04294,11.04294,11.04294,11.04294,11.04294,11.04294,11.04294,11.04294,11.04294,11.04294,11.04294,11.04294,11.04294,11.04294,11.04294
@ivt_cost_multiplier * df.ivot * costPerMile * odt_skims['HOV2_DIST'],util_SHARED2FREE_Operating_cost,0.5649867494270415,1.0570719442522403,1.403354138505477,0.8748181663793569,1.5309317775849094,2.0230170810418313,2.259946997708166,2.8613845787519905,1.6767348867885947,0.8201420275859058,0.4191837216971487,0.200479166523344,0.6014375267279628,0.8930435821877485,1.7131856097736544
@ivt_cost_multiplier * df.ivot * df.total_parking_cost / costShareSr2,util_SHARED2FREE_Parking_cost,6.757540582058961,6.757540582058961,6.757540582058961,6.757540582058961,6.757540582058961,6.757540582058961,6.757540582058961,6.757540582058961,6.757540582058961,6.757540582058961,6.757540582058961,6.757540582058961,6.757540582058961,6.757540582058961,6.757540582058961
@ivt_cost_multiplier * df.ivot * odt_skims['HOV2_BTOLL'] / costShareSr2,util_SHARED2FREE_Bridge_toll,0.023915203898850417,0.043275131672668825,0.05694096344171075,0.035872806696762106,0.06149624296068866,0.0797173474608167,0.08939731559015827,0.11445133597480726,0.07174561339352421,0.03530339760537634,0.020498747653562886,0.009679963886909204,0.025623432869980655,0.038719855547636815,0.06889856793659539
@(df.hhsize == 1),util_SHARED2FREE_One_person_household,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
hov2toll_available == False,util_SHARED2PAY_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
is_joint & (number_of_participants > 2) # (2),util_SHARED2PAY_Unavailable_based_on_party_size,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@odt_skims['HOV2TOLL_TIME'],util_SHARED2PAY_In_vehicle_time,0.9700000286102295,1.8600000143051147,2.430000066757202,1.5,2.640000104904175,3.759999990463257,4.179999828338623,5.409999847412109,4.130000114440918,1.6299999952316284,0.7400000095367432,0.3799999952316284,1.059999942779541,1.559999942779541,2.9100000858306885
@coef_walktimeshort_multiplier * df.total_terminal_time # (4),util_SHARED2PAY_Terminal_time,11.04294,11.04294,11.04294,11.04294,11.04294,11.04294,11.04294,11.04294,11.04294,11.04294,11.04294,11.04294,11.04294,11.04294,11.04294
@ivt_cost_multiplier * df.ivot * costPerMile * odt_skims['HOV2TOLL_DIST'],util_SHARED2PAY_Operating_cost,0.5649867494270415,1.0570719442522403,1.403354138505477,0.8748181663793569,1.5309317775849094,2.0230170810418313,2.259946997708166,2.8613845787519905,1.6767348867885947,0.8201420275859058,0.4191837216971487,0.200479166523344,0.6014375267279628,0.8930435821877485,1.7131856097736544
@ivt_cost_multiplier * df.ivot * df.total_parking_cost / costShareSr2 # (2),util_SHARED2PAY_Parking_cost,6.757540582058961,6.757540582058961,6.757540582058961,6.757540582058961,6.757540582058961,6.757540582058961,6.757540582058961,6.757540582058961,6.757540582058961,6.757540582058961,6.757540582058961,6.757540582058961,6.757540582058961,6.757540582058961,6.757540582058961
@ivt_cost_multiplier * df.ivot * odt_skims['HOV2TOLL_BTOLL'] / costShareSr2,util_SHARED2PAY_Bridge_toll,0.023915203898850417,0.043275131672668825,0.05694096344171075,0.035872806696762106,0.06149624296068866,0.0797173474608167,0.08939731559015827,0.11445133597480726,0.07174561339352421,0.03530339760537634,0.020498747653562886,0.009679963886909204,0.025623432869980655,0.038719855547636815,0.06889856793659539
@ivt_cost_multiplier * df.ivot * odt_skims['HOV2TOLL_VTOLL'] / costShareSr2,util_SHARED2PAY_Value_toll,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.hhsize == 1) # (2),util_SHARED2PAY_One_person_household,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
hov3_available == False,util_SHARED3FREE_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@odt_skims['HOV3_TIME'],util_SHARED3FREE_In_vehicle_time,0.9700000286102295,1.8600000143051147,2.430000066757202,1.5,2.640000104904175,3.759999990463257,4.179999828338623,5.409999847412109,4.130000114440918,1.6299999952316284,0.7400000095367432,0.3799999952316284,1.059999942779541,1.559999942779541,2.9100000858306885
@coef_walktimeshort_multiplier * df.total_terminal_time # (5),util_SHARED3FREE_Terminal_time,11.04294,11.04294,11.04294,11.04294,11.04294,11.04294,11.04294,11.04294,11.04294,11.04294,11.04294,11.04294,11.04294,11.04294,11.04294
@ivt_cost_multiplier * df.ivot * costPerMile * odt_skims['HOV3_DIST'],util_SHARED3FREE_Operating_cost,0.5649867494270415,1.0570719442522403,1.403354138505477,0.8748181663793569,1.5309317775849094,2.0230170810418313,2.259946997708166,2.8613845787519905,1.6767348867885947,0.8201420275859058,0.4191837216971487,0.200479166523344,0.6014375267279628,0.8930435821877485,1.7131856097736544
@ivt_cost_multiplier * df.ivot *  df.total_parking_cost / costShareSr3,util_SHARED3FREE_Parking_cost,4.730278407441273,4.730278407441273,4.730278407441273,4.730278407441273,4.730278407441273,4.730278407441273,4.730278407441273,4.730278407441273,4.730278407441273,4.730278407441273,4.730278407441273,4.730278407441273,4.730278407441273,4.730278407441273,4.730278407441273
@ivt_cost_multiplier * df.ivot * odt_skims['HOV3_BTOLL'] / costShareSr3,util_SHARED3FREE_Bridge_toll,0.016740642729195294,0.030292592170868177,0.03985867440919753,0.025110964687733474,0.043047370072482063,0.05580214322257169,0.0625781209131108,0.08011593518236508,0.05022192937546695,0.024712378323763436,0.01434912335749402,0.006775974720836443,0.01793640300898646,0.027103898883345773,0.04822899755561677
@(df.hhsize == 1) # (3),util_SHARED3FREE_One_person_household,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
hov3toll_available == False,util_SHARED3PAY_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@odt_skims['HOV3TOLL_TIME'],util_SHARED3PAY_In_vehicle_time,0.9700000286102295,1.8600000143051147,2.430000066757202,1.5,2.640000104904175,3.759999990463257,4.179999828338623,5.409999847412109,4.130000114440918,1.6299999952316284,0.7400000095367432,0.3799999952316284,1.059999942779541,1.559999942779541,2.9100000858306885
@coef_walktimeshort_multiplier * df.total_terminal_time # (6),util_SHARED3PAY_Terminal_time,11.04294,11.04294,11.04294,11.04294,11.04294,11.04294,11.04294,11.04294,11.04294,11.04294,11.04294,11.04294,11.04294,11.04294,11.04294
@ivt_cost_multiplier * df.ivot * costPerMile * odt_skims['HOV3TOLL_DIST'],util_SHARED3PAY_Operating_cost,0.5649867494270415,1.0570719442522403,1.403354138505477,0.8748181663793569,1.5309317775849094,2.0230170810418313,2.259946997708166,2.8613845787519905,1.6767348867885947,0.8201420275859058,0.4191837216971487,0.200479166523344,0.6014375267279628,0.8930435821877485,1.7131856097736544
@ivt_cost_multiplier * df.ivot * df.total_parking_cost / costShareSr3,util_SHARED3PAY_Parking_cost,4.730278407441273,4.730278407441273,4.730278407441273,4.730278407441273,4.730278407441273,4.730278407441273,4.730278407441273,4.730278407441273,4.730278407441273,4.730278407441273,4.730278407441273,4.730278407441273,4.730278407441273,4.730278407441273,4.730278407441273
@ivt_cost_multiplier * df.ivot * odt_skims['HOV3TOLL_BTOLL'] / costShareSr3,util_SHARED3PAY_Bridge_toll,0.016740642729195294,0.030292592170868177,0.03985867440919753,0.025110964687733474,0.043047370072482063,0.05580214322257169,0.0625781209131108,0.08011593518236508,0.05022192937546695,0.024712378323763436,0.01434912335749402,0.006775974720836443,0.01793640300898646,0.027103898883345773,0.04822899755561677
@ivt_cost_multiplier * df.ivot * odt_skims['HOV3TOLL_VTOLL'] / costShareSr3,util_SHARED3PAY_Value_toll,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.hhsize == 1) # (4),util_SHARED3PAY_One_person_household,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@coef_walktimeshort_multiplier * od_skims['DISTWALK'].clip(upper=walkThresh) * 60/walkSpeed,util_WALK_Time_up_to_2_miles,12.40000057220459,23.19999885559082,30.799997329711914,17.600000381469727,31.19999885559082,40.0,40.0,40.0,36.79999923706055,18.0,9.199999809265137,4.400000095367432,13.200000762939453,19.600000381469727,37.60000228881836
@walktimelong_multiplier * (od_skims['DISTWALK'] - walkThresh).clip(lower=0) * 60/walkSpeed,util_WALK_Time_beyond_2_of_a_miles,0.0,0.0,0.0,0.0,0.0,10.00000286102295,12.0,54.999996185302734,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@density_index_multiplier * df.density_index,util_WALK_Destination_zone_densityIndex,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217
@topology_walk_multiplier * df.trip_topology,util_WALK_Topology,45.0,45.0,45.0,45.0,45.0,45.0,45.0,45.0,45.0,45.0,45.0,45.0,45.0,45.0,45.0
is_atwork_subtour & ~work_tour_is_bike,util_BIKE_Unavailable_if_didn't_bike_to_work,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@coef_biketimeshort_multiplier * od_skims['DISTBIKE'].clip(upper=bikeThresh)*60/bikeSpeed,util_BIKE_Time_up_to_6_miles,6.200000286102295,11.59999942779541,15.399998664855957,8.800000190734863,15.59999942779541,22.0,22.399999618530273,31.0,18.399999618530273,9.0,4.599999904632568,2.200000047683716,6.600000381469727,9.800000190734863,18.80000114440918
@coef_biketimeshort_multiplier * biketimelong_multiplier * (od_skims['DISTBIKE']-bikeThresh).clip(lower=0)*60/bikeSpeed,util_BIKE_Time_beyond_6_of_a_miles,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@density_index_multiplier*df.density_index,util_BIKE_Destination_zone_densityIndex,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217
@topology_bike_multiplier * df.trip_topology,util_BIKE_Topology,60.0,60.0,60.0,60.0,60.0,60.0,60.0,60.0,60.0,60.0,60.0,60.0,60.0,60.0,60.0
walk_local_available == False,util_WALK_LOC_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
@odt_skims['WLK_LOC_WLK_TOTIVT']/100,util_WALK_LOC_In_vehicle_time,1.4164999723434448,1.4164999723434448,1.4164999723434448,1.4164999723434448,3.4697000980377197,6.060100078582764,6.7967000007629395,8.101900100708008,5.581599712371826,2.5078001022338867,1.3364999294281006,0.0,0.6072999835014343,0.3646000027656555,2.965700149536133
@coef_short_iwait_multiplier * (odt_skims['WLK_LOC_WLK_IWAIT']/100).clip(upper=waitThresh),util_WALK_LOC_Short_iwait_time,1.51419997215271,1.51419997215271,1.51419997215271,1.51419997215271,1.6341999769210815,3.3742001056671143,3.0942001342773438,3.0942001342773438,4.154200077056885,4.154200077056885,4.154200077056885,0.0,4.154200077056885,5.034200191497803,5.034200191497803
@coef_long_iwait_multiplier * (odt_skims['WLK_LOC_WLK_IWAIT']/100-waitThresh).clip(0),util_WALK_LOC_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@coef_xwait_multiplier * odt_skims['WLK_LOC_WLK_XWAIT']/100,util_WALK_LOC_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xfers_wlk_multiplier * (odt_skims['WLK_LOC_WLK_BOARDS']-1).clip(0),util_WALK_LOC_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@coef_wacc_multiplier * df.origin_walk_time,util_WALK_LOC_Walk_access_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@coef_wegr_multiplier * df.destination_walk_time,util_WALK_LOC_Walk_egress_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@coef_waux_multiplier * odt_skims['WLK_LOC_WLK_WAUX']/100,util_WALK_LOC_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * odt_skims['WLK_LOC_WLK_FAR'],util_WALK_LOC_Fare,15.14629627549506,15.14629627549506,15.14629627549506,15.14629627549506,15.14629627549506,15.14629627549506,15.14629627549506,15.14629627549506,15.14629627549506,15.14629627549506,15.14629627549506,0.0,15.14629627549506,15.14629627549506,15.14629627549506
@density_index_multiplier * df.density_index # (2),util_WALK_LOC_Destination_zone_densityIndex,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217
@topology_trn_multiplier * df.trip_topology,util_WALK_LOC_Topology,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005
walk_lrf_available == False,util_WALK_LRF_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@odt_skims['WLK_LRF_WLK_TOTIVT']/100,util_WALK_LRF_In_vehicle_time,1.4164999723434448,1.4164999723434448,1.4164999723434448,1.4164999723434448,3.4697000980377197,6.060100078582764,6.7967000007629395,6.668300151824951,5.581599712371826,2.5078001022338867,1.3364999294281006,0.0,0.6072999835014343,0.3646000027656555,2.965700149536133
@(coef_ivt_lrt_multiplier-1) * odt_skims['WLK_LRF_WLK_KEYIVT']/100,util_WALK_LRF_In_vehicle_time_on_Light_Rail,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.6668300628662109,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@(coef_ivt_ferry_multiplier-coef_ivt_lrt_multiplier) * odt_skims['WLK_LRF_WLK_FERRYIVT']/100,util_WALK_LRF_In_vehicle_time_on_Ferry,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@coef_short_iwait_multiplier * (odt_skims['WLK_LRF_WLK_IWAIT']/100).clip(upper=waitThresh),util_WALK_LRF_Short_iwait_time,1.51419997215271,1.51419997215271,1.51419997215271,1.51419997215271,1.6341999769210815,3.3742001056671143,3.0942001342773438,2.2546000480651855,4.154200077056885,4.154200077056885,4.154200077056885,0.0,4.154200077056885,5.034200191497803,5.034200191497803
@coef_long_iwait_multiplier * (odt_skims['WLK_LRF_WLK_IWAIT']/100-waitThresh).clip(0),util_WALK_LRF_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@coef_xwait_multiplier * odt_skims['WLK_LRF_WLK_XWAIT']/100,util_WALK_LRF_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xfers_wlk_multiplier * (odt_skims['WLK_LRF_WLK_BOARDS']-1).clip(0),util_WALK_LRF_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@coef_wacc_multiplier * df.origin_walk_time # (2),util_WALK_LRF_Walk_access_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@coef_wegr_multiplier * df.destination_walk_time # (2),util_WALK_LRF_Walk_egress_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@coef_waux_multiplier * odt_skims['WLK_LRF_WLK_WAUX']/100,util_WALK_LRF_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * odt_skims['WLK_LRF_WLK_FAR'],util_WALK_LRF_Fare,15.14629627549506,15.14629627549506,15.14629627549506,15.14629627549506,15.14629627549506,15.14629627549506,15.14629627549506,0.0,15.14629627549506,15.14629627549506,15.14629627549506,0.0,15.14629627549506,15.14629627549506,15.14629627549506
@density_index_multiplier * df.density_index # (3),util_WALK_LRF_Destination_zone_densityIndex,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217
@topology_trn_multiplier * df.trip_topology # (2),util_WALK_LRF_Topology,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005
walk_express_available == False,util_WALK_EXP_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@odt_skims['WLK_EXP_WLK_TOTIVT']/100,util_WALK_EXP_In_vehicle_time,1.4164999723434448,1.4164999723434448,1.4164999723434448,1.4164999723434448,3.4697000980377197,6.060100078582764,6.7967000007629395,8.101900100708008,5.581599712371826,2.5078001022338867,1.3364999294281006,0.0,0.6072999835014343,0.3646000027656555,2.965700149536133
@(ivt_exp_multiplier - 1) * odt_skims['WLK_EXP_WLK_KEYIVT']/100,util_WALK_EXP_In_vehicle_time_on_Express_bus,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@coef_short_iwait_multiplier * (odt_skims['WLK_EXP_WLK_IWAIT']/100).clip(upper=waitThresh),util_WALK_EXP_Short_iwait_time,1.51419997215271,1.51419997215271,1.51419997215271,1.51419997215271,1.6341999769210815,3.3742001056671143,3.0942001342773438,3.0942001342773438,4.154200077056885,4.154200077056885,4.154200077056885,0.0,4.154200077056885,5.034200191497803,5.034200191497803
@coef_long_iwait_multiplier * (odt_skims['WLK_EXP_WLK_IWAIT']/100-waitThresh).clip(0),util_WALK_EXP_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@coef_xwait_multiplier * odt_skims['WLK_EXP_WLK_XWAIT']/100,util_WALK_EXP_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xfers_wlk_multiplier * (odt_skims['WLK_EXP_WLK_BOARDS']-1).clip(0),util_WALK_EXP_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@coef_wacc_multiplier * df.origin_walk_time # (3),util_WALK_EXP_Walk_access_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@coef_wegr_multiplier * df.destination_walk_time # (3),util_WALK_EXP_Walk_egress_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@coef_waux_multiplier * odt_skims['WLK_EXP_WLK_WAUX']/100,util_WALK_EXP_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * odt_skims['WLK_EXP_WLK_FAR'],util_WALK_EXP_Fare,15.14629627549506,15.14629627549506,15.14629627549506,15.14629627549506,15.14629627549506,15.14629627549506,15.14629627549506,15.14629627549506,15.14629627549506,15.14629627549506,15.14629627549506,0.0,15.14629627549506,15.14629627549506,15.14629627549506
@density_index_multiplier * df.density_index # (4),util_WALK_EXP_Destination_zone_densityIndex,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217
@topology_trn_multiplier * df.trip_topology # (3),util_WALK_EXP_Topology,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005
walk_heavyrail_available == False,util_WALK_HVY_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@odt_skims['WLK_HVY_WLK_TOTIVT']/100,util_WALK_HVY_In_vehicle_time,1.4164999723434448,1.4164999723434448,1.4164999723434448,1.4164999723434448,3.4697000980377197,6.060100078582764,6.7967000007629395,4.71750020980835,5.581599712371826,2.5078001022338867,1.3364999294281006,0.0,0.6072999835014343,0.3646000027656555,2.965700149536133
@(ivt_hvy_multiplier-1) * odt_skims['WLK_HVY_WLK_KEYIVT']/100,util_WALK_HVY_In_vehicle_time_on_heavy_rail,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.9434999823570251,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@coef_short_iwait_multiplier * (odt_skims['WLK_HVY_WLK_IWAIT']/100).clip(upper=waitThresh),util_WALK_HVY_Short_iwait_time,1.51419997215271,1.51419997215271,1.51419997215271,1.51419997215271,1.6341999769210815,3.3742001056671143,3.0942001342773438,4.192399978637695,4.154200077056885,4.154200077056885,4.154200077056885,0.0,4.154200077056885,5.034200191497803,5.034200191497803
@coef_long_iwait_multiplier * (odt_skims['WLK_HVY_WLK_IWAIT']/100-waitThresh).clip(0),util_WALK_HVY_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@coef_xwait_multiplier * odt_skims['WLK_HVY_WLK_XWAIT']/100,util_WALK_HVY_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xfers_wlk_multiplier * (odt_skims['WLK_HVY_WLK_BOARDS']-1).clip(0),util_WALK_HVY_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@coef_wacc_multiplier * df.origin_walk_time # (4),util_WALK_HVY_Walk_access_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@coef_wegr_multiplier * df.destination_walk_time # (4),util_WALK_HVY_Walk_egress_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@coef_waux_multiplier * odt_skims['WLK_HVY_WLK_WAUX']/100,util_WALK_HVY_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * odt_skims['WLK_HVY_WLK_FAR'],util_WALK_HVY_Fare,15.14629627549506,15.14629627549506,15.14629627549506,15.14629627549506,15.14629627549506,15.14629627549506,15.14629627549506,12.854422496966201,15.14629627549506,15.14629627549506,15.14629627549506,0.0,15.14629627549506,15.14629627549506,15.14629627549506
@density_index_multiplier * df.density_index # (5),util_WALK_HVY_Destination_zone_densityIndex,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217
@topology_trn_multiplier * df.trip_topology # (4),util_WALK_HVY_Topology,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005
walk_commuter_available == False,util_WALK_COM_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@odt_skims['WLK_COM_WLK_TOTIVT']/100,util_WALK_COM_In_vehicle_time,1.4164999723434448,1.4164999723434448,1.4164999723434448,1.4164999723434448,3.4697000980377197,6.060100078582764,6.7967000007629395,8.101900100708008,5.581599712371826,2.5078001022338867,1.3364999294281006,0.0,0.6072999835014343,0.3646000027656555,2.965700149536133
@(ivt_com_multiplier - 1) * odt_skims['WLK_COM_WLK_KEYIVT']/100,util_WALK_COM_In_vehicle_time_on_commuter_rail,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@coef_short_iwait_multiplier * (odt_skims['WLK_COM_WLK_IWAIT']/100).clip(upper=waitThresh),util_WALK_COM_Short_iwait_time,1.51419997215271,1.51419997215271,1.51419997215271,1.51419997215271,1.6341999769210815,3.3742001056671143,3.0942001342773438,3.0942001342773438,4.154200077056885,4.154200077056885,4.154200077056885,0.0,4.154200077056885,5.034200191497803,5.034200191497803
@coef_long_iwait_multiplier * (odt_skims['WLK_COM_WLK_IWAIT']/100-waitThresh).clip(0),util_WALK_COM_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@coef_xwait_multiplier * odt_skims['WLK_COM_WLK_XWAIT']/100,util_WALK_COM_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xfers_wlk_multiplier * (odt_skims['WLK_COM_WLK_BOARDS']-1).clip(0),util_WALK_COM_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@coef_wacc_multiplier * df.origin_walk_time # (5),util_WALK_COM_Walk_access_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@coef_wegr_multiplier * df.destination_walk_time # (5),util_WALK_COM_Walk_egress_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@coef_waux_multiplier * odt_skims['WLK_COM_WLK_WAUX']/100,util_WALK_COM_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * odt_skims['WLK_COM_WLK_FAR'],util_WALK_COM_Fare,15.14629627549506,15.14629627549506,15.14629627549506,15.14629627549506,15.14629627549506,15.14629627549506,15.14629627549506,15.14629627549506,15.14629627549506,15.14629627549506,15.14629627549506,0.0,15.14629627549506,15.14629627549506,15.14629627549506
@density_index_multiplier * df.density_index # (6),util_WALK_COM_Destination_zone_densityIndex,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217
@topology_trn_multiplier * df.trip_topology # (5),util_WALK_COM_Topology,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005
auto_ownership == 0 # (3),util_DRIVE_LOC_Unavailable_for_zero_auto_households,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (3),util_DRIVE_LOC_Unavailable_for_persons_less_than_16,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@density_index_multiplier * df.density_index # (7),util_DRIVE_LOC_Destination_zone_densityIndex,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217
@topology_trn_multiplier * df.trip_topology # (6),util_DRIVE_LOC_Topology,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005
outbound & ~drive_local_available_outbound,util_DRIVE_LOC_outbound_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0
@df.outbound * odt_skims['DRV_LOC_WLK_TOTIVT']/100,util_DRIVE_LOC_outbound_In_vehicle_time,1.4164999723434448,1.4164999723434448,1.4164999723434448,1.4164999723434448,1.4164999723434448,3.4697000980377197,3.4697000980377197,5.644799709320068,3.4697000980377197,1.4164999723434448,1.4164999723434448,0.0,1.4164999723434448,1.4164999723434448,1.4164999723434448
@df.outbound * coef_short_iwait_multiplier * (odt_skims['DRV_LOC_WLK_IWAIT']/100).clip(upper=waitThresh),util_DRIVE_LOC_outbound_Short_iwait_time,1.51419997215271,1.51419997215271,1.51419997215271,1.51419997215271,1.51419997215271,1.6341999769210815,1.6341999769210815,3.0942001342773438,1.6341999769210815,1.51419997215271,1.51419997215271,0.0,1.51419997215271,1.51419997215271,1.51419997215271
@df.outbound * coef_long_iwait_multiplier * (odt_skims['DRV_LOC_WLK_IWAIT']/100-waitThresh).clip(0),util_DRIVE_LOC_outbound_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * coef_xwait_multiplier * odt_skims['DRV_LOC_WLK_XWAIT']/100,util_DRIVE_LOC_outbound_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * xfers_wlk_multiplier * (odt_skims['DRV_LOC_WLK_BOARDS']-1).clip(0),util_DRIVE_LOC_outbound_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * coef_dtim_multiplier * odt_skims['DRV_LOC_WLK_DTIM']/100,util_DRIVE_LOC_outbound_Drive_time,1.02,1.32,2.52,1.2,2.52,2.58,3.3,3.6,3.48,2.4,1.38,0.0,2.4,2.64,4.2
@df.outbound * coef_wegr_multiplier * df.destination_walk_time,util_DRIVE_LOC_outbound_Walk_egress_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@df.outbound * coef_waux_multiplier * odt_skims['DRV_LOC_WLK_WAUX']/100,util_DRIVE_LOC_outbound_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * ivt_cost_multiplier * df.ivot * (odt_skims['DRV_LOC_WLK_FAR'] + costPerMile*odt_skims['DRV_LOC_WLK_DDIST']/100),util_DRIVE_LOC_outbound_Fare_and_operating_cost,15.456127587408991,15.547254980497007,15.911761511873536,15.510804327359352,15.911761511873536,15.929987598686244,16.148691517512162,16.239818910600178,16.203368257462525,15.875310858735883,15.565479546821951,0.0,15.875310858735883,15.948213685498953,16.42207217628844
@df.outbound * dacc_ratio_multiplier * (odt_skims['DRV_LOC_WLK_DDIST']/100)/ (od_skims['DIST']),util_DRIVE_LOC_outbound_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
inbound & ~drive_local_available_inbound,util_DRIVE_LOC_inbound_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * odt_skims['WLK_LOC_DRV_TOTIVT']/100,util_DRIVE_LOC_inbound_In_vehicle_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * coef_short_iwait_multiplier * (odt_skims['WLK_LOC_DRV_IWAIT']/100).clip(upper=waitThresh),util_DRIVE_LOC_inbound_Short_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * coef_long_iwait_multiplier * (odt_skims['WLK_LOC_DRV_IWAIT']/100-waitThresh).clip(0),util_DRIVE_LOC_inbound_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * coef_xwait_multiplier * odt_skims['WLK_LOC_DRV_XWAIT']/100,util_DRIVE_LOC_inbound_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * xfers_wlk_multiplier * (odt_skims['WLK_LOC_DRV_BOARDS']-1).clip(0),util_DRIVE_LOC_inbound_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * coef_dtim_multiplier * odt_skims['WLK_LOC_DRV_DTIM']/100,util_DRIVE_LOC_inbound_Drive_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * coef_wacc_multiplier * df.origin_walk_time,util_DRIVE_LOC_inbound_Walk_access_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * coef_waux_multiplier * odt_skims['WLK_LOC_DRV_WAUX']/100,util_DRIVE_LOC_inbound_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * ivt_cost_multiplier * df.ivot * (odt_skims['WLK_LOC_DRV_FAR'] + costPerMile*odt_skims['WLK_LOC_DRV_DDIST']/100),util_DRIVE_LOC_inbound_Fare_and_operating_cost,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * dacc_ratio_multiplier * (odt_skims['WLK_LOC_DRV_DDIST']/100)/ (od_skims['DIST']),util_DRIVE_LOC_inbound_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
auto_ownership == 0 # (4),util_DRIVE_LRF_Unavailable_for_zero_auto_households,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (4),util_DRIVE_LRF_Unavailable_for_persons_less_than_16,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@density_index_multiplier * df.density_index # (8),util_DRIVE_LRF_Destination_zone_densityIndex,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217
@topology_trn_multiplier * df.trip_topology # (7),util_DRIVE_LRF_Topology,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005
outbound & ~drive_lrf_available_outbound,util_DRIVE_LRF_outbound_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@df.outbound * odt_skims['DRV_LRF_WLK_TOTIVT']/100,util_DRIVE_LRF_outbound_In_vehicle_time,38.324398040771484,38.324398040771484,38.324398040771484,38.324398040771484,38.324398040771484,38.324398040771484,38.324398040771484,38.324398040771484,38.324398040771484,38.324398040771484,38.324398040771484,0.0,38.324398040771484,38.324398040771484,38.324398040771484
@df.outbound * (coef_ivt_lrt_multiplier - 1)*odt_skims['DRV_LRF_WLK_KEYIVT']/100,util_DRIVE_LRF_outbound_In_vehicle_time_on_LR,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * (coef_ivt_ferry_multiplier-coef_ivt_lrt_multiplier)*odt_skims['DRV_LRF_WLK_FERRYIVT']/100,util_DRIVE_LRF_outbound_In_vehicle_time_on_Ferry,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * coef_short_iwait_multiplier * (odt_skims['DRV_LRF_WLK_IWAIT']/100).clip(upper=waitThresh),util_DRIVE_LRF_outbound_Short_iwait_time,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,0.0,20.0,20.0,20.0
@df.outbound * coef_long_iwait_multiplier * (odt_skims['DRV_LRF_WLK_IWAIT']/100-waitThresh).clip(0),util_DRIVE_LRF_outbound_Long_iwait_time,5.006400108337402,5.006400108337402,5.006400108337402,5.006400108337402,5.006400108337402,5.006400108337402,5.006400108337402,5.006400108337402,5.006400108337402,5.006400108337402,5.006400108337402,0.0,5.006400108337402,5.006400108337402,5.006400108337402
@df.outbound * coef_xwait_multiplier * odt_skims['DRV_LRF_WLK_XWAIT']/100,util_DRIVE_LRF_outbound_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * xfers_drv_multiplier * (odt_skims['DRV_LRF_WLK_BOARDS']-1).clip(0),util_DRIVE_LRF_outbound_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * coef_dtim_multiplier * odt_skims['DRV_LRF_WLK_DTIM']/100,util_DRIVE_LRF_outbound_Drive_time,27.18,26.5,27.46,25.1,23.98,24.46,24.36,23.26,21.32,24.36,24.74,0.0,25.16,28.68,28.66
@df.outbound * coef_wegr_multiplier * df.destination_walk_time # (2),util_DRIVE_LRF_outbound_Walk_egress_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@df.outbound * coef_waux_multiplier * odt_skims['DRV_LRF_WLK_WAUX']/100,util_DRIVE_LRF_outbound_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * ivt_cost_multiplier * df.ivot * (odt_skims['DRV_LRF_WLK_FAR'] + costPerMile * odt_skims['DRV_LRF_WLK_DDIST']/100),util_DRIVE_LRF_outbound_Fare_and_operating_cost,30.982748028477012,30.800493242300984,30.745813461375096,30.363082363673623,30.053249531271927,28.558768191164862,28.358291879639413,27.73862925581155,27.647503383211298,30.126153878522757,30.199055184798063,0.0,30.363082363673623,31.401931299803902,31.43838347342932
@df.outbound * dacc_ratio_multiplier * (odt_skims['DRV_LRF_WLK_DDIST']/100) / od_skims['DIST'],util_DRIVE_LRF_outbound_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
inbound & ~drive_lrf_available_inbound,util_DRIVE_LRF_inbound_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * odt_skims['WLK_LRF_DRV_TOTIVT']/100,util_DRIVE_LRF_inbound_In_vehicle_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * (coef_ivt_lrt_multiplier - 1)*odt_skims['WLK_LRF_DRV_KEYIVT']/100,util_DRIVE_LRF_inbound_In_vehicle_time_on_LR,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.inbound * (coef_ivt_ferry_multiplier-coef_ivt_lrt_multiplier)*odt_skims['WLK_LRF_DRV_FERRYIVT']/100,util_DRIVE_LRF_inbound_In_vehicle_time_on_Ferry,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.inbound * coef_short_iwait_multiplier * (odt_skims['WLK_LRF_DRV_IWAIT']/100).clip(upper=waitThresh),util_DRIVE_LRF_inbound_Short_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * coef_long_iwait_multiplier * (odt_skims['WLK_LRF_DRV_IWAIT']/100-waitThresh).clip(0),util_DRIVE_LRF_inbound_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * coef_xwait_multiplier * odt_skims['WLK_LRF_DRV_XWAIT']/100,util_DRIVE_LRF_inbound_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * xfers_drv_multiplier * (odt_skims['WLK_LRF_DRV_BOARDS']-1).clip(0),util_DRIVE_LRF_inbound_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * coef_dtim_multiplier * odt_skims['WLK_LRF_DRV_DTIM']/100,util_DRIVE_LRF_inbound_Drive_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * coef_wacc_multiplier * df.origin_walk_time # (2),util_DRIVE_LRF_inbound_Walk_access_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * coef_waux_multiplier * odt_skims['WLK_LRF_DRV_WAUX']/100,util_DRIVE_LRF_inbound_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * ivt_cost_multiplier * df.ivot * (odt_skims['WLK_LRF_DRV_FAR'] + costPerMile * odt_skims['WLK_LRF_DRV_DDIST']/100),util_DRIVE_LRF_inbound_Fare_and_operating_cost,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * dacc_ratio_multiplier * (odt_skims['WLK_LRF_DRV_DDIST']/100)/ od_skims['DIST'],util_DRIVE_LRF_inbound_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
auto_ownership == 0 # (5),util_DRIVE_EXP_Unavailable_for_zero_auto_households,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (5),util_DRIVE_EXP_Unavailable_for_persons_less_than_16,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@density_index_multiplier * df.density_index # (9),util_DRIVE_EXP_Destination_zone_densityIndex,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217
@topology_trn_multiplier * df.trip_topology # (8),util_DRIVE_EXP_Topology,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005
outbound & ~drive_express_available_outbound,util_DRIVE_EXP_outbound_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@df.outbound * odt_skims['DRV_EXP_WLK_TOTIVT']/100,util_DRIVE_EXP_outbound_In_vehicle_time,38.324398040771484,38.324398040771484,38.324398040771484,38.324398040771484,38.324398040771484,38.324398040771484,38.324398040771484,38.324398040771484,38.324398040771484,38.324398040771484,38.324398040771484,0.0,38.324398040771484,38.324398040771484,38.324398040771484
@df.outbound * (ivt_exp_multiplier - 1) * odt_skims['DRV_EXP_WLK_KEYIVT']/100,util_DRIVE_EXP_outbound_In_vehicle_time_on_EXP,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * coef_short_iwait_multiplier * (odt_skims['DRV_EXP_WLK_IWAIT']/100).clip(upper=waitThresh),util_DRIVE_EXP_outbound_Short_iwait_time,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,0.0,20.0,20.0,20.0
@df.outbound * coef_long_iwait_multiplier * (odt_skims['DRV_EXP_WLK_IWAIT']/100-waitThresh).clip(0),util_DRIVE_EXP_outbound_Long_iwait_time,5.006400108337402,5.006400108337402,5.006400108337402,5.006400108337402,5.006400108337402,5.006400108337402,5.006400108337402,5.006400108337402,5.006400108337402,5.006400108337402,5.006400108337402,0.0,5.006400108337402,5.006400108337402,5.006400108337402
@df.outbound * coef_xwait_multiplier * odt_skims['DRV_EXP_WLK_XWAIT']/100,util_DRIVE_EXP_outbound_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * xfers_drv_multiplier * (odt_skims['DRV_EXP_WLK_BOARDS']-1).clip(0),util_DRIVE_EXP_outbound_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * coef_dtim_multiplier * odt_skims['DRV_EXP_WLK_DTIM']/100,util_DRIVE_EXP_outbound_Drive_time,27.18,26.5,27.46,25.1,23.98,24.46,24.36,23.26,21.32,24.36,24.74,0.0,25.16,28.68,28.66
@df.outbound * coef_wegr_multiplier * df.destination_walk_time # (3),util_DRIVE_EXP_outbound_Walk_egress_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@df.outbound * coef_waux_multiplier * odt_skims['DRV_EXP_WLK_WAUX']/100,util_DRIVE_EXP_outbound_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * ivt_cost_multiplier * df.ivot * (odt_skims['DRV_EXP_WLK_FAR'] + costPerMile * odt_skims['DRV_EXP_WLK_DDIST']/100),util_DRIVE_EXP_outbound_Fare_and_operating_cost,30.982748028477012,30.800493242300984,30.745813461375096,30.363082363673623,30.053249531271927,28.558768191164862,28.358291879639413,27.73862925581155,27.647503383211298,30.126153878522757,30.199055184798063,0.0,30.363082363673623,31.401931299803902,31.43838347342932
@df.outbound * dacc_ratio_multiplier * (odt_skims['DRV_EXP_WLK_DDIST']/100) / od_skims['DIST'],util_DRIVE_EXP_outbound_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
inbound & ~drive_express_available_inbound,util_DRIVE_EXP_inbound_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * odt_skims['WLK_EXP_DRV_TOTIVT']/100,util_DRIVE_EXP_inbound_In_vehicle_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * (ivt_exp_multiplier - 1) * odt_skims['WLK_EXP_DRV_KEYIVT']/100,util_DRIVE_EXP_inbound_In_vehicle_time_on_EXP,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.inbound * coef_short_iwait_multiplier * (odt_skims['WLK_EXP_DRV_IWAIT']/100).clip(upper=waitThresh),util_DRIVE_EXP_inbound_Short_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * coef_long_iwait_multiplier * (odt_skims['WLK_EXP_DRV_IWAIT']/100-waitThresh).clip(0),util_DRIVE_EXP_inbound_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * coef_xwait_multiplier * odt_skims['WLK_EXP_DRV_XWAIT']/100,util_DRIVE_EXP_inbound_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * xfers_drv_multiplier * (odt_skims['WLK_EXP_DRV_BOARDS']-1).clip(0),util_DRIVE_EXP_inbound_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * coef_dtim_multiplier * odt_skims['WLK_EXP_DRV_DTIM']/100,util_DRIVE_EXP_inbound_Drive_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * coef_wacc_multiplier * df.origin_walk_time # (3),util_DRIVE_EXP_inbound_Walk_access_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * coef_waux_multiplier * odt_skims['WLK_EXP_DRV_WAUX']/100,util_DRIVE_EXP_inbound_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * ivt_cost_multiplier * df.ivot * (odt_skims['WLK_EXP_DRV_FAR'] + costPerMile * odt_skims['WLK_EXP_DRV_DDIST']/100),util_DRIVE_EXP_inbound_Fare_and_operating_cost,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * dacc_ratio_multiplier * (odt_skims['WLK_EXP_DRV_DDIST']/100) / od_skims['DIST'],util_DRIVE_EXP_inbound_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
auto_ownership == 0 # (6),util_DRIVE_HVY_Unavailable_for_zero_auto_households,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (6),util_DRIVE_HVY_Unavailable_for_persons_less_than_16,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@density_index_multiplier * df.density_index # (10),util_DRIVE_HVY_Destination_zone_densityIndex,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217
@topology_trn_multiplier * df.trip_topology # (9),util_DRIVE_HVY_Topology,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005
outbound & ~drive_heavyrail_available_outbound,util_DRIVE_HVY_outbound_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@df.outbound * odt_skims['DRV_HVY_WLK_TOTIVT']/100,util_DRIVE_HVY_outbound_In_vehicle_time,20.44260025024414,20.44260025024414,20.44260025024414,20.44260025024414,20.44260025024414,20.44260025024414,20.44260025024414,20.44260025024414,20.44260025024414,20.44260025024414,20.44260025024414,0.0,20.44260025024414,20.44260025024414,20.44260025024414
@df.outbound * (ivt_hvy_multiplier - 1) * odt_skims['DRV_HVY_WLK_KEYIVT']/100,util_DRIVE_HVY_outbound_In_vehicle_time_on_HVY,-4.0885200195312486,-4.0885200195312486,-4.0885200195312486,-4.0885200195312486,-4.0885200195312486,-4.0885200195312486,-4.0885200195312486,-4.0885200195312486,-4.0885200195312486,-4.0885200195312486,-4.0885200195312486,-0.0,-4.0885200195312486,-4.0885200195312486,-4.0885200195312486
@df.outbound * coef_short_iwait_multiplier * (odt_skims['DRV_HVY_WLK_IWAIT']/100).clip(upper=waitThresh),util_DRIVE_HVY_outbound_Short_iwait_time,4.192399978637695,4.192399978637695,4.192399978637695,4.192399978637695,4.192399978637695,4.192399978637695,4.192399978637695,4.192399978637695,4.192399978637695,4.192399978637695,4.192399978637695,0.0,4.192399978637695,4.192399978637695,4.192399978637695
@df.outbound * coef_long_iwait_multiplier * (odt_skims['DRV_HVY_WLK_IWAIT']/100-waitThresh).clip(0),util_DRIVE_HVY_outbound_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * coef_xwait_multiplier * odt_skims['DRV_HVY_WLK_XWAIT']/100,util_DRIVE_HVY_outbound_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * xfers_drv_multiplier * (odt_skims['DRV_HVY_WLK_BOARDS']-1).clip(0),util_DRIVE_HVY_outbound_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * coef_dtim_multiplier * odt_skims['DRV_HVY_WLK_DTIM']/100,util_DRIVE_HVY_outbound_Drive_time,27.92,27.22,28.18,25.78,24.7,25.18,25.04,23.96,22.02,25.06,25.44,0.0,25.84,29.36,29.34
@df.outbound * coef_wegr_multiplier * df.destination_walk_time # (4),util_DRIVE_HVY_outbound_Walk_egress_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@df.outbound * coef_waux_multiplier * odt_skims['DRV_HVY_WLK_WAUX']/100,util_DRIVE_HVY_outbound_Walk_other_time,12.0,12.0,12.0,12.0,12.0,12.0,12.0,12.0,12.0,12.0,12.0,0.0,12.0,12.0,12.0
@df.outbound * ivt_cost_multiplier * df.ivot * (odt_skims['DRV_HVY_WLK_FAR'] + costPerMile * odt_skims['DRV_HVY_WLK_DDIST']/100),util_DRIVE_HVY_outbound_Fare_and_operating_cost,37.77834913408284,37.596097388882335,37.541420648931975,37.1586895512305,36.848856718828806,36.648377366327836,36.44789801382686,35.828235389998994,35.737106476423214,36.92175802510411,36.99465933137942,0.0,38.36156262526082,38.19753544638526,38.233984579035145
@df.outbound * dacc_ratio_multiplier * (odt_skims['DRV_HVY_WLK_DDIST']/100) / od_skims['DIST'],util_DRIVE_HVY_outbound_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
inbound & ~drive_heavyrail_available_inbound,util_DRIVE_HVY_inbound_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * odt_skims['WLK_HVY_DRV_TOTIVT']/100,util_DRIVE_HVY_inbound_In_vehicle_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * (ivt_hvy_multiplier - 1) * odt_skims['WLK_HVY_DRV_KEYIVT']/100,util_DRIVE_HVY_inbound_In_vehicle_time_on_HVY,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.inbound * coef_short_iwait_multiplier * (odt_skims['WLK_HVY_DRV_IWAIT']/100).clip(upper=waitThresh),util_DRIVE_HVY_inbound_Short_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * coef_long_iwait_multiplier * (odt_skims['WLK_HVY_DRV_IWAIT']/100-waitThresh).clip(0),util_DRIVE_HVY_inbound_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * coef_xwait_multiplier * odt_skims['WLK_HVY_DRV_XWAIT']/100,util_DRIVE_HVY_inbound_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * xfers_drv_multiplier * (odt_skims['WLK_HVY_DRV_BOARDS']-1).clip(0),util_DRIVE_HVY_inbound_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * coef_dtim_multiplier * odt_skims['DRV_HVY_WLK_DTIM']/100 # (2),util_DRIVE_HVY_inbound_Drive_time,27.92,27.22,28.18,25.78,24.7,25.18,25.04,23.96,22.02,25.06,25.44,0.0,25.84,29.36,29.34
@df.inbound * coef_wacc_multiplier * df.origin_walk_time # (4),util_DRIVE_HVY_inbound_Walk_access_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@coef_waux_multiplier * odt_skims['WLK_HVY_DRV_WAUX']/100,util_DRIVE_HVY_inbound_Walk_other_time,12.0,12.0,12.0,12.0,12.0,12.0,12.0,12.0,12.0,12.0,12.0,0.0,12.0,12.0,12.0
@df.inbound * ivt_cost_multiplier * df.ivot * (odt_skims['WLK_HVY_DRV_FAR'] + costPerMile * odt_skims['WLK_HVY_DRV_DDIST']/100),util_DRIVE_HVY_inbound_Fare_and_operating_cost,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * dacc_ratio_multiplier * (odt_skims['WLK_HVY_DRV_DDIST']/100)/ od_skims['DIST'],util_DRIVE_HVY_inbound_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
auto_ownership == 0 # (7),util_DRIVE_COM_Unavailable_for_zero_auto_households,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (7),util_DRIVE_COM_Unavailable_for_persons_less_than_16,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@density_index_multiplier * df.density_index # (11),util_DRIVE_COM_Destination_zone_densityIndex,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217,-82.42665090347217
@topology_trn_multiplier * df.trip_topology # (10),util_DRIVE_COM_Topology,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005
outbound & ~drive_commuter_available_outbound,util_DRIVE_COM_outbound_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@df.outbound * odt_skims['DRV_COM_WLK_TOTIVT']/100,util_DRIVE_COM_outbound_In_vehicle_time,28.36370086669922,28.36370086669922,28.36370086669922,28.36370086669922,28.36370086669922,28.36370086669922,28.36370086669922,28.36370086669922,28.36370086669922,28.36370086669922,28.36370086669922,0.0,28.36370086669922,28.36370086669922,28.36370086669922
@df.outbound * (ivt_com_multiplier - 1) * odt_skims['DRV_COM_WLK_KEYIVT']/100,util_DRIVE_COM_outbound_In_vehicle_time_on_COM,-4.7208398437499985,-4.7208398437499985,-4.7208398437499985,-4.7208398437499985,-4.7208398437499985,-4.7208398437499985,-4.7208398437499985,-4.7208398437499985,-4.7208398437499985,-4.7208398437499985,-4.7208398437499985,-0.0,-4.7208398437499985,-4.7208398437499985,-4.7208398437499985
@df.outbound * coef_short_iwait_multiplier * (odt_skims['DRV_COM_WLK_IWAIT']/100).clip(upper=waitThresh),util_DRIVE_COM_outbound_Short_iwait_time,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,0.0,20.0,20.0,20.0
@df.outbound * coef_long_iwait_multiplier * (odt_skims['DRV_COM_WLK_IWAIT']/100-waitThresh).clip(0),util_DRIVE_COM_outbound_Long_iwait_time,15.023300170898438,15.023300170898438,15.023300170898438,15.023300170898438,15.023300170898438,15.023300170898438,15.023300170898438,15.023300170898438,15.023300170898438,15.023300170898438,15.023300170898438,0.0,15.023300170898438,15.023300170898438,15.023300170898438
@df.outbound * coef_xwait_multiplier * odt_skims['DRV_COM_WLK_XWAIT']/100,util_DRIVE_COM_outbound_transfer_wait_time,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,0.0,3.0,3.0,3.0
@df.outbound * xfers_drv_multiplier * (odt_skims['DRV_COM_WLK_BOARDS']-1).clip(0),util_DRIVE_COM_outbound_number_of_transfers,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,0.0,15.0,15.0,15.0
@df.outbound * coef_dtim_multiplier * odt_skims['DRV_COM_WLK_DTIM']/100,util_DRIVE_COM_outbound_Drive_time,35.88,35.24,36.16,33.76,32.66,33.16,33.02,31.9,30.0,33.04,33.4,0.0,33.84,37.34,37.32
@df.outbound * coef_wegr_multiplier * df.destination_walk_time # (5),util_DRIVE_COM_outbound_Walk_egress_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@df.outbound * coef_waux_multiplier * odt_skims['DRV_COM_WLK_WAUX']/100,util_DRIVE_COM_outbound_Walk_other_time,6.0,6.0,6.0,6.0,6.0,6.0,6.0,6.0,6.0,6.0,6.0,0.0,6.0,6.0,6.0
@df.outbound * ivt_cost_multiplier * df.ivot * (odt_skims['DRV_COM_WLK_FAR'] + costPerMile * odt_skims['DRV_COM_WLK_DDIST']/100),util_DRIVE_COM_outbound_Fare_and_operating_cost,47.409872785601245,47.22761495844969,47.172941259474854,46.79020712079785,46.480377329371684,44.98589598926462,44.78541663676365,44.165754012935786,44.074628140335534,46.55327863564699,46.626182982897824,0.0,46.79020712079785,47.82905605692814,47.86550518957803
@df.outbound * dacc_ratio_multiplier * (odt_skims['DRV_COM_WLK_DDIST']/100) / od_skims['DIST'],util_DRIVE_COM_outbound_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
inbound & ~drive_commuter_available_inbound,util_DRIVE_COM_inbound_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * odt_skims['WLK_COM_DRV_TOTIVT']/100,util_DRIVE_COM_inbound_In_vehicle_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * (ivt_com_multiplier - 1) * odt_skims['WLK_COM_DRV_KEYIVT']/100,util_DRIVE_COM_inbound_In_vehicle_time_on_COM,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.inbound * coef_short_iwait_multiplier * (odt_skims['WLK_COM_DRV_IWAIT']/100).clip(upper=waitThresh),util_DRIVE_COM_inbound_Short_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * coef_long_iwait_multiplier * (odt_skims['WLK_COM_DRV_IWAIT']/100-waitThresh).clip(0),util_DRIVE_COM_inbound_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * coef_xwait_multiplier * odt_skims['WLK_COM_DRV_XWAIT']/100,util_DRIVE_COM_inbound_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * xfers_drv_multiplier * (odt_skims['WLK_COM_DRV_BOARDS']-1).clip(0),util_DRIVE_COM_inbound_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * coef_dtim_multiplier * odt_skims['WLK_COM_DRV_DTIM']/100,util_DRIVE_COM_inbound_Drive_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * coef_wacc_multiplier * df.origin_walk_time # (5),util_DRIVE_COM_inbound_Walk_access_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * coef_waux_multiplier * odt_skims['WLK_COM_DRV_WAUX']/100,util_DRIVE_COM_inbound_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * ivt_cost_multiplier * df.ivot * (odt_skims['WLK_COM_DRV_FAR'] + costPerMile * odt_skims['WLK_COM_DRV_DDIST']/100),util_DRIVE_COM_inbound_Fare_and_operating_cost,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * dacc_ratio_multiplier * (odt_skims['WLK_COM_DRV_DDIST']/100) / od_skims['DIST'],util_DRIVE_COM_inbound_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@odt_skims['HOV2TOLL_TIME'] # (2),util_Taxi_In_vehicle_time,0.9700000286102295,1.8600000143051147,2.430000066757202,1.5,2.640000104904175,3.759999990463257,4.179999828338623,5.409999847412109,4.130000114440918,1.6299999952316284,0.7400000095367432,0.3799999952316284,1.059999942779541,1.559999942779541,2.9100000858306885
@ridehail_wait_time_multiplier * df.origTaxiWaitTime,util_Taxi_Wait_time,8.25,8.25,8.25,8.25,8.25,8.25,8.25,8.25,8.25,8.25,8.25,8.25,8.25,8.25,8.25
@ivt_cost_multiplier * df.ivot * odt_skims['HOV2TOLL_VTOLL'],util_Taxi_Tolls,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * odt_skims['HOV2TOLL_BTOLL'],util_Taxi_Bridge_toll,0.04185160682298823,0.07573148042717044,0.09964668602299381,0.06277741171933368,0.10761842518120515,0.13950535805642922,0.15644530228277698,0.2002898379559127,0.12555482343866736,0.06178094580940859,0.03587280839373505,0.016939936802091108,0.04484100752246615,0.06775974720836443,0.12057249388904193
@ivt_cost_multiplier * df.ivot * (Taxi_baseFare + odt_skims['HOV2TOLL_DIST'] * Taxi_costPerMile + odt_skims['HOV2TOLL_TIME'] * Taxi_costPerMinute)*100,util_Taxi_Fare,29.993654773652782,37.068567485645154,41.991110981284784,34.41796531432987,43.80468226341542,51.10878712379103,54.506739915431204,63.29557256703744,47.12291873256643,33.85994630538152,27.93096582615981,24.821991236888685,30.541709836230513,34.706941140936785,46.36560179010881
@odt_skims['HOV2TOLL_TIME'] ,util_TNC_Single_In_vehicle_time,0.9700000286102295,1.8600000143051147,2.430000066757202,1.5,2.640000104904175,3.759999990463257,4.179999828338623,5.409999847412109,4.130000114440918,1.6299999952316284,0.7400000095367432,0.3799999952316284,1.059999942779541,1.559999942779541,2.9100000858306885
@ridehail_wait_time_multiplier * df.origSingleTNCWaitTime,util_TNC_Single_Wait_time,4.500000000000001,4.500000000000001,4.500000000000001,4.500000000000001,4.500000000000001,4.500000000000001,4.500000000000001,4.500000000000001,4.500000000000001,4.500000000000001,4.500000000000001,4.500000000000001,4.500000000000001,4.500000000000001,4.500000000000001
@ivt_cost_multiplier * df.ivot * odt_skims['HOV2TOLL_VTOLL'] # (2),util_TNC_Single_Tolls,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_BTOLL'] + dot_skims['HOV2TOLL_BTOLL']),util_TNC_Single_Bridge_toll,0.0797173440668708,0.13253008480814296,0.1803604959997897,0.12156895979896701,0.19929337204598763,0.2680495911036825,0.304918853528532,0.403569097399222,0.2720354547433828,0.12356189161881719,0.0717456167874701,0.033879873604182216,0.11060782291098041,0.17039583690053883,0.2580849320044316
"@ivt_cost_multiplier * df.ivot * np.maximum(TNC_single_baseFare + odt_skims['HOV2TOLL_DIST'] * TNC_single_costPerMile + odt_skims['HOV2TOLL_TIME'] * TNC_single_costPerMinute, TNC_single_costMinimum) * 100",util_TNC_Single_Cost,71.74561203594584,71.74561203594584,71.74561203594584,71.74561203594584,71.74561203594584,71.74561203594584,71.74561203594584,71.74561203594584,71.74561203594584,71.74561203594584,71.74561203594584,71.74561203594584,71.74561203594584,71.74561203594584,71.74561203594584
@odt_skims['HOV2TOLL_TIME'] * TNC_shared_IVTFactor,util_TNC_Shared_In_vehicle_time,1.4550000429153442,2.7899999618530273,3.6449999809265137,2.25,3.9600000381469727,5.639999866485596,6.2699995040893555,8.114999771118164,6.195000171661377,2.444999933242798,1.1100000143051147,0.5699999928474426,1.5899999141693115,2.3399999141693115,4.365000247955322
@ridehail_wait_time_multiplier * df.origSharedTNCWaitTime,util_TNC_Shared_Wait_time,7.499999999999998,7.499999999999998,7.499999999999998,7.499999999999998,7.499999999999998,7.499999999999998,7.499999999999998,7.499999999999998,7.499999999999998,7.499999999999998,7.499999999999998,7.499999999999998,7.499999999999998,7.499999999999998,7.499999999999998
@ivt_cost_multiplier * df.ivot * odt_skims['HOV2TOLL_VTOLL'] # (3),util_TNC_Shared_Tolls,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_BTOLL'] + dot_skims['HOV2TOLL_BTOLL']) # (2),util_TNC_Shared_Bridge_toll,0.0797173440668708,0.13253008480814296,0.1803604959997897,0.12156895979896701,0.19929337204598763,0.2680495911036825,0.304918853528532,0.403569097399222,0.2720354547433828,0.12356189161881719,0.0717456167874701,0.033879873604182216,0.11060782291098041,0.17039583690053883,0.2580849320044316
"@ivt_cost_multiplier * df.ivot * np.maximum(TNC_shared_baseFare + odt_skims['HOV2TOLL_DIST'] * TNC_shared_costPerMile + odt_skims['HOV2TOLL_TIME']* TNC_shared_costPerMinute, TNC_shared_costMinimum) * 100",util_TNC_Shared_Cost,29.894005806898143,29.894005806898143,29.894005806898143,29.894005806898143,29.894005806898143,31.53120050854375,32.636283887261875,35.6047582799637,30.896453885865004,29.894005806898143,29.894005806898143,29.894005806898143,29.894005806898143,29.894005806898143,29.894005806898143
tour_mode_is_auto,util_tour_mode_is_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
tour_mode_is_walk,util_tour_mode_is_walk,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
tour_mode_is_bike,util_tour_mode_is_bike,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
tour_mode_is_walk_transit,util_tour_mode_is_walk_transit,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
tour_mode_is_drive_transit,util_tour_mode_is_drive_transit,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
tour_mode_is_ride_hail,util_tour_mode_is_ride_hail,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.i_tour_mode.isin(I_SOV_MODES)),util_Drive_Alone_tour_mode_ASC_shared_ride_2_df_is_indiv,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.i_tour_mode.isin(I_SOV_MODES)) # (2),util_Drive_Alone_tour_mode_ASC_shared_ride_3_plus,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.i_tour_mode.isin(I_SOV_MODES)) # (3),util_Drive_Alone_tour_mode_ASC_walk,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.i_tour_mode.isin(I_SR2_MODES)),util_Shared_Ride_2_tour_mode_ASC_shared_ride_2,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.i_tour_mode.isin(I_SR2_MODES)) # (2),util_Shared_Ride_2_tour_mode_ASC_shared_ride_3_plus,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.i_tour_mode.isin(I_SR2_MODES)) # (3),util_Shared_Ride_2_tour_mode_ASC_walk,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.i_tour_mode.isin(I_SR2_MODES)) # (4),util_Shared_Ride_2_tour_mode_ASC_ride_hail,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.i_tour_mode.isin(I_SR3P_MODES)),util_Shared_Ride_3_tour_mode_ASC_shared_ride_2,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.i_tour_mode.isin(I_SR3P_MODES)) # (2),util_Shared_Ride_3_tour_mode_ASC_shared_ride_3_plus,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.i_tour_mode.isin(I_SR3P_MODES)) # (3),util_Shared_Ride_3_tour_mode_ASC_walk,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.i_tour_mode.isin(I_SR3P_MODES)) # (4),util_Shared_Ride_3_tour_mode_ASC_ride_hail,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.is_indiv & (df.i_tour_mode == I_WALK_MODE),util_Walk_tour_mode_ASC_ride_hail,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@df.is_indiv & (df.i_tour_mode == I_BIKE_MODE),util_Bike_tour_mode_ASC_walk,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.is_indiv & (df.i_tour_mode == I_BIKE_MODE) # (2),util_Bike_tour_mode_ASC_ride_hail,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.tour_mode_is_walk_transit & ~df.walk_ferry_available),util_Walk_to_Transit_tour_mode_ASC_light_rail,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.tour_mode_is_walk_transit & df.walk_ferry_available),util_Walk_to_Transit_tour_mode_ASC_ferry,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.tour_mode_is_walk_transit),util_Walk_to_Transit_tour_mode_ASC_express_bus,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.tour_mode_is_walk_transit) # (2),util_Walk_to_Transit_tour_mode_ASC_heavy_rail,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.tour_mode_is_walk_transit) # (3),util_Walk_to_Transit_tour_mode_ASC_commuter_rail,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.tour_mode_is_walk_transit) # (4),util_Walk_to_Transit_tour_mode_ASC_shared_ride_2,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.tour_mode_is_walk_transit) # (5),util_Walk_to_Transit_tour_mode_ASC_shared_ride_3_plus,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.tour_mode_is_walk_transit) # (6),util_Walk_to_Transit_tour_mode_ASC_walk,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.tour_mode_is_walk_transit) # (7),util_Walk_to_Transit_tour_mode_ASC_ride_hail,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.tour_mode_is_drive_transit & ~df.drive_ferry_available),util_Drive_to_Transit_tour_mode_ASC_light_rail_skims_differ,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.tour_mode_is_drive_transit & df.drive_ferry_available),util_Drive_to_Transit_tour_mode_ASC_ferry,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.tour_mode_is_drive_transit),util_Drive_to_Transit_tour_mode_ASC_express_bus,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.tour_mode_is_drive_transit) # (2),util_Drive_to_Transit_tour_mode_ASC_heavy_rail,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.tour_mode_is_drive_transit) # (3),util_Drive_to_Transit_tour_mode_ASC_commuter_rail,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.tour_mode_is_drive_transit) # (4),util_Drive_to_Transit_tour_mode_ASC_ride_hail,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.tour_mode_is_ride_hail),util_Ride_Hail_tour_mode_ASC_shared_ride_2,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.tour_mode_is_ride_hail) # (2),util_Ride_Hail_tour_mode_ASC_shared_ride_3_plus,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.tour_mode_is_ride_hail) # (3),util_Ride_Hail_tour_mode_ASC_walk,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.i_tour_mode.isin(I_RIDE_HAIL_MODES)),util_Ride_Hail_tour_mode_ASC_ride_hail_taxi,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.i_tour_mode.isin(I_RIDE_HAIL_MODES)) # (2),util_Ride_Hail_tour_mode_ASC_ride_hail_single,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & df.i_tour_mode.isin(I_AUTO_MODES)),util_joint_auto_tour_mode_ASC_shared_ride_2,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & df.i_tour_mode.isin(I_AUTO_MODES)) # (2),util_joint_auto_tour_mode_ASC_shared_ride_3_,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & df.i_tour_mode.isin(I_AUTO_MODES)) # (3),util_joint_auto_tour_mode_ASC_walk,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & df.i_tour_mode.isin(I_RIDE_HAIL_MODES)),util_joint_auto_tour_mode_ASC_ride_hail,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & df.i_tour_mode.isin(I_RIDE_HAIL_MODES)) # (2),util_joint_Walk_tour_mode_ASC_ride_hail,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.is_joint & (df.i_tour_mode == I_BIKE_MODE),util_joint_Bike_tour_mode_ASC_walk,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.is_joint & (df.i_tour_mode == I_BIKE_MODE) # (2),util_joint_Bike_tour_mode_ASC_ride_hail,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & df.tour_mode_is_walk_transit & ~df.walk_ferry_available),util_joint_Walk_to_Transit_tour_mode_ASC_light_rail,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & df.tour_mode_is_walk_transit & df.walk_ferry_available),util_joint_Walk_to_Transit_tour_mode_ASC_ferry,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & df.tour_mode_is_walk_transit),util_joint_Walk_to_Transit_tour_mode_ASC_express_bus,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & df.tour_mode_is_walk_transit) # (2),util_joint_Walk_to_Transit_tour_mode_ASC_heavy_rail,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & df.tour_mode_is_walk_transit) # (3),util_joint_Walk_to_Transit_tour_mode_ASC_commuter_rail,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & df.tour_mode_is_walk_transit) # (4),util_joint_Walk_to_Transit_tour_mode_ASC_shared_ride_2,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & df.tour_mode_is_walk_transit) # (5),util_joint_Walk_to_Transit_tour_mode_ASC_shared_ride_3_plus,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & df.tour_mode_is_walk_transit) # (6),util_joint_Walk_to_Transit_tour_mode_ASC_walk,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & df.tour_mode_is_walk_transit) # (7),util_joint_Walk_to_Transit_tour_mode_ASC_ride_hail,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & df.tour_mode_is_drive_transit & ~df.drive_ferry_available),util_joint_Drive_to_Transit_tour_mode_ASC_light_rail_skims_differ,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & df.tour_mode_is_drive_transit & df.drive_ferry_available),util_joint_Drive_to_Transit_tour_mode_ASC_ferry,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & df.tour_mode_is_drive_transit),util_joint_Drive_to_Transit_tour_mode_ASC_express_bus,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & df.tour_mode_is_drive_transit) # (2),util_joint_Drive_to_Transit_tour_mode_ASC_heavy_rail,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & df.tour_mode_is_drive_transit) # (3),util_joint_Drive_to_Transit_tour_mode_ASC_commuter_rail,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & df.tour_mode_is_drive_transit) # (4),util_joint_Drive_to_Transit_tour_mode_ASC_ride_hail,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & df.tour_mode_is_ride_hail),util_joint_Ride_Hail_tour_mode_ASC_shared_ride_2,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & df.tour_mode_is_ride_hail) # (2),util_joint_Ride_Hail_tour_mode_ASC_shared_ride_3_plus,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & df.tour_mode_is_ride_hail) # (3),util_joint_Ride_Hail_tour_mode_ASC_walk,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & df.i_tour_mode.isin(I_RIDE_HAIL_MODES)) # (3),util_joint_Ride_Hail_tour_mode_ASC_ride_hail_taxi,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & df.i_tour_mode.isin(I_RIDE_HAIL_MODES)) # (4),util_joint_Ride_Hail_tour_mode_ASC_ride_hail_single,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.tour_mode_is_walk & (od_skims['DISTWALK'] > 3),util_Walk_not_available_for_long_distances,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.tour_mode_is_walk & (od_skims['DISTBIKE'] > 8),util_Bike_not_available_for_long_distances,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@origin_density_applied*(origin_density_index_multiplier*df.origin_density_index).clip(origin_density_index_max),util_origin_density_index,-15.0,-15.0,-15.0,-15.0,-15.0,-15.0,-15.0,-15.0,-15.0,-15.0,-15.0,-15.0,-15.0,-15.0,-15.0
@walk_express_penalty * ~(df.first_trip | df.first_trip),util_walk_express_penalty,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@adjust_tnc_shared,util_adjust_tnc_shared,30.0,30.0,30.0,30.0,30.0,30.0,30.0,30.0,30.0,30.0,30.0,30.0,30.0,30.0,30.0
