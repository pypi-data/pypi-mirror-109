Expression,Label,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14
sov_available == False,util_DRIVEALONEFREE_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
auto_ownership == 0,util_DRIVEALONEFREE_Unavailable_for_zero_auto_households,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16,util_DRIVEALONEFREE_Unavailable_for_persons_less_than_16,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
is_joint == True,util_DRIVEALONEFREE_Unavailable_for_joint_tours,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
is_atwork_subtour & ~work_tour_is_SOV,util_DRIVEALONEFREE_Unavailable_if_didn't_drive_to_work,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@odt_skims['SOV_TIME'],util_DRIVEALONEFREE_In_vehicle_time,1.6100000143051147,2.0799999237060547,2.6700000762939453,2.1600000858306885,3.0899999141693115,3.9800000190734863,4.610000133514404,5.820000171661377,3.5799999237060547,2.25,1.4900000095367432,1.059999942779541,0.5299999713897705,3.130000114440918,4.21999979019165
@coef_walktimeshort_multiplier * df.total_terminal_time,util_DRIVEALONEFREE_Terminal_time,11.79128,11.69742,11.06462,11.2866,11.0511,10.7087,9.29296,10.45084,9.294780000000001,10.92404,11.02638,11.04294,9.50034,9.87626,9.78226
@ivt_cost_multiplier * df.ivot * costPerMile * odt_skims['SOV_DIST'],util_DRIVEALONEFREE_Operating_cost,0.9294943051728082,1.2028750534559256,1.5491572477091624,1.2393257764409853,1.7496363327587139,2.278172359200696,2.56977836034462,3.2623427488510934,2.1141438885044805,1.2575511379335151,0.8383674433942974,0.6014375267279628,0.3098314441102463,1.8407632488530865,2.369299166663345
@ivt_cost_multiplier * df.ivot * df.total_parking_cost,util_DRIVEALONEFREE_Parking_cost,14.150808443955299,13.434520661983361,10.865623117509418,9.51625851519591,9.51669197828011,15.886548587222094,6.90923714511643,9.02071106150269,5.779507789333641,10.133466102554893,10.06680197137208,11.825696018603182,8.171380006687153,9.51625851519591,11.559015578667282
@ivt_cost_multiplier * df.ivot * odt_skims['SOV_BTOLL'],util_DRIVEALONEFREE_Bridge_toll,0.06576681538851425,0.08469968549530688,0.10861489109113023,0.08669261731515704,0.12057249388904193,0.15744176819270206,0.17637463236008935,0.22619797537158626,0.14747709721464056,0.09067848689426271,0.06377387762925876,0.04484100752246615,0.02291873820104695,0.1315336307770285,0.16640996138202785
sovtoll_available == False,util_DRIVEALONEPAY_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
auto_ownership == 0 # (2),util_DRIVEALONEPAY_Unavailable_for_zero_auto_households,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (2),util_DRIVEALONEPAY_Unavailable_for_persons_less_than_16,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
is_joint == True # (2),util_DRIVEALONEPAY_Unavailable_for_joint_tours,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
is_atwork_subtour & ~work_tour_is_SOV # (2),util_DRIVEALONEPAY_Unavailable_if_didn't_drive_to_work,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@odt_skims['SOVTOLL_TIME'],util_DRIVEALONEPAY_In_vehicle_time,1.6100000143051147,2.0799999237060547,2.6700000762939453,2.1600000858306885,3.0899999141693115,3.9800000190734863,4.610000133514404,5.820000171661377,3.5799999237060547,2.25,1.4900000095367432,1.059999942779541,0.5299999713897705,3.130000114440918,4.21999979019165
@coef_walktimeshort_multiplier * df.total_terminal_time # (2),util_DRIVEALONEPAY_Terminal_time,11.79128,11.69742,11.06462,11.2866,11.0511,10.7087,9.29296,10.45084,9.294780000000001,10.92404,11.02638,11.04294,9.50034,9.87626,9.78226
@ivt_cost_multiplier * df.ivot * costPerMile * odt_skims['SOVTOLL_DIST'],util_DRIVEALONEPAY_Operating_cost,0.9294943051728082,1.2028750534559256,1.5491572477091624,1.2393257764409853,1.7496363327587139,2.278172359200696,2.56977836034462,3.2623427488510934,2.1141438885044805,1.2575511379335151,0.8383674433942974,0.6014375267279628,0.3098314441102463,1.8407632488530865,2.369299166663345
@ivt_cost_multiplier * df.ivot * df.total_parking_cost # (2),util_DRIVEALONEPAY_Parking_cost,14.150808443955299,13.434520661983361,10.865623117509418,9.51625851519591,9.51669197828011,15.886548587222094,6.90923714511643,9.02071106150269,5.779507789333641,10.133466102554893,10.06680197137208,11.825696018603182,8.171380006687153,9.51625851519591,11.559015578667282
@ivt_cost_multiplier * df.ivot * odt_skims['SOVTOLL_BTOLL'],util_DRIVEALONEPAY_Bridge_toll,0.06576681538851425,0.08469968549530688,0.10861489109113023,0.08669261731515704,0.12057249388904193,0.15744176819270206,0.17637463236008935,0.22619797537158626,0.14747709721464056,0.09067848689426271,0.06377387762925876,0.04484100752246615,0.02291873820104695,0.1315336307770285,0.16640996138202785
@ivt_cost_multiplier * df.ivot * odt_skims['SOVTOLL_VTOLL'],util_DRIVEALONEPAY_Value_toll,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
hov2_available == False,util_SHARED2FREE_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
is_joint & (number_of_participants > 2),util_SHARED2FREE_Unavailable_based_on_party_size,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@odt_skims['HOV2_TIME'],util_SHARED2FREE_In_vehicle_time,1.6100000143051147,2.0799999237060547,2.6700000762939453,2.1600000858306885,3.0899999141693115,3.9800000190734863,4.610000133514404,5.820000171661377,3.5799999237060547,2.25,1.4900000095367432,1.059999942779541,0.5299999713897705,3.130000114440918,4.21999979019165
@coef_walktimeshort_multiplier * df.total_terminal_time # (3),util_SHARED2FREE_Terminal_time,11.79128,11.69742,11.06462,11.2866,11.0511,10.7087,9.29296,10.45084,9.294780000000001,10.92404,11.02638,11.04294,9.50034,9.87626,9.78226
@ivt_cost_multiplier * df.ivot * costPerMile * odt_skims['HOV2_DIST'],util_SHARED2FREE_Operating_cost,0.9294943051728082,1.2028750534559256,1.5491572477091624,1.2393257764409853,1.7496363327587139,2.278172359200696,2.56977836034462,3.2623427488510934,2.1141438885044805,1.2575511379335151,0.8383674433942974,0.6014375267279628,0.3098314441102463,1.8407632488530865,2.369299166663345
@ivt_cost_multiplier * df.ivot * df.total_parking_cost / costShareSr2,util_SHARED2FREE_Parking_cost,8.086176253688743,7.676868949704778,6.208927495719668,5.437862008683377,5.438109701874348,9.078027764126912,3.948135511495103,5.154692035144394,3.3025758796192233,5.790552058602796,5.752458269355474,6.757540582058961,4.669360003821231,5.437862008683377,6.6051517592384466
@ivt_cost_multiplier * df.ivot * odt_skims['HOV2_BTOLL'] / costShareSr2,util_SHARED2FREE_Bridge_toll,0.03758103736486529,0.0483998202830325,0.06206565205207442,0.04953863846580402,0.06889856793659539,0.08996672468154403,0.10078550420576535,0.12925598592662071,0.08427262697979461,0.05181627822529298,0.036442215788147866,0.025623432869980655,0.013096421829169686,0.07516207472973058,0.09509140650401592
@(df.hhsize == 1),util_SHARED2FREE_One_person_household,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
hov2toll_available == False,util_SHARED2PAY_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
is_joint & (number_of_participants > 2) # (2),util_SHARED2PAY_Unavailable_based_on_party_size,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@odt_skims['HOV2TOLL_TIME'],util_SHARED2PAY_In_vehicle_time,1.6100000143051147,2.0799999237060547,2.6700000762939453,2.1600000858306885,3.0899999141693115,3.9800000190734863,4.610000133514404,5.820000171661377,3.5799999237060547,2.25,1.4900000095367432,1.059999942779541,0.5299999713897705,3.130000114440918,4.21999979019165
@coef_walktimeshort_multiplier * df.total_terminal_time # (4),util_SHARED2PAY_Terminal_time,11.79128,11.69742,11.06462,11.2866,11.0511,10.7087,9.29296,10.45084,9.294780000000001,10.92404,11.02638,11.04294,9.50034,9.87626,9.78226
@ivt_cost_multiplier * df.ivot * costPerMile * odt_skims['HOV2TOLL_DIST'],util_SHARED2PAY_Operating_cost,0.9294943051728082,1.2028750534559256,1.5491572477091624,1.2393257764409853,1.7496363327587139,2.278172359200696,2.56977836034462,3.2623427488510934,2.1141438885044805,1.2575511379335151,0.8383674433942974,0.6014375267279628,0.3098314441102463,1.8407632488530865,2.369299166663345
@ivt_cost_multiplier * df.ivot * df.total_parking_cost / costShareSr2 # (2),util_SHARED2PAY_Parking_cost,8.086176253688743,7.676868949704778,6.208927495719668,5.437862008683377,5.438109701874348,9.078027764126912,3.948135511495103,5.154692035144394,3.3025758796192233,5.790552058602796,5.752458269355474,6.757540582058961,4.669360003821231,5.437862008683377,6.6051517592384466
@ivt_cost_multiplier * df.ivot * odt_skims['HOV2TOLL_BTOLL'] / costShareSr2,util_SHARED2PAY_Bridge_toll,0.03758103736486529,0.0483998202830325,0.06206565205207442,0.04953863846580402,0.06889856793659539,0.08996672468154403,0.10078550420576535,0.12925598592662071,0.08427262697979461,0.05181627822529298,0.036442215788147866,0.025623432869980655,0.013096421829169686,0.07516207472973058,0.09509140650401592
@ivt_cost_multiplier * df.ivot * odt_skims['HOV2TOLL_VTOLL'] / costShareSr2,util_SHARED2PAY_Value_toll,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.hhsize == 1) # (2),util_SHARED2PAY_One_person_household,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
hov3_available == False,util_SHARED3FREE_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@odt_skims['HOV3_TIME'],util_SHARED3FREE_In_vehicle_time,1.6100000143051147,2.0799999237060547,2.6700000762939453,2.1600000858306885,3.0899999141693115,3.9800000190734863,4.610000133514404,5.820000171661377,3.5799999237060547,2.25,1.4900000095367432,1.059999942779541,0.5299999713897705,3.130000114440918,4.21999979019165
@coef_walktimeshort_multiplier * df.total_terminal_time # (5),util_SHARED3FREE_Terminal_time,11.79128,11.69742,11.06462,11.2866,11.0511,10.7087,9.29296,10.45084,9.294780000000001,10.92404,11.02638,11.04294,9.50034,9.87626,9.78226
@ivt_cost_multiplier * df.ivot * costPerMile * odt_skims['HOV3_DIST'],util_SHARED3FREE_Operating_cost,0.9294943051728082,1.2028750534559256,1.5491572477091624,1.2393257764409853,1.7496363327587139,2.278172359200696,2.56977836034462,3.2623427488510934,2.1141438885044805,1.2575511379335151,0.8383674433942974,0.6014375267279628,0.3098314441102463,1.8407632488530865,2.369299166663345
@ivt_cost_multiplier * df.ivot *  df.total_parking_cost / costShareSr3,util_SHARED3FREE_Parking_cost,5.660323377582119,5.373808264793345,4.346249247003767,3.806503406078364,3.806676791312044,6.354619434888837,2.763694858046572,3.608284424601076,2.3118031157334564,4.053386441021957,4.026720788548832,4.730278407441273,3.2685520026748613,3.806503406078364,4.623606231466913
@ivt_cost_multiplier * df.ivot * odt_skims['HOV3_BTOLL'] / costShareSr3,util_SHARED3FREE_Bridge_toll,0.0263067261554057,0.03387987419812275,0.04344595643645209,0.03467704692606281,0.04822899755561677,0.06297670727708082,0.07054985294403573,0.09047919014863451,0.058990838885856225,0.036271394757705085,0.025509551051703504,0.01793640300898646,0.00916749528041878,0.0526134523108114,0.06656398455281114
@(df.hhsize == 1) # (3),util_SHARED3FREE_One_person_household,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
hov3toll_available == False,util_SHARED3PAY_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@odt_skims['HOV3TOLL_TIME'],util_SHARED3PAY_In_vehicle_time,1.6100000143051147,2.0799999237060547,2.6700000762939453,2.1600000858306885,3.0899999141693115,3.9800000190734863,4.610000133514404,5.820000171661377,3.5799999237060547,2.25,1.4900000095367432,1.059999942779541,0.5299999713897705,3.130000114440918,4.21999979019165
@coef_walktimeshort_multiplier * df.total_terminal_time # (6),util_SHARED3PAY_Terminal_time,11.79128,11.69742,11.06462,11.2866,11.0511,10.7087,9.29296,10.45084,9.294780000000001,10.92404,11.02638,11.04294,9.50034,9.87626,9.78226
@ivt_cost_multiplier * df.ivot * costPerMile * odt_skims['HOV3TOLL_DIST'],util_SHARED3PAY_Operating_cost,0.9294943051728082,1.2028750534559256,1.5491572477091624,1.2393257764409853,1.7496363327587139,2.278172359200696,2.56977836034462,3.2623427488510934,2.1141438885044805,1.2575511379335151,0.8383674433942974,0.6014375267279628,0.3098314441102463,1.8407632488530865,2.369299166663345
@ivt_cost_multiplier * df.ivot * df.total_parking_cost / costShareSr3,util_SHARED3PAY_Parking_cost,5.660323377582119,5.373808264793345,4.346249247003767,3.806503406078364,3.806676791312044,6.354619434888837,2.763694858046572,3.608284424601076,2.3118031157334564,4.053386441021957,4.026720788548832,4.730278407441273,3.2685520026748613,3.806503406078364,4.623606231466913
@ivt_cost_multiplier * df.ivot * odt_skims['HOV3TOLL_BTOLL'] / costShareSr3,util_SHARED3PAY_Bridge_toll,0.0263067261554057,0.03387987419812275,0.04344595643645209,0.03467704692606281,0.04822899755561677,0.06297670727708082,0.07054985294403573,0.09047919014863451,0.058990838885856225,0.036271394757705085,0.025509551051703504,0.01793640300898646,0.00916749528041878,0.0526134523108114,0.06656398455281114
@ivt_cost_multiplier * df.ivot * odt_skims['HOV3TOLL_VTOLL'] / costShareSr3,util_SHARED3PAY_Value_toll,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.hhsize == 1) # (4),util_SHARED3PAY_One_person_household,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@coef_walktimeshort_multiplier * od_skims['DISTWALK'].clip(upper=walkThresh) * 60/walkSpeed,util_WALK_Time_up_to_2_miles,20.399999618530273,26.400001525878906,34.0,27.19999885559082,37.20000076293945,40.0,40.0,40.0,40.0,26.80000114440918,18.399999618530273,13.200000762939453,6.799999713897705,40.0,40.0
@walktimelong_multiplier * (od_skims['DISTWALK'] - walkThresh).clip(lower=0) * 60/walkSpeed,util_WALK_Time_beyond_2_of_a_miles,0.0,0.0,0.0,0.0,0.0,22.000001907348633,38.999996185302734,77.0,13.0,0.0,0.0,0.0,0.0,0.9999990463256836,27.999998092651367
@density_index_multiplier * df.density_index,util_WALK_Destination_zone_densityIndex,-14.350835038737026,-25.893610415911542,-362.7399352849485,-39.47116740267761,-183.76839703803847,-522.661886424999,-467.935283609011,-414.6019334849894,-225.08925295206197,-221.6589288278371,-24.401167455202277,-82.42665090347217,-284.55553789232556,-102.46706959342988,-493.43304843304844
@topology_walk_multiplier * df.trip_topology,util_WALK_Topology,45.0,15.0,15.0,30.0,15.0,15.0,30.0,30.0,45.0,45.0,45.0,45.0,30.0,45.0,15.0
is_atwork_subtour & ~work_tour_is_bike,util_BIKE_Unavailable_if_didn't_bike_to_work,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@coef_biketimeshort_multiplier * od_skims['DISTBIKE'].clip(upper=bikeThresh)*60/bikeSpeed,util_BIKE_Time_up_to_6_miles,10.199999809265137,13.200000762939453,17.0,13.59999942779541,18.600000381469727,24.400001525878906,27.80000114440918,35.39999771118164,22.600000381469727,13.40000057220459,9.199999809265137,6.600000381469727,3.3999998569488525,20.19999885559082,25.599998474121094
@coef_biketimeshort_multiplier * biketimelong_multiplier * (od_skims['DISTBIKE']-bikeThresh).clip(lower=0)*60/bikeSpeed,util_BIKE_Time_beyond_6_of_a_miles,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@density_index_multiplier*df.density_index,util_BIKE_Destination_zone_densityIndex,-14.350835038737026,-25.893610415911542,-362.7399352849485,-39.47116740267761,-183.76839703803847,-522.661886424999,-467.935283609011,-414.6019334849894,-225.08925295206197,-221.6589288278371,-24.401167455202277,-82.42665090347217,-284.55553789232556,-102.46706959342988,-493.43304843304844
@topology_bike_multiplier * df.trip_topology,util_BIKE_Topology,60.0,20.0,20.0,40.0,20.0,20.0,40.0,40.0,60.0,60.0,60.0,60.0,40.0,60.0,20.0
walk_local_available == False,util_WALK_LOC_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0
@odt_skims['WLK_LOC_WLK_TOTIVT']/100,util_WALK_LOC_In_vehicle_time,2.043800115585327,2.408400058746338,4.341599941253662,3.10640025138855,4.341599941253662,5.918799877166748,7.808599948883057,9.143799781799316,5.066900253295898,2.0030999183654785,0.9719000458717346,0.6072999835014343,0.0,1.3864998817443848,8.486599922180176
@coef_short_iwait_multiplier * (odt_skims['WLK_LOC_WLK_IWAIT']/100).clip(upper=waitThresh),util_WALK_LOC_Short_iwait_time,3.3742001056671143,4.154200077056885,1.8741999864578247,2.5341999530792236,1.8741999864578247,3.3742001056671143,4.154200077056885,4.154200077056885,4.214200019836426,4.214200019836426,4.214200019836426,4.154200077056885,0.0,4.154200077056885,7.5341997146606445
@coef_long_iwait_multiplier * (odt_skims['WLK_LOC_WLK_IWAIT']/100-waitThresh).clip(0),util_WALK_LOC_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@coef_xwait_multiplier * odt_skims['WLK_LOC_WLK_XWAIT']/100,util_WALK_LOC_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xfers_wlk_multiplier * (odt_skims['WLK_LOC_WLK_BOARDS']-1).clip(0),util_WALK_LOC_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@coef_wacc_multiplier * df.origin_walk_time,util_WALK_LOC_Walk_access_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@coef_wegr_multiplier * df.destination_walk_time,util_WALK_LOC_Walk_egress_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@coef_waux_multiplier * odt_skims['WLK_LOC_WLK_WAUX']/100,util_WALK_LOC_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * odt_skims['WLK_LOC_WLK_FAR'],util_WALK_LOC_Fare,15.14629627549506,15.14629627549506,15.14629627549506,15.14629627549506,15.14629627549506,15.14629627549506,15.14629627549506,15.14629627549506,15.14629627549506,15.14629627549506,15.14629627549506,15.14629627549506,0.0,15.14629627549506,15.14629627549506
@density_index_multiplier * df.density_index # (2),util_WALK_LOC_Destination_zone_densityIndex,-14.350835038737026,-25.893610415911542,-362.7399352849485,-39.47116740267761,-183.76839703803847,-522.661886424999,-467.935283609011,-414.6019334849894,-225.08925295206197,-221.6589288278371,-24.401167455202277,-82.42665090347217,-284.55553789232556,-102.46706959342988,-493.43304843304844
@topology_trn_multiplier * df.trip_topology,util_WALK_LOC_Topology,6.6000000000000005,2.2,2.2,4.4,2.2,2.2,4.4,4.4,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,4.4,6.6000000000000005,2.2
walk_lrf_available == False,util_WALK_LRF_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@odt_skims['WLK_LRF_WLK_TOTIVT']/100,util_WALK_LRF_In_vehicle_time,2.043800115585327,2.043800115585327,4.341599941253662,3.10640025138855,4.341599941253662,5.918799877166748,7.808599948883057,6.668300151824951,5.066900253295898,2.0030999183654785,0.9719000458717346,0.6072999835014343,0.0,1.3864998817443848,8.486599922180176
@(coef_ivt_lrt_multiplier-1) * odt_skims['WLK_LRF_WLK_KEYIVT']/100,util_WALK_LRF_In_vehicle_time_on_Light_Rail,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.6668300628662109,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@(coef_ivt_ferry_multiplier-coef_ivt_lrt_multiplier) * odt_skims['WLK_LRF_WLK_FERRYIVT']/100,util_WALK_LRF_In_vehicle_time_on_Ferry,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@coef_short_iwait_multiplier * (odt_skims['WLK_LRF_WLK_IWAIT']/100).clip(upper=waitThresh),util_WALK_LRF_Short_iwait_time,3.3742001056671143,3.3742001056671143,1.8741999864578247,2.5341999530792236,1.8741999864578247,3.3742001056671143,4.154200077056885,2.274600028991699,4.214200019836426,4.214200019836426,4.214200019836426,4.154200077056885,0.0,4.154200077056885,7.5341997146606445
@coef_long_iwait_multiplier * (odt_skims['WLK_LRF_WLK_IWAIT']/100-waitThresh).clip(0),util_WALK_LRF_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@coef_xwait_multiplier * odt_skims['WLK_LRF_WLK_XWAIT']/100,util_WALK_LRF_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xfers_wlk_multiplier * (odt_skims['WLK_LRF_WLK_BOARDS']-1).clip(0),util_WALK_LRF_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@coef_wacc_multiplier * df.origin_walk_time # (2),util_WALK_LRF_Walk_access_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@coef_wegr_multiplier * df.destination_walk_time # (2),util_WALK_LRF_Walk_egress_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@coef_waux_multiplier * odt_skims['WLK_LRF_WLK_WAUX']/100,util_WALK_LRF_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * odt_skims['WLK_LRF_WLK_FAR'],util_WALK_LRF_Fare,15.14629627549506,15.14629627549506,15.14629627549506,15.14629627549506,15.14629627549506,15.14629627549506,15.14629627549506,0.0,15.14629627549506,15.14629627549506,15.14629627549506,15.14629627549506,0.0,15.14629627549506,15.14629627549506
@density_index_multiplier * df.density_index # (3),util_WALK_LRF_Destination_zone_densityIndex,-14.350835038737026,-25.893610415911542,-362.7399352849485,-39.47116740267761,-183.76839703803847,-522.661886424999,-467.935283609011,-414.6019334849894,-225.08925295206197,-221.6589288278371,-24.401167455202277,-82.42665090347217,-284.55553789232556,-102.46706959342988,-493.43304843304844
@topology_trn_multiplier * df.trip_topology # (2),util_WALK_LRF_Topology,6.6000000000000005,2.2,2.2,4.4,2.2,2.2,4.4,4.4,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,4.4,6.6000000000000005,2.2
walk_express_available == False,util_WALK_EXP_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@odt_skims['WLK_EXP_WLK_TOTIVT']/100,util_WALK_EXP_In_vehicle_time,2.043800115585327,2.043800115585327,4.341599941253662,3.10640025138855,4.341599941253662,5.918799877166748,7.808599948883057,9.143799781799316,5.066900253295898,2.0030999183654785,0.9719000458717346,0.6072999835014343,0.0,1.3864998817443848,8.486599922180176
@(ivt_exp_multiplier - 1) * odt_skims['WLK_EXP_WLK_KEYIVT']/100,util_WALK_EXP_In_vehicle_time_on_Express_bus,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@coef_short_iwait_multiplier * (odt_skims['WLK_EXP_WLK_IWAIT']/100).clip(upper=waitThresh),util_WALK_EXP_Short_iwait_time,3.3742001056671143,3.3742001056671143,1.8741999864578247,2.5341999530792236,1.8741999864578247,3.3742001056671143,4.154200077056885,4.154200077056885,4.214200019836426,4.214200019836426,4.214200019836426,4.154200077056885,0.0,4.154200077056885,7.5341997146606445
@coef_long_iwait_multiplier * (odt_skims['WLK_EXP_WLK_IWAIT']/100-waitThresh).clip(0),util_WALK_EXP_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@coef_xwait_multiplier * odt_skims['WLK_EXP_WLK_XWAIT']/100,util_WALK_EXP_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xfers_wlk_multiplier * (odt_skims['WLK_EXP_WLK_BOARDS']-1).clip(0),util_WALK_EXP_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@coef_wacc_multiplier * df.origin_walk_time # (3),util_WALK_EXP_Walk_access_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@coef_wegr_multiplier * df.destination_walk_time # (3),util_WALK_EXP_Walk_egress_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@coef_waux_multiplier * odt_skims['WLK_EXP_WLK_WAUX']/100,util_WALK_EXP_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * odt_skims['WLK_EXP_WLK_FAR'],util_WALK_EXP_Fare,15.14629627549506,15.14629627549506,15.14629627549506,15.14629627549506,15.14629627549506,15.14629627549506,15.14629627549506,15.14629627549506,15.14629627549506,15.14629627549506,15.14629627549506,15.14629627549506,0.0,15.14629627549506,15.14629627549506
@density_index_multiplier * df.density_index # (4),util_WALK_EXP_Destination_zone_densityIndex,-14.350835038737026,-25.893610415911542,-362.7399352849485,-39.47116740267761,-183.76839703803847,-522.661886424999,-467.935283609011,-414.6019334849894,-225.08925295206197,-221.6589288278371,-24.401167455202277,-82.42665090347217,-284.55553789232556,-102.46706959342988,-493.43304843304844
@topology_trn_multiplier * df.trip_topology # (3),util_WALK_EXP_Topology,6.6000000000000005,2.2,2.2,4.4,2.2,2.2,4.4,4.4,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,4.4,6.6000000000000005,2.2
walk_heavyrail_available == False,util_WALK_HVY_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@odt_skims['WLK_HVY_WLK_TOTIVT']/100,util_WALK_HVY_In_vehicle_time,2.043800115585327,2.043800115585327,4.341599941253662,3.10640025138855,4.341599941253662,5.918799877166748,7.808599948883057,4.71750020980835,5.066900253295898,2.0030999183654785,0.9719000458717346,0.6072999835014343,0.0,1.3864998817443848,8.486599922180176
@(ivt_hvy_multiplier-1) * odt_skims['WLK_HVY_WLK_KEYIVT']/100,util_WALK_HVY_In_vehicle_time_on_heavy_rail,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.9434999823570251,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@coef_short_iwait_multiplier * (odt_skims['WLK_HVY_WLK_IWAIT']/100).clip(upper=waitThresh),util_WALK_HVY_Short_iwait_time,3.3742001056671143,3.3742001056671143,1.8741999864578247,2.5341999530792236,1.8741999864578247,3.3742001056671143,4.154200077056885,4.192399978637695,4.214200019836426,4.214200019836426,4.214200019836426,4.154200077056885,0.0,4.154200077056885,7.5341997146606445
@coef_long_iwait_multiplier * (odt_skims['WLK_HVY_WLK_IWAIT']/100-waitThresh).clip(0),util_WALK_HVY_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@coef_xwait_multiplier * odt_skims['WLK_HVY_WLK_XWAIT']/100,util_WALK_HVY_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xfers_wlk_multiplier * (odt_skims['WLK_HVY_WLK_BOARDS']-1).clip(0),util_WALK_HVY_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@coef_wacc_multiplier * df.origin_walk_time # (4),util_WALK_HVY_Walk_access_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@coef_wegr_multiplier * df.destination_walk_time # (4),util_WALK_HVY_Walk_egress_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@coef_waux_multiplier * odt_skims['WLK_HVY_WLK_WAUX']/100,util_WALK_HVY_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * odt_skims['WLK_HVY_WLK_FAR'],util_WALK_HVY_Fare,15.14629627549506,15.14629627549506,15.14629627549506,15.14629627549506,15.14629627549506,15.14629627549506,15.14629627549506,12.854422496966201,15.14629627549506,15.14629627549506,15.14629627549506,15.14629627549506,0.0,15.14629627549506,15.14629627549506
@density_index_multiplier * df.density_index # (5),util_WALK_HVY_Destination_zone_densityIndex,-14.350835038737026,-25.893610415911542,-362.7399352849485,-39.47116740267761,-183.76839703803847,-522.661886424999,-467.935283609011,-414.6019334849894,-225.08925295206197,-221.6589288278371,-24.401167455202277,-82.42665090347217,-284.55553789232556,-102.46706959342988,-493.43304843304844
@topology_trn_multiplier * df.trip_topology # (4),util_WALK_HVY_Topology,6.6000000000000005,2.2,2.2,4.4,2.2,2.2,4.4,4.4,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,4.4,6.6000000000000005,2.2
walk_commuter_available == False,util_WALK_COM_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@odt_skims['WLK_COM_WLK_TOTIVT']/100,util_WALK_COM_In_vehicle_time,2.043800115585327,2.043800115585327,4.341599941253662,3.10640025138855,4.341599941253662,5.918799877166748,7.808599948883057,9.143799781799316,5.066900253295898,2.0030999183654785,0.9719000458717346,0.6072999835014343,0.0,1.3864998817443848,8.486599922180176
@(ivt_com_multiplier - 1) * odt_skims['WLK_COM_WLK_KEYIVT']/100,util_WALK_COM_In_vehicle_time_on_commuter_rail,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@coef_short_iwait_multiplier * (odt_skims['WLK_COM_WLK_IWAIT']/100).clip(upper=waitThresh),util_WALK_COM_Short_iwait_time,3.3742001056671143,3.3742001056671143,1.8741999864578247,2.5341999530792236,1.8741999864578247,3.3742001056671143,4.154200077056885,4.154200077056885,4.214200019836426,4.214200019836426,4.214200019836426,4.154200077056885,0.0,4.154200077056885,7.5341997146606445
@coef_long_iwait_multiplier * (odt_skims['WLK_COM_WLK_IWAIT']/100-waitThresh).clip(0),util_WALK_COM_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@coef_xwait_multiplier * odt_skims['WLK_COM_WLK_XWAIT']/100,util_WALK_COM_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xfers_wlk_multiplier * (odt_skims['WLK_COM_WLK_BOARDS']-1).clip(0),util_WALK_COM_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@coef_wacc_multiplier * df.origin_walk_time # (5),util_WALK_COM_Walk_access_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@coef_wegr_multiplier * df.destination_walk_time # (5),util_WALK_COM_Walk_egress_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@coef_waux_multiplier * odt_skims['WLK_COM_WLK_WAUX']/100,util_WALK_COM_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * odt_skims['WLK_COM_WLK_FAR'],util_WALK_COM_Fare,15.14629627549506,15.14629627549506,15.14629627549506,15.14629627549506,15.14629627549506,15.14629627549506,15.14629627549506,15.14629627549506,15.14629627549506,15.14629627549506,15.14629627549506,15.14629627549506,0.0,15.14629627549506,15.14629627549506
@density_index_multiplier * df.density_index # (6),util_WALK_COM_Destination_zone_densityIndex,-14.350835038737026,-25.893610415911542,-362.7399352849485,-39.47116740267761,-183.76839703803847,-522.661886424999,-467.935283609011,-414.6019334849894,-225.08925295206197,-221.6589288278371,-24.401167455202277,-82.42665090347217,-284.55553789232556,-102.46706959342988,-493.43304843304844
@topology_trn_multiplier * df.trip_topology # (5),util_WALK_COM_Topology,6.6000000000000005,2.2,2.2,4.4,2.2,2.2,4.4,4.4,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,4.4,6.6000000000000005,2.2
auto_ownership == 0 # (3),util_DRIVE_LOC_Unavailable_for_zero_auto_households,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (3),util_DRIVE_LOC_Unavailable_for_persons_less_than_16,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@density_index_multiplier * df.density_index # (7),util_DRIVE_LOC_Destination_zone_densityIndex,-14.350835038737026,-25.893610415911542,-362.7399352849485,-39.47116740267761,-183.76839703803847,-522.661886424999,-467.935283609011,-414.6019334849894,-225.08925295206197,-221.6589288278371,-24.401167455202277,-82.42665090347217,-284.55553789232556,-102.46706959342988,-493.43304843304844
@topology_trn_multiplier * df.trip_topology # (6),util_DRIVE_LOC_Topology,6.6000000000000005,2.2,2.2,4.4,2.2,2.2,4.4,4.4,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,4.4,6.6000000000000005,2.2
outbound & ~drive_local_available_outbound,util_DRIVE_LOC_outbound_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0
@df.outbound * odt_skims['DRV_LOC_WLK_TOTIVT']/100,util_DRIVE_LOC_outbound_In_vehicle_time,0.7186000347137451,0.850600004196167,0.9212000370025635,1.062600016593933,1.9330999851226807,2.235100030899048,3.4670000076293945,4.802199840545654,5.066900253295898,2.0030999183654785,0.9719000458717346,1.4164999723434448,0.0,1.1332000494003296,4.583600044250488
@df.outbound * coef_short_iwait_multiplier * (odt_skims['DRV_LOC_WLK_IWAIT']/100).clip(upper=waitThresh),util_DRIVE_LOC_outbound_Short_iwait_time,1.9341999292373657,5.034200191497803,2.134200096130371,2.254199981689453,1.6541999578475952,3.3742001056671143,1.6541999578475952,1.6541999578475952,4.214200019836426,4.214200019836426,4.214200019836426,1.51419997215271,0.0,3.6742000579833984,3.0342001914978027
@df.outbound * coef_long_iwait_multiplier * (odt_skims['DRV_LOC_WLK_IWAIT']/100-waitThresh).clip(0),util_DRIVE_LOC_outbound_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * coef_xwait_multiplier * odt_skims['DRV_LOC_WLK_XWAIT']/100,util_DRIVE_LOC_outbound_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * xfers_wlk_multiplier * (odt_skims['DRV_LOC_WLK_BOARDS']-1).clip(0),util_DRIVE_LOC_outbound_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * coef_dtim_multiplier * odt_skims['DRV_LOC_WLK_DTIM']/100,util_DRIVE_LOC_outbound_Drive_time,2.4,3.72,4.14,2.4,2.4,3.42,4.14,4.14,1.68,1.68,1.68,2.4,0.0,2.4,4.14
@df.outbound * coef_wegr_multiplier * df.destination_walk_time,util_DRIVE_LOC_outbound_Walk_egress_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@df.outbound * coef_waux_multiplier * odt_skims['DRV_LOC_WLK_WAUX']/100,util_DRIVE_LOC_outbound_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * ivt_cost_multiplier * df.ivot * (odt_skims['DRV_LOC_WLK_FAR'] + costPerMile*odt_skims['DRV_LOC_WLK_DDIST']/100),util_DRIVE_LOC_outbound_Fare_and_operating_cost,15.875310858735883,16.27626956373783,16.403847609963496,15.875310858735883,15.875310858735883,16.185142170649815,16.403847609963496,16.403847609963496,15.656606939909965,15.656606939909965,15.656606939909965,15.875310858735883,0.0,15.875310858735883,16.403847609963496
@df.outbound * dacc_ratio_multiplier * (odt_skims['DRV_LOC_WLK_DDIST']/100)/ (od_skims['DIST']),util_DRIVE_LOC_outbound_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
inbound & ~drive_local_available_inbound,util_DRIVE_LOC_inbound_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * odt_skims['WLK_LOC_DRV_TOTIVT']/100,util_DRIVE_LOC_inbound_In_vehicle_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * coef_short_iwait_multiplier * (odt_skims['WLK_LOC_DRV_IWAIT']/100).clip(upper=waitThresh),util_DRIVE_LOC_inbound_Short_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * coef_long_iwait_multiplier * (odt_skims['WLK_LOC_DRV_IWAIT']/100-waitThresh).clip(0),util_DRIVE_LOC_inbound_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * coef_xwait_multiplier * odt_skims['WLK_LOC_DRV_XWAIT']/100,util_DRIVE_LOC_inbound_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * xfers_wlk_multiplier * (odt_skims['WLK_LOC_DRV_BOARDS']-1).clip(0),util_DRIVE_LOC_inbound_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * coef_dtim_multiplier * odt_skims['WLK_LOC_DRV_DTIM']/100,util_DRIVE_LOC_inbound_Drive_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * coef_wacc_multiplier * df.origin_walk_time,util_DRIVE_LOC_inbound_Walk_access_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * coef_waux_multiplier * odt_skims['WLK_LOC_DRV_WAUX']/100,util_DRIVE_LOC_inbound_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * ivt_cost_multiplier * df.ivot * (odt_skims['WLK_LOC_DRV_FAR'] + costPerMile*odt_skims['WLK_LOC_DRV_DDIST']/100),util_DRIVE_LOC_inbound_Fare_and_operating_cost,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * dacc_ratio_multiplier * (odt_skims['WLK_LOC_DRV_DDIST']/100)/ (od_skims['DIST']),util_DRIVE_LOC_inbound_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
auto_ownership == 0 # (4),util_DRIVE_LRF_Unavailable_for_zero_auto_households,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (4),util_DRIVE_LRF_Unavailable_for_persons_less_than_16,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@density_index_multiplier * df.density_index # (8),util_DRIVE_LRF_Destination_zone_densityIndex,-14.350835038737026,-25.893610415911542,-362.7399352849485,-39.47116740267761,-183.76839703803847,-522.661886424999,-467.935283609011,-414.6019334849894,-225.08925295206197,-221.6589288278371,-24.401167455202277,-82.42665090347217,-284.55553789232556,-102.46706959342988,-493.43304843304844
@topology_trn_multiplier * df.trip_topology # (7),util_DRIVE_LRF_Topology,6.6000000000000005,2.2,2.2,4.4,2.2,2.2,4.4,4.4,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,4.4,6.6000000000000005,2.2
outbound & ~drive_lrf_available_outbound,util_DRIVE_LRF_outbound_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@df.outbound * odt_skims['DRV_LRF_WLK_TOTIVT']/100,util_DRIVE_LRF_outbound_In_vehicle_time,38.324398040771484,28.6012020111084,28.257299423217773,37.362998962402344,36.201698303222656,30.156299591064453,30.156299591064453,28.69499969482422,33.14899826049805,36.201698303222656,37.362998962402344,38.324398040771484,0.0,42.846900939941406,29.38050079345703
@df.outbound * (coef_ivt_lrt_multiplier - 1)*odt_skims['DRV_LRF_WLK_KEYIVT']/100,util_DRIVE_LRF_outbound_In_vehicle_time_on_LR,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-3.6200700683593743,-0.0
@df.outbound * (coef_ivt_ferry_multiplier-coef_ivt_lrt_multiplier)*odt_skims['DRV_LRF_WLK_FERRYIVT']/100,util_DRIVE_LRF_outbound_In_vehicle_time_on_Ferry,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * coef_short_iwait_multiplier * (odt_skims['DRV_LRF_WLK_IWAIT']/100).clip(upper=waitThresh),util_DRIVE_LRF_outbound_Short_iwait_time,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,0.0,20.0,20.0
@df.outbound * coef_long_iwait_multiplier * (odt_skims['DRV_LRF_WLK_IWAIT']/100-waitThresh).clip(0),util_DRIVE_LRF_outbound_Long_iwait_time,5.006400108337402,5.023499488830566,5.023499488830566,5.006400108337402,5.006400108337402,5.006400108337402,5.006400108337402,5.006400108337402,5.006400108337402,5.006400108337402,5.006400108337402,5.006400108337402,0.0,5.143699645996094,5.023499488830566
@df.outbound * coef_xwait_multiplier * odt_skims['DRV_LRF_WLK_XWAIT']/100,util_DRIVE_LRF_outbound_transfer_wait_time,0.0,6.9,6.9,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,10.0,6.9
@df.outbound * xfers_drv_multiplier * (odt_skims['DRV_LRF_WLK_BOARDS']-1).clip(0),util_DRIVE_LRF_outbound_number_of_transfers,0.0,15.0,15.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,15.0,15.0
@df.outbound * coef_dtim_multiplier * odt_skims['DRV_LRF_WLK_DTIM']/100,util_DRIVE_LRF_outbound_Drive_time,25.16,25.16,25.16,25.16,25.16,25.16,25.16,25.16,25.16,25.16,25.16,25.16,0.0,25.16,25.16
@df.outbound * coef_wegr_multiplier * df.destination_walk_time # (2),util_DRIVE_LRF_outbound_Walk_egress_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@df.outbound * coef_waux_multiplier * odt_skims['DRV_LRF_WLK_WAUX']/100,util_DRIVE_LRF_outbound_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * ivt_cost_multiplier * df.ivot * (odt_skims['DRV_LRF_WLK_FAR'] + costPerMile * odt_skims['DRV_LRF_WLK_DDIST']/100),util_DRIVE_LRF_outbound_Fare_and_operating_cost,30.363082363673623,40.825984396087975,40.825984396087975,30.363082363673623,30.363082363673623,30.363082363673623,30.363082363673623,30.363082363673623,30.363082363673623,30.363082363673623,30.363082363673623,30.363082363673623,0.0,45.50937863916868,40.825984396087975
@df.outbound * dacc_ratio_multiplier * (odt_skims['DRV_LRF_WLK_DDIST']/100) / od_skims['DIST'],util_DRIVE_LRF_outbound_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
inbound & ~drive_lrf_available_inbound,util_DRIVE_LRF_inbound_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * odt_skims['WLK_LRF_DRV_TOTIVT']/100,util_DRIVE_LRF_inbound_In_vehicle_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * (coef_ivt_lrt_multiplier - 1)*odt_skims['WLK_LRF_DRV_KEYIVT']/100,util_DRIVE_LRF_inbound_In_vehicle_time_on_LR,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.inbound * (coef_ivt_ferry_multiplier-coef_ivt_lrt_multiplier)*odt_skims['WLK_LRF_DRV_FERRYIVT']/100,util_DRIVE_LRF_inbound_In_vehicle_time_on_Ferry,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.inbound * coef_short_iwait_multiplier * (odt_skims['WLK_LRF_DRV_IWAIT']/100).clip(upper=waitThresh),util_DRIVE_LRF_inbound_Short_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * coef_long_iwait_multiplier * (odt_skims['WLK_LRF_DRV_IWAIT']/100-waitThresh).clip(0),util_DRIVE_LRF_inbound_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * coef_xwait_multiplier * odt_skims['WLK_LRF_DRV_XWAIT']/100,util_DRIVE_LRF_inbound_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * xfers_drv_multiplier * (odt_skims['WLK_LRF_DRV_BOARDS']-1).clip(0),util_DRIVE_LRF_inbound_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * coef_dtim_multiplier * odt_skims['WLK_LRF_DRV_DTIM']/100,util_DRIVE_LRF_inbound_Drive_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * coef_wacc_multiplier * df.origin_walk_time # (2),util_DRIVE_LRF_inbound_Walk_access_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * coef_waux_multiplier * odt_skims['WLK_LRF_DRV_WAUX']/100,util_DRIVE_LRF_inbound_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * ivt_cost_multiplier * df.ivot * (odt_skims['WLK_LRF_DRV_FAR'] + costPerMile * odt_skims['WLK_LRF_DRV_DDIST']/100),util_DRIVE_LRF_inbound_Fare_and_operating_cost,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * dacc_ratio_multiplier * (odt_skims['WLK_LRF_DRV_DDIST']/100)/ od_skims['DIST'],util_DRIVE_LRF_inbound_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
auto_ownership == 0 # (5),util_DRIVE_EXP_Unavailable_for_zero_auto_households,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (5),util_DRIVE_EXP_Unavailable_for_persons_less_than_16,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@density_index_multiplier * df.density_index # (9),util_DRIVE_EXP_Destination_zone_densityIndex,-14.350835038737026,-25.893610415911542,-362.7399352849485,-39.47116740267761,-183.76839703803847,-522.661886424999,-467.935283609011,-414.6019334849894,-225.08925295206197,-221.6589288278371,-24.401167455202277,-82.42665090347217,-284.55553789232556,-102.46706959342988,-493.43304843304844
@topology_trn_multiplier * df.trip_topology # (8),util_DRIVE_EXP_Topology,6.6000000000000005,2.2,2.2,4.4,2.2,2.2,4.4,4.4,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,4.4,6.6000000000000005,2.2
outbound & ~drive_express_available_outbound,util_DRIVE_EXP_outbound_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@df.outbound * odt_skims['DRV_EXP_WLK_TOTIVT']/100,util_DRIVE_EXP_outbound_In_vehicle_time,38.324398040771484,28.6012020111084,28.257299423217773,37.362998962402344,36.201698303222656,30.156299591064453,30.156299591064453,28.69499969482422,33.14899826049805,36.201698303222656,37.362998962402344,38.324398040771484,0.0,38.324398040771484,29.38050079345703
@df.outbound * (ivt_exp_multiplier - 1) * odt_skims['DRV_EXP_WLK_KEYIVT']/100,util_DRIVE_EXP_outbound_In_vehicle_time_on_EXP,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * coef_short_iwait_multiplier * (odt_skims['DRV_EXP_WLK_IWAIT']/100).clip(upper=waitThresh),util_DRIVE_EXP_outbound_Short_iwait_time,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,0.0,20.0,20.0
@df.outbound * coef_long_iwait_multiplier * (odt_skims['DRV_EXP_WLK_IWAIT']/100-waitThresh).clip(0),util_DRIVE_EXP_outbound_Long_iwait_time,5.006400108337402,5.023499488830566,5.023499488830566,5.006400108337402,5.006400108337402,5.006400108337402,5.006400108337402,5.006400108337402,5.006400108337402,5.006400108337402,5.006400108337402,5.006400108337402,0.0,5.006400108337402,5.023499488830566
@df.outbound * coef_xwait_multiplier * odt_skims['DRV_EXP_WLK_XWAIT']/100,util_DRIVE_EXP_outbound_transfer_wait_time,0.0,6.9,6.9,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.9
@df.outbound * xfers_drv_multiplier * (odt_skims['DRV_EXP_WLK_BOARDS']-1).clip(0),util_DRIVE_EXP_outbound_number_of_transfers,0.0,15.0,15.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,15.0
@df.outbound * coef_dtim_multiplier * odt_skims['DRV_EXP_WLK_DTIM']/100,util_DRIVE_EXP_outbound_Drive_time,25.16,25.16,25.16,25.16,25.16,25.16,25.16,25.16,25.16,25.16,25.16,25.16,0.0,25.16,25.16
@df.outbound * coef_wegr_multiplier * df.destination_walk_time # (3),util_DRIVE_EXP_outbound_Walk_egress_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@df.outbound * coef_waux_multiplier * odt_skims['DRV_EXP_WLK_WAUX']/100,util_DRIVE_EXP_outbound_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * ivt_cost_multiplier * df.ivot * (odt_skims['DRV_EXP_WLK_FAR'] + costPerMile * odt_skims['DRV_EXP_WLK_DDIST']/100),util_DRIVE_EXP_outbound_Fare_and_operating_cost,30.363082363673623,40.825984396087975,40.825984396087975,30.363082363673623,30.363082363673623,30.363082363673623,30.363082363673623,30.363082363673623,30.363082363673623,30.363082363673623,30.363082363673623,30.363082363673623,0.0,30.363082363673623,40.825984396087975
@df.outbound * dacc_ratio_multiplier * (odt_skims['DRV_EXP_WLK_DDIST']/100) / od_skims['DIST'],util_DRIVE_EXP_outbound_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
inbound & ~drive_express_available_inbound,util_DRIVE_EXP_inbound_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * odt_skims['WLK_EXP_DRV_TOTIVT']/100,util_DRIVE_EXP_inbound_In_vehicle_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * (ivt_exp_multiplier - 1) * odt_skims['WLK_EXP_DRV_KEYIVT']/100,util_DRIVE_EXP_inbound_In_vehicle_time_on_EXP,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.inbound * coef_short_iwait_multiplier * (odt_skims['WLK_EXP_DRV_IWAIT']/100).clip(upper=waitThresh),util_DRIVE_EXP_inbound_Short_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * coef_long_iwait_multiplier * (odt_skims['WLK_EXP_DRV_IWAIT']/100-waitThresh).clip(0),util_DRIVE_EXP_inbound_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * coef_xwait_multiplier * odt_skims['WLK_EXP_DRV_XWAIT']/100,util_DRIVE_EXP_inbound_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * xfers_drv_multiplier * (odt_skims['WLK_EXP_DRV_BOARDS']-1).clip(0),util_DRIVE_EXP_inbound_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * coef_dtim_multiplier * odt_skims['WLK_EXP_DRV_DTIM']/100,util_DRIVE_EXP_inbound_Drive_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * coef_wacc_multiplier * df.origin_walk_time # (3),util_DRIVE_EXP_inbound_Walk_access_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * coef_waux_multiplier * odt_skims['WLK_EXP_DRV_WAUX']/100,util_DRIVE_EXP_inbound_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * ivt_cost_multiplier * df.ivot * (odt_skims['WLK_EXP_DRV_FAR'] + costPerMile * odt_skims['WLK_EXP_DRV_DDIST']/100),util_DRIVE_EXP_inbound_Fare_and_operating_cost,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * dacc_ratio_multiplier * (odt_skims['WLK_EXP_DRV_DDIST']/100) / od_skims['DIST'],util_DRIVE_EXP_inbound_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
auto_ownership == 0 # (6),util_DRIVE_HVY_Unavailable_for_zero_auto_households,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (6),util_DRIVE_HVY_Unavailable_for_persons_less_than_16,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@density_index_multiplier * df.density_index # (10),util_DRIVE_HVY_Destination_zone_densityIndex,-14.350835038737026,-25.893610415911542,-362.7399352849485,-39.47116740267761,-183.76839703803847,-522.661886424999,-467.935283609011,-414.6019334849894,-225.08925295206197,-221.6589288278371,-24.401167455202277,-82.42665090347217,-284.55553789232556,-102.46706959342988,-493.43304843304844
@topology_trn_multiplier * df.trip_topology # (9),util_DRIVE_HVY_Topology,6.6000000000000005,2.2,2.2,4.4,2.2,2.2,4.4,4.4,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,4.4,6.6000000000000005,2.2
outbound & ~drive_heavyrail_available_outbound,util_DRIVE_HVY_outbound_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@df.outbound * odt_skims['DRV_HVY_WLK_TOTIVT']/100,util_DRIVE_HVY_outbound_In_vehicle_time,20.44260025024414,18.980501174926758,18.980501174926758,18.980501174926758,18.980501174926758,17.50279998779297,17.50279998779297,15.725200653076172,17.50279998779297,18.980501174926758,18.980501174926758,20.44260025024414,0.0,20.44260025024414,18.980501174926758
@df.outbound * (ivt_hvy_multiplier - 1) * odt_skims['DRV_HVY_WLK_KEYIVT']/100,util_DRIVE_HVY_outbound_In_vehicle_time_on_HVY,-4.0885200195312486,-3.796100097656249,-3.796100097656249,-3.796100097656249,-3.796100097656249,-3.500560058593749,-3.500560058593749,-3.1450400390624993,-3.500560058593749,-3.796100097656249,-3.796100097656249,-4.0885200195312486,-0.0,-4.0885200195312486,-3.796100097656249
@df.outbound * coef_short_iwait_multiplier * (odt_skims['DRV_HVY_WLK_IWAIT']/100).clip(upper=waitThresh),util_DRIVE_HVY_outbound_Short_iwait_time,4.192399978637695,4.192399978637695,4.192399978637695,4.192399978637695,4.192399978637695,4.192399978637695,4.192399978637695,4.192399978637695,4.192399978637695,4.192399978637695,4.192399978637695,4.192399978637695,0.0,4.192399978637695,4.192399978637695
@df.outbound * coef_long_iwait_multiplier * (odt_skims['DRV_HVY_WLK_IWAIT']/100-waitThresh).clip(0),util_DRIVE_HVY_outbound_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * coef_xwait_multiplier * odt_skims['DRV_HVY_WLK_XWAIT']/100,util_DRIVE_HVY_outbound_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * xfers_drv_multiplier * (odt_skims['DRV_HVY_WLK_BOARDS']-1).clip(0),util_DRIVE_HVY_outbound_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * coef_dtim_multiplier * odt_skims['DRV_HVY_WLK_DTIM']/100,util_DRIVE_HVY_outbound_Drive_time,25.84,25.84,25.84,25.84,25.84,25.84,25.84,25.84,25.84,25.84,25.84,25.84,0.0,25.84,25.84
@df.outbound * coef_wegr_multiplier * df.destination_walk_time # (4),util_DRIVE_HVY_outbound_Walk_egress_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@df.outbound * coef_waux_multiplier * odt_skims['DRV_HVY_WLK_WAUX']/100,util_DRIVE_HVY_outbound_Walk_other_time,12.0,12.0,12.0,12.0,12.0,12.0,12.0,12.0,12.0,12.0,12.0,12.0,0.0,12.0,12.0
@df.outbound * ivt_cost_multiplier * df.ivot * (odt_skims['DRV_HVY_WLK_FAR'] + costPerMile * odt_skims['DRV_HVY_WLK_DDIST']/100),util_DRIVE_HVY_outbound_Fare_and_operating_cost,38.36156262526082,38.36156262526082,38.36156262526082,38.36156262526082,38.36156262526082,38.36156262526082,38.36156262526082,38.36156262526082,38.36156262526082,38.36156262526082,38.36156262526082,38.36156262526082,0.0,38.36156262526082,38.36156262526082
@df.outbound * dacc_ratio_multiplier * (odt_skims['DRV_HVY_WLK_DDIST']/100) / od_skims['DIST'],util_DRIVE_HVY_outbound_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
inbound & ~drive_heavyrail_available_inbound,util_DRIVE_HVY_inbound_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * odt_skims['WLK_HVY_DRV_TOTIVT']/100,util_DRIVE_HVY_inbound_In_vehicle_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * (ivt_hvy_multiplier - 1) * odt_skims['WLK_HVY_DRV_KEYIVT']/100,util_DRIVE_HVY_inbound_In_vehicle_time_on_HVY,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.inbound * coef_short_iwait_multiplier * (odt_skims['WLK_HVY_DRV_IWAIT']/100).clip(upper=waitThresh),util_DRIVE_HVY_inbound_Short_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * coef_long_iwait_multiplier * (odt_skims['WLK_HVY_DRV_IWAIT']/100-waitThresh).clip(0),util_DRIVE_HVY_inbound_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * coef_xwait_multiplier * odt_skims['WLK_HVY_DRV_XWAIT']/100,util_DRIVE_HVY_inbound_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * xfers_drv_multiplier * (odt_skims['WLK_HVY_DRV_BOARDS']-1).clip(0),util_DRIVE_HVY_inbound_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * coef_dtim_multiplier * odt_skims['DRV_HVY_WLK_DTIM']/100 # (2),util_DRIVE_HVY_inbound_Drive_time,25.84,25.84,25.84,25.84,25.84,25.84,25.84,25.84,25.84,25.84,25.84,25.84,0.0,25.84,25.84
@df.inbound * coef_wacc_multiplier * df.origin_walk_time # (4),util_DRIVE_HVY_inbound_Walk_access_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@coef_waux_multiplier * odt_skims['WLK_HVY_DRV_WAUX']/100,util_DRIVE_HVY_inbound_Walk_other_time,12.0,12.0,12.0,12.0,12.0,12.0,12.0,12.0,12.0,12.0,12.0,12.0,0.0,12.0,12.0
@df.inbound * ivt_cost_multiplier * df.ivot * (odt_skims['WLK_HVY_DRV_FAR'] + costPerMile * odt_skims['WLK_HVY_DRV_DDIST']/100),util_DRIVE_HVY_inbound_Fare_and_operating_cost,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * dacc_ratio_multiplier * (odt_skims['WLK_HVY_DRV_DDIST']/100)/ od_skims['DIST'],util_DRIVE_HVY_inbound_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
auto_ownership == 0 # (7),util_DRIVE_COM_Unavailable_for_zero_auto_households,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (7),util_DRIVE_COM_Unavailable_for_persons_less_than_16,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@density_index_multiplier * df.density_index # (11),util_DRIVE_COM_Destination_zone_densityIndex,-14.350835038737026,-25.893610415911542,-362.7399352849485,-39.47116740267761,-183.76839703803847,-522.661886424999,-467.935283609011,-414.6019334849894,-225.08925295206197,-221.6589288278371,-24.401167455202277,-82.42665090347217,-284.55553789232556,-102.46706959342988,-493.43304843304844
@topology_trn_multiplier * df.trip_topology # (10),util_DRIVE_COM_Topology,6.6000000000000005,2.2,2.2,4.4,2.2,2.2,4.4,4.4,6.6000000000000005,6.6000000000000005,6.6000000000000005,6.6000000000000005,4.4,6.6000000000000005,2.2
outbound & ~drive_commuter_available_outbound,util_DRIVE_COM_outbound_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@df.outbound * odt_skims['DRV_COM_WLK_TOTIVT']/100,util_DRIVE_COM_outbound_In_vehicle_time,37.750301361083984,29.031700134277344,29.952899932861328,29.952899932861328,29.031700134277344,29.031700134277344,29.031700134277344,35.47159957885742,28.36370086669922,28.36370086669922,28.36370086669922,28.36370086669922,0.0,37.750301361083984,33.615299224853516
@df.outbound * (ivt_com_multiplier - 1) * odt_skims['DRV_COM_WLK_KEYIVT']/100,util_DRIVE_COM_outbound_In_vehicle_time_on_COM,-4.7208398437499985,-4.7208398437499985,-4.7208398437499985,-4.7208398437499985,-4.7208398437499985,-4.7208398437499985,-4.7208398437499985,-4.7208398437499985,-4.7208398437499985,-4.7208398437499985,-4.7208398437499985,-4.7208398437499985,-0.0,-4.7208398437499985,-4.7208398437499985
@df.outbound * coef_short_iwait_multiplier * (odt_skims['DRV_COM_WLK_IWAIT']/100).clip(upper=waitThresh),util_DRIVE_COM_outbound_Short_iwait_time,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,0.0,20.0,20.0
@df.outbound * coef_long_iwait_multiplier * (odt_skims['DRV_COM_WLK_IWAIT']/100-waitThresh).clip(0),util_DRIVE_COM_outbound_Long_iwait_time,15.143501281738281,15.023300170898438,15.023300170898438,15.023300170898438,15.023300170898438,15.023300170898438,15.023300170898438,15.023300170898438,15.023300170898438,15.023300170898438,15.023300170898438,15.023300170898438,0.0,15.143501281738281,15.023300170898438
@df.outbound * coef_xwait_multiplier * odt_skims['DRV_COM_WLK_XWAIT']/100,util_DRIVE_COM_outbound_transfer_wait_time,4.76,3.0,3.0,3.0,3.0,3.0,3.0,9.0,3.0,3.0,3.0,3.0,0.0,4.76,3.0
@df.outbound * xfers_drv_multiplier * (odt_skims['DRV_COM_WLK_BOARDS']-1).clip(0),util_DRIVE_COM_outbound_number_of_transfers,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,0.0,15.0,15.0
@df.outbound * coef_dtim_multiplier * odt_skims['DRV_COM_WLK_DTIM']/100,util_DRIVE_COM_outbound_Drive_time,33.84,33.84,33.84,33.84,33.84,33.84,33.84,33.84,33.84,33.84,33.84,33.84,0.0,33.84,33.84
@df.outbound * coef_wegr_multiplier * df.destination_walk_time # (5),util_DRIVE_COM_outbound_Walk_egress_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@df.outbound * coef_waux_multiplier * odt_skims['DRV_COM_WLK_WAUX']/100,util_DRIVE_COM_outbound_Walk_other_time,6.0,6.0,6.0,6.0,6.0,6.0,6.0,6.0,6.0,6.0,6.0,6.0,0.0,6.0,6.0
@df.outbound * ivt_cost_multiplier * df.ivot * (odt_skims['DRV_COM_WLK_FAR'] + costPerMile * odt_skims['DRV_COM_WLK_DDIST']/100),util_DRIVE_COM_outbound_Fare_and_operating_cost,56.95416909514322,46.79020712079785,46.79020712079785,46.79020712079785,46.79020712079785,46.79020712079785,46.79020712079785,46.79020712079785,46.79020712079785,46.79020712079785,46.79020712079785,46.79020712079785,0.0,56.95416909514322,46.79020712079785
@df.outbound * dacc_ratio_multiplier * (odt_skims['DRV_COM_WLK_DDIST']/100) / od_skims['DIST'],util_DRIVE_COM_outbound_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
inbound & ~drive_commuter_available_inbound,util_DRIVE_COM_inbound_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * odt_skims['WLK_COM_DRV_TOTIVT']/100,util_DRIVE_COM_inbound_In_vehicle_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * (ivt_com_multiplier - 1) * odt_skims['WLK_COM_DRV_KEYIVT']/100,util_DRIVE_COM_inbound_In_vehicle_time_on_COM,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.inbound * coef_short_iwait_multiplier * (odt_skims['WLK_COM_DRV_IWAIT']/100).clip(upper=waitThresh),util_DRIVE_COM_inbound_Short_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * coef_long_iwait_multiplier * (odt_skims['WLK_COM_DRV_IWAIT']/100-waitThresh).clip(0),util_DRIVE_COM_inbound_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * coef_xwait_multiplier * odt_skims['WLK_COM_DRV_XWAIT']/100,util_DRIVE_COM_inbound_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * xfers_drv_multiplier * (odt_skims['WLK_COM_DRV_BOARDS']-1).clip(0),util_DRIVE_COM_inbound_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * coef_dtim_multiplier * odt_skims['WLK_COM_DRV_DTIM']/100,util_DRIVE_COM_inbound_Drive_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * coef_wacc_multiplier * df.origin_walk_time # (5),util_DRIVE_COM_inbound_Walk_access_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * coef_waux_multiplier * odt_skims['WLK_COM_DRV_WAUX']/100,util_DRIVE_COM_inbound_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * ivt_cost_multiplier * df.ivot * (odt_skims['WLK_COM_DRV_FAR'] + costPerMile * odt_skims['WLK_COM_DRV_DDIST']/100),util_DRIVE_COM_inbound_Fare_and_operating_cost,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * dacc_ratio_multiplier * (odt_skims['WLK_COM_DRV_DDIST']/100) / od_skims['DIST'],util_DRIVE_COM_inbound_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@odt_skims['HOV2TOLL_TIME'] # (2),util_Taxi_In_vehicle_time,1.6100000143051147,2.0799999237060547,2.6700000762939453,2.1600000858306885,3.0899999141693115,3.9800000190734863,4.610000133514404,5.820000171661377,3.5799999237060547,2.25,1.4900000095367432,1.059999942779541,0.5299999713897705,3.130000114440918,4.21999979019165
@ridehail_wait_time_multiplier * df.origTaxiWaitTime,util_Taxi_Wait_time,8.25,8.25,8.25,8.25,8.25,8.25,8.25,8.25,8.25,8.25,8.25,8.25,8.25,8.25,8.25
@ivt_cost_multiplier * df.ivot * odt_skims['HOV2TOLL_VTOLL'],util_Taxi_Tolls,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * odt_skims['HOV2TOLL_BTOLL'],util_Taxi_Bridge_toll,0.06576681538851425,0.08469968549530688,0.10861489109113023,0.08669261731515704,0.12057249388904193,0.15744176819270206,0.17637463236008935,0.22619797537158626,0.14747709721464056,0.09067848689426271,0.06377387762925876,0.04484100752246615,0.02291873820104695,0.1315336307770285,0.16640996138202785
@ivt_cost_multiplier * df.ivot * (Taxi_baseFare + odt_skims['HOV2TOLL_DIST'] * Taxi_costPerMile + odt_skims['HOV2TOLL_TIME'] * Taxi_costPerMinute)*100,util_Taxi_Fare,35.215140418032064,39.12128773524326,44.063768626672626,39.659381227212506,47.00334187307057,54.53662700301878,58.83140148935365,68.74624085675146,52.075356443080025,39.978251268693384,33.949624198479164,30.541709836230513,26.34658431665028,48.18913701861006,55.921715330543286
@odt_skims['HOV2TOLL_TIME'] ,util_TNC_Single_In_vehicle_time,1.6100000143051147,2.0799999237060547,2.6700000762939453,2.1600000858306885,3.0899999141693115,3.9800000190734863,4.610000133514404,5.820000171661377,3.5799999237060547,2.25,1.4900000095367432,1.059999942779541,0.5299999713897705,3.130000114440918,4.21999979019165
@ridehail_wait_time_multiplier * df.origSingleTNCWaitTime,util_TNC_Single_Wait_time,4.500000000000001,4.500000000000001,4.500000000000001,4.500000000000001,4.500000000000001,4.500000000000001,4.500000000000001,4.500000000000001,4.500000000000001,4.500000000000001,4.500000000000001,4.500000000000001,4.500000000000001,4.500000000000001,4.500000000000001
@ivt_cost_multiplier * df.ivot * odt_skims['HOV2TOLL_VTOLL'] # (2),util_TNC_Single_Tolls,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_BTOLL'] + dot_skims['HOV2TOLL_BTOLL']),util_TNC_Single_Bridge_toll,0.15644530228277698,0.1903251669778512,0.23915205595823366,0.17338523463031408,0.24911671505748453,0.34178813971100275,0.3587280601797292,0.45638181438287284,0.30292592170868177,0.18135697378852542,0.12754775525851753,0.11060782291098041,0.0458374764020939,0.24812024914755945,0.31787293411517936
"@ivt_cost_multiplier * df.ivot * np.maximum(TNC_single_baseFare + odt_skims['HOV2TOLL_DIST'] * TNC_single_costPerMile + odt_skims['HOV2TOLL_TIME'] * TNC_single_costPerMinute, TNC_single_costMinimum) * 100",util_TNC_Single_Cost,71.74561203594584,71.74561203594584,71.74561203594584,71.74561203594584,71.74561203594584,71.74561203594584,71.74561203594584,71.74561203594584,71.74561203594584,71.74561203594584,71.74561203594584,71.74561203594584,71.74561203594584,71.74561203594584,71.74561203594584
@odt_skims['HOV2TOLL_TIME'] * TNC_shared_IVTFactor,util_TNC_Shared_In_vehicle_time,2.4149999618530273,3.119999885559082,4.005000114440918,3.2400002479553223,4.634999752044678,5.970000267028809,6.914999961853027,8.730000495910645,5.369999885559082,3.375,2.2350001335144043,1.5899999141693115,0.7949999570846558,4.695000171661377,6.329999923706055
@ridehail_wait_time_multiplier * df.origSharedTNCWaitTime,util_TNC_Shared_Wait_time,7.499999999999998,7.499999999999998,7.499999999999998,7.499999999999998,7.499999999999998,7.499999999999998,7.499999999999998,7.499999999999998,7.499999999999998,7.499999999999998,7.499999999999998,7.499999999999998,7.499999999999998,7.499999999999998,7.499999999999998
@ivt_cost_multiplier * df.ivot * odt_skims['HOV2TOLL_VTOLL'] # (3),util_TNC_Shared_Tolls,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_BTOLL'] + dot_skims['HOV2TOLL_BTOLL']) # (2),util_TNC_Shared_Bridge_toll,0.15644530228277698,0.1903251669778512,0.23915205595823366,0.17338523463031408,0.24911671505748453,0.34178813971100275,0.3587280601797292,0.45638181438287284,0.30292592170868177,0.18135697378852542,0.12754775525851753,0.11060782291098041,0.0458374764020939,0.24812024914755945,0.31787293411517936
"@ivt_cost_multiplier * df.ivot * np.maximum(TNC_shared_baseFare + odt_skims['HOV2TOLL_DIST'] * TNC_shared_costPerMile + odt_skims['HOV2TOLL_TIME']* TNC_shared_costPerMinute, TNC_shared_costMinimum) * 100",util_TNC_Shared_Cost,29.894005806898143,29.894005806898143,29.894005806898143,29.894005806898143,30.07137783171539,32.489801521650804,33.96257922937066,37.175189314249515,31.615901179980337,29.894005806898143,29.894005806898143,29.894005806898143,29.894005806898143,30.375299577878224,32.99301644979865
tour_mode_is_auto,util_tour_mode_is_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
tour_mode_is_walk,util_tour_mode_is_walk,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
tour_mode_is_bike,util_tour_mode_is_bike,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
tour_mode_is_walk_transit,util_tour_mode_is_walk_transit,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
tour_mode_is_drive_transit,util_tour_mode_is_drive_transit,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
tour_mode_is_ride_hail,util_tour_mode_is_ride_hail,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.i_tour_mode.isin(I_SOV_MODES)),util_Drive_Alone_tour_mode_ASC_shared_ride_2_df_is_indiv,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.i_tour_mode.isin(I_SOV_MODES)) # (2),util_Drive_Alone_tour_mode_ASC_shared_ride_3_plus,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.i_tour_mode.isin(I_SOV_MODES)) # (3),util_Drive_Alone_tour_mode_ASC_walk,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.i_tour_mode.isin(I_SR2_MODES)),util_Shared_Ride_2_tour_mode_ASC_shared_ride_2,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.i_tour_mode.isin(I_SR2_MODES)) # (2),util_Shared_Ride_2_tour_mode_ASC_shared_ride_3_plus,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.i_tour_mode.isin(I_SR2_MODES)) # (3),util_Shared_Ride_2_tour_mode_ASC_walk,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.i_tour_mode.isin(I_SR2_MODES)) # (4),util_Shared_Ride_2_tour_mode_ASC_ride_hail,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.i_tour_mode.isin(I_SR3P_MODES)),util_Shared_Ride_3_tour_mode_ASC_shared_ride_2,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.i_tour_mode.isin(I_SR3P_MODES)) # (2),util_Shared_Ride_3_tour_mode_ASC_shared_ride_3_plus,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.i_tour_mode.isin(I_SR3P_MODES)) # (3),util_Shared_Ride_3_tour_mode_ASC_walk,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.i_tour_mode.isin(I_SR3P_MODES)) # (4),util_Shared_Ride_3_tour_mode_ASC_ride_hail,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.is_indiv & (df.i_tour_mode == I_WALK_MODE),util_Walk_tour_mode_ASC_ride_hail,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@df.is_indiv & (df.i_tour_mode == I_BIKE_MODE),util_Bike_tour_mode_ASC_walk,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.is_indiv & (df.i_tour_mode == I_BIKE_MODE) # (2),util_Bike_tour_mode_ASC_ride_hail,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.tour_mode_is_walk_transit & ~df.walk_ferry_available),util_Walk_to_Transit_tour_mode_ASC_light_rail,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.tour_mode_is_walk_transit & df.walk_ferry_available),util_Walk_to_Transit_tour_mode_ASC_ferry,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.tour_mode_is_walk_transit),util_Walk_to_Transit_tour_mode_ASC_express_bus,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.tour_mode_is_walk_transit) # (2),util_Walk_to_Transit_tour_mode_ASC_heavy_rail,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.tour_mode_is_walk_transit) # (3),util_Walk_to_Transit_tour_mode_ASC_commuter_rail,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.tour_mode_is_walk_transit) # (4),util_Walk_to_Transit_tour_mode_ASC_shared_ride_2,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.tour_mode_is_walk_transit) # (5),util_Walk_to_Transit_tour_mode_ASC_shared_ride_3_plus,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.tour_mode_is_walk_transit) # (6),util_Walk_to_Transit_tour_mode_ASC_walk,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.tour_mode_is_walk_transit) # (7),util_Walk_to_Transit_tour_mode_ASC_ride_hail,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.tour_mode_is_drive_transit & ~df.drive_ferry_available),util_Drive_to_Transit_tour_mode_ASC_light_rail_skims_differ,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.tour_mode_is_drive_transit & df.drive_ferry_available),util_Drive_to_Transit_tour_mode_ASC_ferry,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.tour_mode_is_drive_transit),util_Drive_to_Transit_tour_mode_ASC_express_bus,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.tour_mode_is_drive_transit) # (2),util_Drive_to_Transit_tour_mode_ASC_heavy_rail,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.tour_mode_is_drive_transit) # (3),util_Drive_to_Transit_tour_mode_ASC_commuter_rail,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.tour_mode_is_drive_transit) # (4),util_Drive_to_Transit_tour_mode_ASC_ride_hail,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.tour_mode_is_ride_hail),util_Ride_Hail_tour_mode_ASC_shared_ride_2,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.tour_mode_is_ride_hail) # (2),util_Ride_Hail_tour_mode_ASC_shared_ride_3_plus,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.tour_mode_is_ride_hail) # (3),util_Ride_Hail_tour_mode_ASC_walk,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.i_tour_mode.isin(I_RIDE_HAIL_MODES)),util_Ride_Hail_tour_mode_ASC_ride_hail_taxi,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & df.i_tour_mode.isin(I_RIDE_HAIL_MODES)) # (2),util_Ride_Hail_tour_mode_ASC_ride_hail_single,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & df.i_tour_mode.isin(I_AUTO_MODES)),util_joint_auto_tour_mode_ASC_shared_ride_2,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & df.i_tour_mode.isin(I_AUTO_MODES)) # (2),util_joint_auto_tour_mode_ASC_shared_ride_3_,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & df.i_tour_mode.isin(I_AUTO_MODES)) # (3),util_joint_auto_tour_mode_ASC_walk,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & df.i_tour_mode.isin(I_RIDE_HAIL_MODES)),util_joint_auto_tour_mode_ASC_ride_hail,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & df.i_tour_mode.isin(I_RIDE_HAIL_MODES)) # (2),util_joint_Walk_tour_mode_ASC_ride_hail,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.is_joint & (df.i_tour_mode == I_BIKE_MODE),util_joint_Bike_tour_mode_ASC_walk,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.is_joint & (df.i_tour_mode == I_BIKE_MODE) # (2),util_joint_Bike_tour_mode_ASC_ride_hail,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & df.tour_mode_is_walk_transit & ~df.walk_ferry_available),util_joint_Walk_to_Transit_tour_mode_ASC_light_rail,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & df.tour_mode_is_walk_transit & df.walk_ferry_available),util_joint_Walk_to_Transit_tour_mode_ASC_ferry,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & df.tour_mode_is_walk_transit),util_joint_Walk_to_Transit_tour_mode_ASC_express_bus,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & df.tour_mode_is_walk_transit) # (2),util_joint_Walk_to_Transit_tour_mode_ASC_heavy_rail,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & df.tour_mode_is_walk_transit) # (3),util_joint_Walk_to_Transit_tour_mode_ASC_commuter_rail,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & df.tour_mode_is_walk_transit) # (4),util_joint_Walk_to_Transit_tour_mode_ASC_shared_ride_2,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & df.tour_mode_is_walk_transit) # (5),util_joint_Walk_to_Transit_tour_mode_ASC_shared_ride_3_plus,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & df.tour_mode_is_walk_transit) # (6),util_joint_Walk_to_Transit_tour_mode_ASC_walk,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & df.tour_mode_is_walk_transit) # (7),util_joint_Walk_to_Transit_tour_mode_ASC_ride_hail,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & df.tour_mode_is_drive_transit & ~df.drive_ferry_available),util_joint_Drive_to_Transit_tour_mode_ASC_light_rail_skims_differ,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & df.tour_mode_is_drive_transit & df.drive_ferry_available),util_joint_Drive_to_Transit_tour_mode_ASC_ferry,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & df.tour_mode_is_drive_transit),util_joint_Drive_to_Transit_tour_mode_ASC_express_bus,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & df.tour_mode_is_drive_transit) # (2),util_joint_Drive_to_Transit_tour_mode_ASC_heavy_rail,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & df.tour_mode_is_drive_transit) # (3),util_joint_Drive_to_Transit_tour_mode_ASC_commuter_rail,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & df.tour_mode_is_drive_transit) # (4),util_joint_Drive_to_Transit_tour_mode_ASC_ride_hail,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & df.tour_mode_is_ride_hail),util_joint_Ride_Hail_tour_mode_ASC_shared_ride_2,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & df.tour_mode_is_ride_hail) # (2),util_joint_Ride_Hail_tour_mode_ASC_shared_ride_3_plus,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & df.tour_mode_is_ride_hail) # (3),util_joint_Ride_Hail_tour_mode_ASC_walk,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & df.i_tour_mode.isin(I_RIDE_HAIL_MODES)) # (3),util_joint_Ride_Hail_tour_mode_ASC_ride_hail_taxi,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & df.i_tour_mode.isin(I_RIDE_HAIL_MODES)) # (4),util_joint_Ride_Hail_tour_mode_ASC_ride_hail_single,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.tour_mode_is_walk & (od_skims['DISTWALK'] > 3),util_Walk_not_available_for_long_distances,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.tour_mode_is_walk & (od_skims['DISTBIKE'] > 8),util_Bike_not_available_for_long_distances,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@origin_density_applied*(origin_density_index_multiplier*df.origin_density_index).clip(origin_density_index_max),util_origin_density_index,-15.0,-15.0,-15.0,-15.0,-15.0,-15.0,-15.0,-15.0,-15.0,-15.0,-15.0,-15.0,-15.0,-15.0,-15.0
@walk_express_penalty * ~(df.first_trip | df.first_trip),util_walk_express_penalty,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@adjust_tnc_shared,util_adjust_tnc_shared,30.0,30.0,30.0,30.0,30.0,30.0,30.0,30.0,30.0,30.0,30.0,30.0,30.0,30.0,30.0
