Metadata-Version: 2.1
Name: cdasws
Version: 1.7.36
Summary: NASA's Coordinated Data Analysis System Web Service Client Library
Home-page: https://cdaweb.gsfc.nasa.gov/WebServices/REST
Author: Bernie Harris
Author-email: NASA-SPDF-Support@nasa.onmicrosoft.com
License: NOSA
Description: 
        ## Synopsis
        
        This library provides a simple python interface to the data and services of 
        NASA's [Coordinated Data Analysis System](https://cdaweb.gsfc.nasa.gov/)
        (CDAS).  This library implements the client side of the 
        [CDAS RESTful web services](https://cdaweb.gsfc.nasa.gov/WebServices/REST/)
        and can return data in the 
        [SpacePy data model](https://pythonhosted.org/SpacePy/datamodel.html)
        with all the original 
        [ISTP/SPDF metadata](https://spdf.gsfc.nasa.gov/sp_use_of_cdf.html).
        Frequently asked questions concerning this library are at 
        [FAQ](https://cdaweb.gsfc.nasa.gov/WebServices/REST/py/FAQ.html).
        For more general details about the CDAS web services, see
        https://cdaweb.gsfc.nasa.gov/WebServices/REST/.
        
        ## Code Example
        
        This package contains example code calling most of the available web services.
        To run the included example, do the following
        
            python -m cdasws
        
        ---
        Also, the following [Jupyter notebook](https://jupyter.org/) demonstrate
        different features of the library:
        1. [Example](https://cdaweb.gsfc.nasa.gov/WebServices/REST/jupyter/CdasWsExample.html) ([ipynb file](https://cdaweb.gsfc.nasa.gov/WebServices/REST/jupyter/CdasWsExample.ipynb)) demonstrating use of library.
        
        ## Motivation
        
        This library hides the HTTP, JSON/XML, and CDF details of the CDAS web 
        services. A python developer only has to deal with python objects and 
        methods (primarily the SpacePy data model object with full ISTP/SPDF
        metadata).
        
        ## Dependencies
        
        Accept for common, fundamental depenencies like requests, the
        primary dependency is
        [SpacePy](https://pythonhosted.org/SpacePy/).  And SpacePy is only 
        required if you call the get_data method that returns the data in the
        SpacePy data model. Refer to the SpacePy
        documentation for the details of SpacePy's dependencies.  In particular, 
        SpacePy's data model import capability is dependent upon
        [CDF](https://cdf.gsfc.nasa.gov) which is
        not (at the time of this writing) automatically installed with SpacePy.  
        
        ## Installation
        
        As noted in the dependencies above, if you intend to call the get_data
        method, you must install [SpacePy](https://pythonhosted.org/SpacePy/) and
        the [CDF](https://cdf.gsfc.nasa.gov) library (following the
        procedures at the SpacePy and CDF web sites).
        
        Then, to install this package
        
            $ pip install -U cdasws
        
        
        ## API Reference
        
        Refer to
        [cdasws package API reference](https://cdaweb.gsfc.nasa.gov/WebServices/REST/py/cdasws/index.html)
        
        or use the standard python help mechanism.
        
            from cdasws import CdasWs
            help(CdasWs)
        
        ## Tests
        
        The tests directory contains 
        [unittest](https://docs.python.org/3/library/unittest.html)
        tests.
        
        ## Contributors
        
        Bernie Harris.  
        [e-mail](mailto:NASA-SPDF-Support@nasa.onmicrosoft.com) for support.
        
        ## License
        
        This code is licensed under the 
        [NASA Open Source Agreement](https://cdaweb.gsfc.nasa.gov/WebServices/NASA_Open_Source_Agreement_1.3.txt) (NOSA).
        
Keywords: heliophysics,coordinated data analysis,multi-mission,multi-instrument,space physics,spdf,cdaweb
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Environment :: Console
Classifier: Environment :: Web Environment
Classifier: Intended Audience :: End Users/Desktop
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: System Administrators
Classifier: Operating System :: MacOS :: MacOS X
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: POSIX
Classifier: Programming Language :: Python
Classifier: Topic :: Scientific/Engineering :: Physics
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Description-Content-Type: text/markdown
Provides-Extra: data
