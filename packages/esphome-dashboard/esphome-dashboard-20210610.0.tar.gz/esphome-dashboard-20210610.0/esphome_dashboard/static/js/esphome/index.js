const t=async(t,e)=>{e||(e={}),e.credentials="same-origin";const n=await fetch(t,e);if(!n.ok)throw new Error(`Request not successful (${n.status})`);return"application/json"===n.headers.get("content-type")?n.json():n.text()};let e,n;const s=[],o=t=>{s.push(t);const o=()=>{const o=s.indexOf(t);-1!==o&&(s.splice(o),0===s.length&&(clearTimeout(e),e=void 0,n=void 0))};if(s.length>1){if(n){const e=n;setTimeout((()=>t(e)),0)}return o}return e=window.setTimeout(a,2e3),o},a=async()=>{const o=(new Date).getTime()+2e3;try{n=await t("./ping");for(const t of s)t(n)}finally{if(void 0!==e){const t=Math.max(0,o-(new Date).getTime());e=window.setTimeout(a,t)}}},i=()=>import("./wizard-dialog-dd173073.js"),c=async()=>{i(),document.body.append(document.createElement("esphome-wizard-dialog"))};document.querySelectorAll("[data-action='wizard']").forEach((t=>{t.addEventListener("click",c),t.addEventListener("mouseover",i,{once:!0})})),o((t=>{for(let e in t){let n=document.querySelector(`#nodes .card[data-filename="${e}"]`);if(null===n)continue;let s,o=t[e];if(null===o)s="status-unknown";else if(!0===o)s="status-online",n.setAttribute("data-last-connected",Date.now().toString());else if(n.hasAttribute("data-last-connected")){const t=parseInt(n.getAttribute("data-last-connected"));s=Date.now()-t<=5e3?"status-not-responding":"status-offline"}else s="status-offline";n.classList.contains(s)||(n.classList.remove("status-unknown","status-online","status-offline","status-not-responding"),n.classList.add(s))}}));export{t as f,o as s};
