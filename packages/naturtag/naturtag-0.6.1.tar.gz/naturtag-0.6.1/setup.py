# -*- coding: utf-8 -*-
from setuptools import setup

packages = \
['naturtag',
 'naturtag.app',
 'naturtag.controllers',
 'naturtag.models',
 'naturtag.widgets']

package_data = \
{'': ['*']}

install_requires = \
['appdirs>=1.4',
 'attrs>=21.2.0,<22.0.0',
 'click-help-colors>=0.9',
 'click>=8.0',
 'pillow>=7.0',
 'pyexiv2>=2.4.0',
 'pyinaturalist>=0.13.0,<0.14.0',
 'python-dateutil>=2.0',
 'pyyaml>=5.4.1,<6.0.0',
 'requests-cache>=0.6.4,<0.7.0',
 'requests>=2.20',
 'rich>=10.0',
 'xmltodict>=0.12.0,<0.13.0']

extras_require = \
{'all': ['kivy>=2.0.0', 'kivymd>=0.104.2,<0.105.0', 'kivy-garden.contextmenu'],
 'app': ['kivy>=2.0.0', 'kivymd>=0.104.2,<0.105.0', 'kivy-garden.contextmenu'],
 'docs': ['m2r2>=0.2.7',
          'sphinx>=4.0.2,<5.0.0',
          'sphinx-autodoc-typehints>=1.11,<2.0',
          'sphinx-copybutton>=0.3,<0.4',
          'sphinx-rtd-theme>=0.5.2,<0.6.0',
          'sphinxcontrib-apidoc>=0.3,<0.4']}

entry_points = \
{'console_scripts': ['naturtag = naturtag.cli:main', 'nt = naturtag.cli:main']}

setup_kwargs = {
    'name': 'naturtag',
    'version': '0.6.1',
    'description': 'A CLI tool to add iNaturalist taxonomy metadata to local observation photos',
    'long_description': '# Naturtag\n[![Build status](https://github.com/JWCook/naturtag/workflows/Build/badge.svg)](https://github.com/JWCook/naturtag/actions)\n[![Documentation Status](https://readthedocs.org/projects/naturtag/badge/?version=latest)](https://naturtag.readthedocs.io/en/latest/?badge=latest)\n![GitHub issues](https://img.shields.io/github/issues/JWCook/naturtag)\n![PyPI](https://img.shields.io/pypi/v/naturtag?color=blue)\n![PyPI - Python Version](https://img.shields.io/pypi/pyversions/naturtag)\n\nNaturtag is a tool for tagging local observation photos with iNaturalist taxonomy & observation metadata.\nThis includes a **command-line interface**, a **graphical interface**, and can also be used as a **python package**.\n\nSee the CLI in action here:\n[![asciicast](https://asciinema.org/a/0a6gzpt7AI9QpGoq0OGMDOxqi.svg)](https://asciinema.org/a/0a6gzpt7AI9QpGoq0OGMDOxqi)\n\n# Contents\n\n* [Use Cases](#use-cases)\n* [Development Status](#development-status)\n* [Python Package](#python-package)\n* [CLI](#cli)\n    * [Installation](#cli-installation)\n    * [Usage](#cli-usage)\n    * [Data Sources](#data-sources)\n    * [Images](#images)\n    * [Keywords](#keywords)\n    * [DarwinCore](#darwincore)\n    * [Sidecar Files](#sidecar-files)\n    * [Hierarchical Keywords](#hierarchical-keywords)\n    * [Examples](#examples)\n* [GUI](#gui)\n    * [Installation](#gui-installation)\n    * [Usage](#gui-usage)\n    * [Image Selection and Tagging](#image-selection-and-tagging)\n    * [Taxon Search](#taxon-search)\n    * [Saved Species](#saved-species)\n    * [Metadata](#metadata)\n    * [Settings](#settings)\n    * [Keyboard Shortcuts](#keyboard-shortcuts)\n* [See Also](#see-also)\n\n## Use Cases\nThe purpose of this is to take some of the useful information from your own iNaturalist observations\nand embed it in your local photo collection.\n\n### Metadata for local photo organization\nIf you like the way you can search and filter your observations on iNaturalist.org and its mobile\napps, and you wish you could do that with your local photos, naturtag can help.\nIt can tag your photos with **hierarchical keywords**, which can then be used in a photo viewer or\nDAM such as **Lightroom**, [**FastPictureViewer**](https://www.fastpictureviewer.com), or\n[**XnViewMP**](https://www.xnview.com/en/xnviewmp).\n\n### Metadata for photo hosting\nNaturtag can also simplify tagging photos for photo hosting sites like Flickr. For that use case, this\ntool generates keywords in the same format as\n[iNaturalist\'s Flickr Tagger](https://www.inaturalist.org/taxa/flickr_tagger).\n\n### Metadata for other biodiversity tools\nFinally, naturtag can improve interoperability with other tools and systems that interact with biodiversity\ndata. For example, in addition to iNaturalist you may submit observations of certain species to\nanother biodiversity observation platform with a more specific focus, such as\n**eBird**, **BugGuide**, or **Mushroom Observer**. For that use case, this tool supports\n[Simple Darwin Core](https://dwc.tdwg.org/simple).\n\n# Development Status\nSee [Issues](https://github.com/JWCook/naturtag/issues?q=) for planned features and\ncurrent progress.\n\nIf you have any suggestions, questions, or requests, please\n[create an issue](https://github.com/JWCook/naturtag/issues/new/choose), or ping me (**@jcook**)\non the [iNaturalist Community Forum](https://forum.inaturalist.org/c/general/14).\n\nThis is currently just a small hobby project, and still fairly unpolished. All the features\ndescribed below are functional, however, and plenty more are planned. I am intermittently working\non this while maintaining a number of other libraries that are (or will be) used in Naturtag.\n\n# Python Package\nSee [naturtag documentation on ReadTheDocs](https://naturtag.readthedocs.io) for details on the\npython package, which lets you use most of naturtag\'s features in your own scripts or applications.\n\nGeneric iNaturalist data access features that aren\'t specific to naturtag are contributed upstream\nto [pyinaturalist](https://pyinaturalist.readthedocs.io/en/stable/).\n\n# CLI\n\n## CLI Installation\nInstall the latest stable version with pip:\n```bash\npip install naturtag\n```\n\nOr, if you would like to use the latest development version:\n```bash\npip install --pre naturtag\n```\n\nTo run on python 3.7, you will also need the\n[`importlib-metadata`](https://docs.python.org/3/library/importlib.metadata.html)\nbackport:\n```bash\npip install importlib-metadata\n```\nFor python 3.8+, this is included in the standard library.\n\n## CLI Usage\nThis package provides the command `naturtag`, also aliased to `nt`.\n\n```yaml\nUsage: naturtag [OPTIONS] [IMAGES]...\n\n  Get taxonomy tags from an iNaturalist observation or taxon, and write them\n  either to the console or to local image metadata.\n\nOptions:\n  -c, --common-names      Include common names for all ranks that have them\n  -d, --darwin-core       Generate Darwin Core metadata\n  -f, --flickr-format     Output tags in a Flickr-compatible format\n  -h, --hierarchical      Generate pipe-delimited hierarchical keywords\n  -o, --observation TEXT  Observation ID or URL\n  -t, --taxon TEXT        Taxon ID or URL\n  -x, --create-xmp        Create XMP sidecar file if it doesn\'t already exist\n  -v, --verbose           Show additional information\n  --help                  Show this message and exit.\n```\n\n### Species & Observation IDs\nEither a species or observation may be specified, either by ID or URL.\nFor example, all the following options will fetch the same taxonomy metadata:\n```\nnaturtag -t 48978\nnaturtag -t https://www.inaturalist.org/taxa/48978-Dirona-picta\nnaturtag -o 45524803\nnaturtag -o https://www.inaturalist.org/observations/45524803\n```\n\nThe difference is that specifying a species (`-t, --taxon`) will fetch only\ntaxonomy metadata, while specifying an observation (`-o, --observation`)\nwill fetch taxonomy plus observation metadata.\n\n### Species Search\nYou may also search for species by name, for example `naturtag -t cardinal`.\nIf there are multiple results, you will be prompted to choose from the top 10 search results:\n\n![Screenshot](assets/screenshots/cli-taxon-search.png)\n\n### Images\nMultiple paths are supported, as well as glob patterns, for example:\n`0001.jpg IMG*.jpg ~/observations/**.jpg`\nIf no images are specified, the generated keywords will be printed.\n\n### Keywords\nKeywords will be generated in the format:\n`taxonomy:{rank}={name}`\n\n### DarwinCore\nIf an observation is specified, DwC metadata will also be generated, in the\nform of XMP tags. Among other things, this includes taxonomy tags in the\nformat:\n`dwc:{rank}="{name}"`\n\n### Sidecar Files\nBy default, XMP tags will be written to a sidecar file if it already exists.\nUse the `-x` option to create a new one if it doesn\'t exist.\n\n### Hierarchical Keywords\nIf specified (`-h`), hierarchical keywords will be generated. These will be\ninterpreted as a tree structure by image viewers that support them.\n\nFor example, the following keywords:\n```bash\nAnimalia\nAnimalia|Arthropoda\nAnimalia|Arthropoda|Chelicerata\nAnimalia|Arthropoda|Hexapoda\n```\n\nWill translate into the following tree structure:\n```\nAnimalia\n    ┗━Arthropoda\n        ┣━Chelicerata\n        ┗━Hexapoda\n```\n\n### Examples\n\nJust generate keywords from a taxon, without writing to a file:\n```ini\n$ naturtag -ct 48978\nFetching taxon 48978\n12 parent taxa found\n22 keywords generated\n\ntaxonomy:kingdom=Animalia\ntaxonomy:phylum=Mollusca\ntaxonomy:class=Gastropoda\ntaxonomy:subclass=Heterobranchia\ntaxonomy:infraclass=Euthyneura\ntaxonomy:subterclass=Ringipleura\ntaxonomy:superorder=Nudipleura\ntaxonomy:order=Nudibranchia\ntaxonomy:suborder=Cladobranchia\ntaxonomy:superfamily=Proctonotoidea\ntaxonomy:family=Dironidae\ntaxonomy:genus=Dirona\n"taxonomy:species=Dirona picta"\nAnimals\nMolluscs\nGastropods\n"Heterobranch Gastropods"\n"Euthyneuran Gastropods"\n"Nudipleuran Slugs"\nNudibranchs\n"Colorful Dirona"\ninaturalist:taxon_id=48978\n```\n\nGenerate both keywords and DarwinCore metadata for an observation, and write to\ntwo images and one XMP sidecar:\n```\n$ naturtag -co 45524803 img00001.jpg img00002.jpg\nFetching observation 45524803\nFetching taxon 48978\n12 parent taxa found\n23 keywords generated\nGetting darwincore terms for observation 45524803\nWriting 39 tags to img00001.jpg\nWriting 37 tags to img00001.xmp\nWriting 39 tags to img00002.jpg\nNo existing XMP sidecar file found for img00002.jpg; skipping\n```\n[See example of XMP metadata generated by this command](assets/example_45524803.xmp).\n\n# GUI\nThis project also includes a graphical frontend, although it\'s very early in development.\n\n## GUI Installation\nMy goal is to get this packaged into more convenient platform-specific builds\n(a `.exe` build for Windows, for example), but for now it can take a bit of work to get the GUI\nup and running. If you are interested in trying this out and you run into issues, please let me\nknow and I can help.\n\nTo install:\n```\npip install naturtag[ui]\n```\nSome additional dependencies are required on Windows:\n```\npip install naturtag[ui-win]\n```\n\nTo launch, run:\n```\npython -m naturtag.ui\n```\n\n##  GUI Usage\n\n### Image Selection and Tagging\nThe basic UI components are shown below:\n![Screenshot](assets/screenshots/gui-image-selector.png)\n\n1. Drag & drop images or folders into the window.\n2. Or, select files via the file browser on the right\n3. Enter an iNaturalist observation ID or taxon ID (iNaturalist URLs also work here)\n4. Click the \'Run\' button in the lower-left to tag the selected images\n\nOther things to do:\n* **Middle-click** an image to remove it\n* **Right-click** an image for a context menu with more actions\n* See [Metadata](#metadata) for more details\n\n### Species Search\nIn the likely event that you don\'t already know the taxon ID, click the\n\'Find a Species\' button to go to the taxon search screen. You can start with searching by name,\nwith autocompletion support:\n\n![Screenshot](assets/screenshots/gui-taxon-search.png)\n\nYou can also run a full search using the additional filters. For example, to search for plants\nand fungi with \'goose\' in either the species or genus name:\n\n![Screenshot](assets/screenshots/gui-taxon-search-results.png)\n\n### Saved Species\nThe additional tabs on the taxon screen contain:\n* History of recently viewed taxa\n* Most frequently viewed taxa\n* Starred taxa\n\nTo save a particular taxon for future reference, click the ✩ icon in the top left of its info panel,\nand it will be saved in the ★ tab. These items can be re-ordered via **Right-click** -> **Move to top**.\n(Unfortunately, drag-and-drop functionality is not currently possible for list items).\n\n### Metadata\n**Right-click** an image and select **Copy Flickr tags** to copy keyword tags compatible with Flickr.\n![Screenshot](assets/screenshots/gui-image-context-menu.png)\n\nAlso, a very simple metadata view is included. To open it, **Right-click** an image and select\n**View metadata**.\n\n![Screenshot](assets/screenshots/gui-metadata.png)\n\n### Settings\nThere are also some settings to customize the metadata that your images will be tagged with,\nas well as iNaturalist info used in search filters. And yes, there is a dark mode, because\nwhy not.\n\n![Screenshot](assets/screenshots/gui-settings.png)\n\nSee [CLI Usage](#cli-usage) for more details on these settings.\n\n### Keyboard Shortcuts\nSome keyboard shortcuts are included for convenience:\n\nKey(s)          | Action                    | Screen\n----            |----                       |----------\nF11             | Toggle fullscreen         | All\nCtrl+O          | Open file chooser         | Image selection\nShift+Ctrl+O    | Open file chooser (dirs)  | Image selection\nCtrl+Enter      | Run image tagger          | Image selection\nCtrl+Enter      | Run taxon search          | Taxon search\nShift+Ctrl+X    | Clear selected images     | Image selection\nShift+Ctrl+X    | Clear search filters      | Taxon search\nCtrl+S          | Open settings screen      | All\nCtrl+Backspace  | Return to main screen     | All\nCtrl+Q          | Quit                      | All\n\n# See Also\n* For generating keyword _collections_, see the related tool\n  [`taxon-keyword-gen`](https://github.com/JWCook/taxon-keyword-gen).\n* This project uses [`pyinaturalist`](https://github.com/niconoe/pyinaturalist), a python API\n  client for iNaturalist. Refer to that project for more data access tools.\n',
    'author': 'Jordan Cook',
    'author_email': 'None',
    'maintainer': 'None',
    'maintainer_email': 'None',
    'url': 'https://github.com/JWCook/naturtag',
    'packages': packages,
    'package_data': package_data,
    'install_requires': install_requires,
    'extras_require': extras_require,
    'entry_points': entry_points,
    'python_requires': '>=3.7,<4.0',
}


setup(**setup_kwargs)
