# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

# Export this package's modules as members:
from .certificate import *
from .certificate_authority import *
from .certificate_authority_certificate_revocation_list_iam_policy import *
from .certificate_authority_iam_policy import *
from .reusable_config_iam_policy import *
from ._inputs import *
from . import outputs

def _register_module():
    import pulumi
    from ... import _utilities


    class Module(pulumi.runtime.ResourceModule):
        _version = _utilities.get_semver_version()

        def version(self):
            return Module._version

        def construct(self, name: str, typ: str, urn: str) -> pulumi.Resource:
            if typ == "google-native:privateca/v1beta1:Certificate":
                return Certificate(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "google-native:privateca/v1beta1:CertificateAuthority":
                return CertificateAuthority(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "google-native:privateca/v1beta1:CertificateAuthorityCertificateRevocationListIamPolicy":
                return CertificateAuthorityCertificateRevocationListIamPolicy(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "google-native:privateca/v1beta1:CertificateAuthorityIamPolicy":
                return CertificateAuthorityIamPolicy(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "google-native:privateca/v1beta1:ReusableConfigIamPolicy":
                return ReusableConfigIamPolicy(name, pulumi.ResourceOptions(urn=urn))
            else:
                raise Exception(f"unknown resource type {typ}")


    _module_instance = Module()
    pulumi.runtime.register_resource_module("google-native", "privateca/v1beta1", _module_instance)

_register_module()
