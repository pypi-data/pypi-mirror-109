# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

# Export this package's modules as members:
from .dataset import *
from .job import *
from .routine import *
from .row_access_policy_iam_policy import *
from .table import *
from .table_iam_policy import *
from ._inputs import *
from . import outputs

def _register_module():
    import pulumi
    from ... import _utilities


    class Module(pulumi.runtime.ResourceModule):
        _version = _utilities.get_semver_version()

        def version(self):
            return Module._version

        def construct(self, name: str, typ: str, urn: str) -> pulumi.Resource:
            if typ == "google-native:bigquery/v2:Dataset":
                return Dataset(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "google-native:bigquery/v2:Job":
                return Job(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "google-native:bigquery/v2:Routine":
                return Routine(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "google-native:bigquery/v2:RowAccessPolicyIamPolicy":
                return RowAccessPolicyIamPolicy(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "google-native:bigquery/v2:Table":
                return Table(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "google-native:bigquery/v2:TableIamPolicy":
                return TableIamPolicy(name, pulumi.ResourceOptions(urn=urn))
            else:
                raise Exception(f"unknown resource type {typ}")


    _module_instance = Module()
    pulumi.runtime.register_resource_module("google-native", "bigquery/v2", _module_instance)

_register_module()
