# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

# Export this package's modules as members:
from .schema import *
from .schema_iam_policy import *
from .snapshot import *
from .snapshot_iam_policy import *
from .subscription import *
from .subscription_iam_policy import *
from .topic import *
from .topic_iam_policy import *
from ._inputs import *
from . import outputs

def _register_module():
    import pulumi
    from ... import _utilities


    class Module(pulumi.runtime.ResourceModule):
        _version = _utilities.get_semver_version()

        def version(self):
            return Module._version

        def construct(self, name: str, typ: str, urn: str) -> pulumi.Resource:
            if typ == "google-native:pubsub/v1:Schema":
                return Schema(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "google-native:pubsub/v1:SchemaIamPolicy":
                return SchemaIamPolicy(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "google-native:pubsub/v1:Snapshot":
                return Snapshot(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "google-native:pubsub/v1:SnapshotIamPolicy":
                return SnapshotIamPolicy(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "google-native:pubsub/v1:Subscription":
                return Subscription(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "google-native:pubsub/v1:SubscriptionIamPolicy":
                return SubscriptionIamPolicy(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "google-native:pubsub/v1:Topic":
                return Topic(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "google-native:pubsub/v1:TopicIamPolicy":
                return TopicIamPolicy(name, pulumi.ResourceOptions(urn=urn))
            else:
                raise Exception(f"unknown resource type {typ}")


    _module_instance = Module()
    pulumi.runtime.register_resource_module("google-native", "pubsub/v1", _module_instance)

_register_module()
