Metadata-Version: 2.1
Name: rank-similarity
Version: 0.0.1
Summary: Rank Similarity is a set of non-linear classification and transform tools for large datasets. 
Home-page: https://github.com/KatharineShapcott/rank-similarity
Maintainer: Katharine Shapcott
Maintainer-email: katharine.shapcott@esi-frankfurt.de
License: new BSD
Download-URL: https://github.com/KatharineShapcott/rank-similarity
Platform: UNKNOWN
Classifier: Intended Audience :: Science/Research
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved
Classifier: Programming Language :: Python
Classifier: Topic :: Software Development
Classifier: Topic :: Scientific/Engineering
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: POSIX
Classifier: Operating System :: Unix
Classifier: Operating System :: MacOS
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Description-Content-Type: text/markdown
Requires-Dist: scikit-learn (>=0.23)
Requires-Dist: numpy (>=1.14.6)
Requires-Dist: scipy (>=1.1.0)
Provides-Extra: docs
Requires-Dist: sphinx ; extra == 'docs'
Requires-Dist: sphinx-gallery ; extra == 'docs'
Requires-Dist: sphinx-rtd-theme ; extra == 'docs'
Requires-Dist: numpydoc ; extra == 'docs'
Requires-Dist: matplotlib ; extra == 'docs'
Provides-Extra: tests
Requires-Dist: pytest ; extra == 'tests'

# Rank Similarity

Rank Similarity is a set of non-linear classification and transform tools for large multi-dimensional datasets that use the scikit-learn API. 

## Installation
### Dependencies
rank-similarity requires:

- Scikit-learn (>= 0.23)
- Python (>= 3.7)
- NumPy (>= 1.14.6)
- SciPy (>= 1.1.0)

Optionally for plotting examples:
- matplotlib (>= 2.2.2)

### Install via pip

```
pip install rank-similarity
```

### Development version

To get the latest development version, clone the GitHub repository:

```
git clone https://github.com/KatharineShapcott/rank-similarity
```

## Usage

``` python
from ranksim import RankSimilarityClassifier
X = [[0, 1], [1, 0]]
y = [0, 1]
clf = RankSimilarityClassifier()
clf.fit(X, y)
pred = clf.predict(X)
```

## More Information

### Documentation
More details and background information is available in the
[online documentation](https://katharineshapcott.github.io/rank-similarity/).

### License
The package is new BSD licensed.

### Citation
Please cite the following publication (in preparation) [[1]](#1).

<a id="1">[1]</a> 
Shapcott, Bird, & Singer. Confusion-based rank similarity filters for computationally-efficient machine learning on high dimensional data. In preperation. (2021)


