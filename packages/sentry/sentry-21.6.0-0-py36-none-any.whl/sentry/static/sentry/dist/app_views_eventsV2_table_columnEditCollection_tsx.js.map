{"version":3,"sources":["webpack:///./app/utils/userselect.tsx","webpack:///./app/utils/touch.tsx","webpack:///./app/views/eventsV2/table/columnEditCollection.tsx"],"names":["setBodyUserSelect","nextValues","previousValues","userSelect","document","body","style","MozUserSelect","msUserSelect","webkitUserSelect","getPointerPosition","event","property","actual","nativeEvent","window","TouchEvent","targetTouches","MouseEvent","PlaceholderPosition","DRAG_CLASS","ColumnEditCollection","isDragging","draggingIndex","draggingTargetIndex","draggingGrabbedOffset","left","top","React","props","onChange","columns","kind","field","newColumn","FieldValueKind","index","column","newColumns","splice","state","includes","type","preventDefault","stopPropagation","pointerX","pointerY","dragOffsetX","x","dragOffsetY","y","dragGhostRef","current","ghostDOM","dragItems","querySelectorAll","targetIndex","Array","from","findIndex","dragItem","rects","getBoundingClientRect","thresholdStart","scrollY","thresholdEnd","height","setState","sourceIndex","cleanUpListeners","previousUserSelect","removed","undefined","this","portal","createElement","position","zIndex","String","theme","appendChild","removeChild","isGhost","join","removeEventListener","onDragMove","onDragEnd","find","n","contains","currentTarget","addEventListener","gridColumns","Number","col","ghost","Ghost","ref","renderItem","ReactDOM","i","canDelete","fieldOptions","placeholder","DragPlaceholder","className","keyForColumn","TOP","BOTTOM","RowContainer","aria-label","t","onMouseDown","startDrag","onTouchStart","icon","size","borderless","fieldValue","value","handleUpdateColumn","takeFocus","length","onClick","removeColumn","organization","canAdd","title","Math","max","map","renderGhost","Heading","StyledSectionHeading","Actions","label","handleAddColumn","disabled","isCircled","features","handleAddEquation","space","p","background","borderRadius","border","SectionHeading"],"mappings":"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","file":"app_views_eventsV2_table_columnEditCollection_tsx.66d77f30b9032776c0ad.js","sourcesContent":["export type UserSelectValues = {\n  userSelect: string | null;\n  MozUserSelect: string | null;\n  msUserSelect: string | null;\n  webkitUserSelect: string | null;\n};\n\nexport const setBodyUserSelect = (nextValues: UserSelectValues): UserSelectValues => {\n  // NOTE: Vendor prefixes other than `ms` should begin with a capital letter.\n  // ref: https://reactjs.org/docs/dom-elements.html#style\n\n  const previousValues = {\n    userSelect: document.body.style.userSelect,\n    // MozUserSelect is not typed in TS\n    // @ts-expect-error\n    MozUserSelect: document.body.style.MozUserSelect,\n    // msUserSelect is not typed in TS\n    // @ts-expect-error\n    msUserSelect: document.body.style.msUserSelect,\n    webkitUserSelect: document.body.style.webkitUserSelect,\n  };\n\n  document.body.style.userSelect = nextValues.userSelect || '';\n  // MozUserSelect is not typed in TS\n  // @ts-expect-error\n  document.body.style.MozUserSelect = nextValues.MozUserSelect || '';\n  // msUserSelect is not typed in TS\n  // @ts-expect-error\n  document.body.style.msUserSelect = nextValues.msUserSelect || '';\n  document.body.style.webkitUserSelect = nextValues.webkitUserSelect || '';\n\n  return previousValues;\n};\n","function isReactEvent(\n  maybe: MouseEvent | TouchEvent | React.MouseEvent | React.TouchEvent\n): maybe is React.MouseEvent | React.TouchEvent {\n  return 'nativeEvent' in maybe;\n}\n\n/**\n * Handle getting position out of both React and Raw DOM events\n * as both are handled here due to mousedown/mousemove events\n * working differently.\n */\nexport function getPointerPosition(\n  event: MouseEvent | TouchEvent | React.MouseEvent | React.TouchEvent,\n  property: 'pageX' | 'pageY' | 'clientX' | 'clientY'\n): number {\n  const actual = isReactEvent(event) ? event.nativeEvent : event;\n  if (window.TouchEvent && actual instanceof TouchEvent) {\n    return actual.targetTouches[0][property];\n  }\n  if (actual instanceof MouseEvent) {\n    return actual[property];\n  }\n  return 0;\n}\n","import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport styled from '@emotion/styled';\n\nimport Feature from 'app/components/acl/feature';\nimport Button from 'app/components/button';\nimport {SectionHeading} from 'app/components/charts/styles';\nimport {IconAdd, IconDelete, IconGrabbable} from 'app/icons';\nimport {t} from 'app/locale';\nimport space from 'app/styles/space';\nimport {LightWeightOrganization} from 'app/types';\nimport {Column} from 'app/utils/discover/fields';\nimport theme from 'app/utils/theme';\nimport {getPointerPosition} from 'app/utils/touch';\nimport {setBodyUserSelect, UserSelectValues} from 'app/utils/userselect';\n\nimport {generateFieldOptions} from '../utils';\n\nimport {QueryField} from './queryField';\nimport {FieldValueKind} from './types';\n\ntype Props = {\n  // Input columns\n  columns: Column[];\n  fieldOptions: ReturnType<typeof generateFieldOptions>;\n  // Fired when columns are added/removed/modified\n  onChange: (columns: Column[]) => void;\n  organization: LightWeightOrganization;\n  className?: string;\n};\n\ntype State = {\n  isDragging: boolean;\n  draggingIndex: undefined | number;\n  draggingTargetIndex: undefined | number;\n  draggingGrabbedOffset: undefined | {x: number; y: number};\n  left: undefined | number;\n  top: undefined | number;\n};\n\nconst DRAG_CLASS = 'draggable-item';\nconst GHOST_PADDING = 4;\nconst MAX_COL_COUNT = 20;\n\nenum PlaceholderPosition {\n  TOP,\n  BOTTOM,\n}\n\nclass ColumnEditCollection extends React.Component<Props, State> {\n  state: State = {\n    isDragging: false,\n    draggingIndex: void 0,\n    draggingTargetIndex: void 0,\n    draggingGrabbedOffset: void 0,\n    left: void 0,\n    top: void 0,\n  };\n\n  componentDidMount() {\n    if (!this.portal) {\n      const portal = document.createElement('div');\n\n      portal.style.position = 'absolute';\n      portal.style.top = '0';\n      portal.style.left = '0';\n      portal.style.zIndex = String(theme.zIndex.modal);\n\n      this.portal = portal;\n\n      document.body.appendChild(this.portal);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.portal) {\n      document.body.removeChild(this.portal);\n    }\n    this.cleanUpListeners();\n  }\n\n  previousUserSelect: UserSelectValues | null = null;\n  portal: HTMLElement | null = null;\n  dragGhostRef = React.createRef<HTMLDivElement>();\n\n  keyForColumn(column: Column, isGhost: boolean): string {\n    if (column.kind === 'function') {\n      return [...column.function, isGhost].join(':');\n    }\n    return [...column.field, isGhost].join(':');\n  }\n\n  cleanUpListeners() {\n    if (this.state.isDragging) {\n      window.removeEventListener('mousemove', this.onDragMove);\n      window.removeEventListener('touchmove', this.onDragMove);\n      window.removeEventListener('mouseup', this.onDragEnd);\n      window.removeEventListener('touchend', this.onDragEnd);\n    }\n  }\n\n  // Signal to the parent that a new column has been added.\n  handleAddColumn = () => {\n    const newColumn: Column = {kind: 'field', field: ''};\n    this.props.onChange([...this.props.columns, newColumn]);\n  };\n\n  handleAddEquation = () => {\n    const newColumn: Column = {kind: FieldValueKind.EQUATION, field: ''};\n    this.props.onChange([...this.props.columns, newColumn]);\n  };\n\n  handleUpdateColumn = (index: number, column: Column) => {\n    const newColumns = [...this.props.columns];\n    newColumns.splice(index, 1, column);\n    this.props.onChange(newColumns);\n  };\n\n  removeColumn(index: number) {\n    const newColumns = [...this.props.columns];\n    newColumns.splice(index, 1);\n    this.props.onChange(newColumns);\n  }\n\n  startDrag(\n    event: React.MouseEvent<HTMLButtonElement> | React.TouchEvent<HTMLButtonElement>,\n    index: number\n  ) {\n    const isDragging = this.state.isDragging;\n    if (isDragging || !['mousedown', 'touchstart'].includes(event.type)) {\n      return;\n    }\n    event.preventDefault();\n    event.stopPropagation();\n\n    const top = getPointerPosition(event, 'pageY');\n    const left = getPointerPosition(event, 'pageX');\n\n    // Compute where the user clicked on the drag handle. Avoids the element\n    // jumping from the cursor on mousedown.\n    const {x, y} = Array.from(document.querySelectorAll(`.${DRAG_CLASS}`))\n      .find(n => n.contains(event.currentTarget))!\n      .getBoundingClientRect();\n\n    const draggingGrabbedOffset = {\n      x: left - x + GHOST_PADDING,\n      y: top - y + GHOST_PADDING,\n    };\n\n    // prevent the user from selecting things when dragging a column.\n    this.previousUserSelect = setBodyUserSelect({\n      userSelect: 'none',\n      MozUserSelect: 'none',\n      msUserSelect: 'none',\n      webkitUserSelect: 'none',\n    });\n\n    // attach event listeners so that the mouse cursor can drag anywhere\n    window.addEventListener('mousemove', this.onDragMove);\n    window.addEventListener('touchmove', this.onDragMove);\n    window.addEventListener('mouseup', this.onDragEnd);\n    window.addEventListener('touchend', this.onDragEnd);\n\n    this.setState({\n      isDragging: true,\n      draggingIndex: index,\n      draggingTargetIndex: index,\n      draggingGrabbedOffset,\n      top,\n      left,\n    });\n  }\n\n  onDragMove = (event: MouseEvent | TouchEvent) => {\n    const {isDragging, draggingTargetIndex, draggingGrabbedOffset} = this.state;\n\n    if (!isDragging || !['mousemove', 'touchmove'].includes(event.type)) {\n      return;\n    }\n    event.preventDefault();\n    event.stopPropagation();\n\n    const pointerX = getPointerPosition(event, 'pageX');\n    const pointerY = getPointerPosition(event, 'pageY');\n\n    const dragOffsetX = draggingGrabbedOffset?.x ?? 0;\n    const dragOffsetY = draggingGrabbedOffset?.y ?? 0;\n\n    if (this.dragGhostRef.current) {\n      // move the ghost box\n      const ghostDOM = this.dragGhostRef.current;\n      // Adjust so cursor is over the grab handle.\n      ghostDOM.style.left = `${pointerX - dragOffsetX}px`;\n      ghostDOM.style.top = `${pointerY - dragOffsetY}px`;\n    }\n\n    const dragItems = document.querySelectorAll(`.${DRAG_CLASS}`);\n    // Find the item that the ghost is currently over.\n    const targetIndex = Array.from(dragItems).findIndex(dragItem => {\n      const rects = dragItem.getBoundingClientRect();\n      const top = pointerY;\n\n      const thresholdStart = window.scrollY + rects.top;\n      const thresholdEnd = window.scrollY + rects.top + rects.height;\n\n      return top >= thresholdStart && top <= thresholdEnd;\n    });\n\n    if (targetIndex >= 0 && targetIndex !== draggingTargetIndex) {\n      this.setState({draggingTargetIndex: targetIndex});\n    }\n  };\n\n  onDragEnd = (event: MouseEvent | TouchEvent) => {\n    if (!this.state.isDragging || !['mouseup', 'touchend'].includes(event.type)) {\n      return;\n    }\n\n    const sourceIndex = this.state.draggingIndex;\n    const targetIndex = this.state.draggingTargetIndex;\n    if (typeof sourceIndex !== 'number' || typeof targetIndex !== 'number') {\n      return;\n    }\n\n    // remove listeners that were attached in startColumnDrag\n    this.cleanUpListeners();\n\n    // restore body user-select values\n    if (this.previousUserSelect) {\n      setBodyUserSelect(this.previousUserSelect);\n      this.previousUserSelect = null;\n    }\n\n    // Reorder columns and trigger change.\n    const newColumns = [...this.props.columns];\n    const removed = newColumns.splice(sourceIndex, 1);\n    newColumns.splice(targetIndex, 0, removed[0]);\n    this.props.onChange(newColumns);\n\n    this.setState({\n      isDragging: false,\n      left: undefined,\n      top: undefined,\n      draggingIndex: undefined,\n      draggingTargetIndex: undefined,\n      draggingGrabbedOffset: undefined,\n    });\n  };\n\n  renderGhost(gridColumns: number) {\n    const {isDragging, draggingIndex, draggingGrabbedOffset} = this.state;\n\n    const index = draggingIndex;\n    if (typeof index !== 'number' || !isDragging || !this.portal) {\n      return null;\n    }\n    const dragOffsetX = draggingGrabbedOffset?.x ?? 0;\n    const dragOffsetY = draggingGrabbedOffset?.y ?? 0;\n\n    const top = Number(this.state.top) - dragOffsetY;\n    const left = Number(this.state.left) - dragOffsetX;\n    const col = this.props.columns[index];\n\n    const style = {\n      top: `${top}px`,\n      left: `${left}px`,\n    };\n    const ghost = (\n      <Ghost ref={this.dragGhostRef} style={style}>\n        {this.renderItem(col, index, {isGhost: true, gridColumns})}\n      </Ghost>\n    );\n\n    return ReactDOM.createPortal(ghost, this.portal);\n  }\n\n  renderItem(\n    col: Column,\n    i: number,\n    {\n      canDelete = true,\n      isGhost = false,\n      gridColumns = 2,\n    }: {canDelete?: boolean; isGhost?: boolean; gridColumns: number}\n  ) {\n    const {fieldOptions} = this.props;\n    const {isDragging, draggingTargetIndex, draggingIndex} = this.state;\n\n    let placeholder: React.ReactNode = null;\n    // Add a placeholder above the target row.\n    if (isDragging && isGhost === false && draggingTargetIndex === i) {\n      placeholder = (\n        <DragPlaceholder\n          key={`placeholder:${this.keyForColumn(col, isGhost)}`}\n          className={DRAG_CLASS}\n        />\n      );\n    }\n\n    // If the current row is the row in the drag ghost return the placeholder\n    // or a hole if the placeholder is elsewhere.\n    if (isDragging && isGhost === false && draggingIndex === i) {\n      return placeholder;\n    }\n\n    const position =\n      Number(draggingTargetIndex) <= Number(draggingIndex)\n        ? PlaceholderPosition.TOP\n        : PlaceholderPosition.BOTTOM;\n\n    return (\n      <React.Fragment key={`${i}:${this.keyForColumn(col, isGhost)}`}>\n        {position === PlaceholderPosition.TOP && placeholder}\n        <RowContainer className={isGhost ? '' : DRAG_CLASS}>\n          {canDelete ? (\n            <Button\n              aria-label={t('Drag to reorder')}\n              onMouseDown={event => this.startDrag(event, i)}\n              onTouchStart={event => this.startDrag(event, i)}\n              icon={<IconGrabbable size=\"xs\" />}\n              size=\"zero\"\n              borderless\n            />\n          ) : (\n            <span />\n          )}\n          <QueryField\n            fieldOptions={fieldOptions}\n            gridColumns={gridColumns}\n            fieldValue={col}\n            onChange={value => this.handleUpdateColumn(i, value)}\n            takeFocus={i === this.props.columns.length - 1}\n          />\n          {canDelete ? (\n            <Button\n              aria-label={t('Remove column')}\n              onClick={() => this.removeColumn(i)}\n              icon={<IconDelete />}\n              borderless\n            />\n          ) : (\n            <span />\n          )}\n        </RowContainer>\n        {position === PlaceholderPosition.BOTTOM && placeholder}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    const {className, columns, organization} = this.props;\n    const canDelete = columns.length > 1;\n    const canAdd = columns.length < MAX_COL_COUNT;\n    const title = canAdd\n      ? undefined\n      : `Sorry, you reached the maximum number of columns. Delete columns to add more.`;\n\n    // Get the longest number of columns so we can layout the rows.\n    // We always want at least 2 columns.\n    const gridColumns = Math.max(\n      ...columns.map(col =>\n        col.kind === 'function' && col.function[2] !== undefined ? 3 : 2\n      )\n    );\n\n    return (\n      <div className={className}>\n        {this.renderGhost(gridColumns)}\n        <RowContainer>\n          <Heading gridColumns={gridColumns}>\n            <StyledSectionHeading>{t('Tag / Field / Function')}</StyledSectionHeading>\n            <StyledSectionHeading>{t('Field Parameter')}</StyledSectionHeading>\n          </Heading>\n        </RowContainer>\n        {columns.map((col: Column, i: number) =>\n          this.renderItem(col, i, {canDelete, gridColumns})\n        )}\n        <RowContainer>\n          <Actions>\n            <Button\n              size=\"small\"\n              label={t('Add a Column')}\n              onClick={this.handleAddColumn}\n              title={title}\n              disabled={!canAdd}\n              icon={<IconAdd isCircled size=\"xs\" />}\n            >\n              {t('Add a Column')}\n            </Button>\n            <Feature organization={organization} features={['discover-arithmetic']}>\n              <Button\n                size=\"small\"\n                label={t('Add an Equation')}\n                onClick={this.handleAddEquation}\n                title={title}\n                disabled={!canAdd}\n                icon={<IconAdd isCircled size=\"xs\" />}\n              >\n                {t('Add an Equation')}\n              </Button>\n            </Feature>\n          </Actions>\n        </RowContainer>\n      </div>\n    );\n  }\n}\n\nconst RowContainer = styled('div')`\n  display: grid;\n  grid-template-columns: ${space(3)} 1fr ${space(3)};\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  touch-action: none;\n  padding-bottom: ${space(1)};\n`;\n\nconst Ghost = styled('div')`\n  background: ${p => p.theme.background};\n  display: block;\n  position: absolute;\n  padding: ${GHOST_PADDING}px;\n  border-radius: ${p => p.theme.borderRadius};\n  box-shadow: 0 0 15px rgba(0, 0, 0, 0.15);\n  width: 710px;\n  opacity: 0.8;\n  cursor: grabbing;\n  padding-right: ${space(2)};\n\n  & > ${RowContainer} {\n    padding-bottom: 0;\n  }\n\n  & svg {\n    cursor: grabbing;\n  }\n`;\n\nconst DragPlaceholder = styled('div')`\n  margin: 0 ${space(3)} ${space(1)} ${space(3)};\n  border: 2px dashed ${p => p.theme.border};\n  border-radius: ${p => p.theme.borderRadius};\n  height: 41px;\n`;\n\nconst Actions = styled('div')`\n  grid-column: 2 / 3;\n\n  & button {\n    margin-right: ${space(1)};\n  }\n`;\n\nconst Heading = styled('div')<{gridColumns: number}>`\n  grid-column: 2 / 3;\n\n  /* Emulate the grid used in the column editor rows */\n  display: grid;\n  grid-template-columns: repeat(${p => p.gridColumns}, 1fr);\n  grid-column-gap: ${space(1)};\n`;\n\nconst StyledSectionHeading = styled(SectionHeading)`\n  margin: 0;\n`;\n\nexport default ColumnEditCollection;\n"],"sourceRoot":""}