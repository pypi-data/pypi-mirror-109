{"version":3,"sources":["webpack:///./app/utils/routeTitle.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/components/forms/formPanel.tsx","webpack:///./app/views/settings/components/forms/jsonForm.tsx","webpack:///./app/views/settings/project/permissionAlert.tsx","webpack:///./app/views/settings/project/projectOwnership/addCodeOwnerModal.tsx","webpack:///./app/views/settings/project/projectOwnership/rulesPanel.tsx","webpack:///./app/views/settings/project/projectOwnership/codeowners.tsx","webpack:///./app/views/settings/project/projectOwnership/index.tsx"],"names":["routeName","orgSlug","withSentry","projectSlug","tmplBase","tmpl","AsyncView","title","this","getTitle","renderComponent","AsyncComponent","FormPanel","props","fields","access","disabled","additionalFieldProps","renderFooter","renderHeader","otherProps","id","sanitizeQuerySelector","undefined","map","field","defaultValue","fieldWithoutDefaultValue","disabledReason","highlighted","name","React","JsonForm","location","hash","scrollToHash","nextProps","setState","toHash","scrollToElement","decodeURIComponent","align","offset","err","Sentry","fieldsWithVisibleProp","filter","defined","visible","length","every","formPanelProps","shouldDisplayForm","forms","features","state","formGroup","i","renderForm","withRouter","PermissionAlert","hasAccess","type","icon","size","t","AddCodeOwnerModal","codeownerFile","codeMappingId","isLoading","error","errorJSON","organization","api","requestPromise","slug","method","data","project","codeMappings","raw","codeMapping","find","mapping","toString","handleAddedFile","responseJSON","onSave","closeModal","SourceFileBody","isCircled","color","filepath","href","html_url","target","baseUrl","integrationId","provider","tct","userMappingsLink","to","key","teamMappingsLink","Container","mini","NoSourceFileBody","Fragment","Header","Body","Footer","integrations","closeButton","IntegrationsList","integration","getIntegrationIcon","IntegrationName","apiMethod","apiEndpoint","hideFooter","initialData","StyledSelectField","label","choices","cm","repoName","onChange","fetchFile","required","inline","flexibleControlStateSize","stacked","FileResult","sourceFile","noSourceFile","errorMessage","priority","onClick","addFile","Component","withApi","SelectField","PanelBody","space","RulesPanel","dateUpdated","readOnly","placeholder","detail","controls","dataTestId","data-test-id","RulesHeader","TitleContainer","renderIcon","Title","renderTitle","ReadOnlyTag","Repository","Detail","RulesView","InnerPanel","InnerPanelHeader","SyncDate","moment","fromNow","Controls","c","n","InnerPanelBody","StyledTextArea","value","spellCheck","autoComplete","autoCorrect","autoCapitalize","withTheme","Tag","Panel","PanelHeader","TextareaAutosize","p","inputStyles","theme","text","familyMono","CodeOwnersPanel","codeowner","onDelete","endpoint","addSuccessMessage","addErrorMessage","codeowners","ownershipSyntax","onConfirm","handleDelete","message","openModal","modalProps","handleCodeownerAdded","prevState","ownership","newCodeowners","concat","routeTitleGen","endpoints","query","projectId","includes","push","expand","link","action","pathname","CodeOwnerButton","handleAddCodeOwner","lastUpdated","getPlaceholder","getDetail","openEditOwnershipRules","handleOwnershipSave","handleCodeownerDeleted","saveOnBlur","fallthrough","autoAssignment","help","Button"],"mappings":"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","file":"app_views_settings_project_projectOwnership_index_tsx.c3514f4b3dd1021fff4c.js","sourcesContent":["function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true,\n  projectSlug?: string\n): string {\n  const tmplBase = `${routeName} - ${orgSlug}`;\n  const tmpl = projectSlug ? `${tmplBase} - ${projectSlug}` : tmplBase;\n\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import * as React from 'react';\nimport DocumentTitle from 'react-document-title';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent() as React.ReactChild}\n      </DocumentTitle>\n    );\n  }\n}\n","import * as React from 'react';\n\nimport {Panel, PanelBody, PanelHeader} from 'app/components/panels';\nimport {Scope} from 'app/types';\nimport {sanitizeQuerySelector} from 'app/utils/sanitizeQuerySelector';\nimport FieldFromConfig from 'app/views/settings/components/forms/fieldFromConfig';\n\nimport {FieldObject, JsonFormObject} from './type';\n\ntype DefaultProps = {\n  additionalFieldProps: {[key: string]: any};\n};\n\ntype Props = DefaultProps & {\n  /**\n   * Panel title\n   */\n  title?: React.ReactNode;\n\n  /**\n   * List of fields to render\n   */\n  fields: FieldObject[];\n\n  access?: Set<Scope>;\n  features?: Record<string, any>;\n\n  /**\n   * The name of the field that should be highlighted\n   */\n  highlighted?: string;\n\n  /**\n   * Renders inside of PanelBody at the start\n   */\n  renderHeader?: (arg: JsonFormObject) => React.ReactNode;\n\n  /**\n   * Renders inside of PanelBody before PanelBody close\n   */\n  renderFooter?: (arg: JsonFormObject) => React.ReactNode;\n\n  /**\n   * Disables the entire form\n   */\n  disabled?: boolean;\n};\n\nexport default class FormPanel extends React.Component<Props> {\n  static defaultProps: DefaultProps = {\n    additionalFieldProps: {},\n  };\n\n  render() {\n    const {\n      title,\n      fields,\n      access,\n      disabled,\n      additionalFieldProps,\n      renderFooter,\n      renderHeader,\n      ...otherProps\n    } = this.props;\n\n    return (\n      <Panel id={typeof title === 'string' ? sanitizeQuerySelector(title) : undefined}>\n        {title && <PanelHeader>{title}</PanelHeader>}\n        <PanelBody>\n          {typeof renderHeader === 'function' && renderHeader({title, fields})}\n\n          {fields.map(field => {\n            if (typeof field === 'function') {\n              return field();\n            }\n\n            const {defaultValue: _, ...fieldWithoutDefaultValue} = field;\n\n            // Allow the form panel disabled prop to override the fields\n            // disabled prop, with fallback to the fields disabled state.\n            if (disabled === true) {\n              fieldWithoutDefaultValue.disabled = true;\n              fieldWithoutDefaultValue.disabledReason = undefined;\n            }\n\n            return (\n              <FieldFromConfig\n                access={access}\n                disabled={disabled}\n                key={field.name}\n                {...otherProps}\n                {...additionalFieldProps}\n                field={fieldWithoutDefaultValue}\n                highlighted={this.props.highlighted === `#${field.name}`}\n              />\n            );\n          })}\n          {typeof renderFooter === 'function' && renderFooter({title, fields})}\n        </PanelBody>\n      </Panel>\n    );\n  }\n}\n","import * as React from 'react';\nimport {withRouter, WithRouterProps} from 'react-router';\nimport * as Sentry from '@sentry/react';\nimport scrollToElement from 'scroll-to-element';\n\nimport {defined} from 'app/utils';\nimport {sanitizeQuerySelector} from 'app/utils/sanitizeQuerySelector';\n\nimport FormPanel from './formPanel';\nimport {Field, FieldObject, JsonFormObject} from './type';\n\ntype Props = {\n  /**\n   * Fields that are grouped by \"section\"\n   */\n  forms?: JsonFormObject[];\n\n  /**\n   * If `forms` is not defined, `title` + `fields` must be required.\n   * Allows more fine grain control of title/fields\n   */\n  fields?: FieldObject[];\n\n  additionalFieldProps?: {[key: string]: any};\n} & WithRouterProps &\n  Omit<\n    React.ComponentProps<typeof FormPanel>,\n    'highlighted' | 'fields' | 'additionalFieldProps'\n  >;\n\ntype State = {\n  // Field name that should be highlighted\n  highlighted?: string;\n};\n\nclass JsonForm extends React.Component<Props, State> {\n  state: State = {\n    // location.hash is optional because of tests.\n    highlighted: this.props.location?.hash,\n  };\n\n  componentDidMount() {\n    this.scrollToHash();\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps: Props) {\n    if (this.props.location.hash !== nextProps.location.hash) {\n      const hash = nextProps.location.hash;\n      this.scrollToHash(hash);\n      this.setState({highlighted: hash});\n    }\n  }\n\n  scrollToHash(toHash?: string): void {\n    // location.hash is optional because of tests.\n    const hash = toHash || this.props.location?.hash;\n\n    if (!hash) {\n      return;\n    }\n\n    // Push onto callback queue so it runs after the DOM is updated,\n    // this is required when navigating from a different page so that\n    // the element is rendered on the page before trying to getElementById.\n    try {\n      scrollToElement(sanitizeQuerySelector(decodeURIComponent(hash)), {\n        align: 'middle',\n        offset: -100,\n      });\n    } catch (err) {\n      Sentry.captureException(err);\n    }\n  }\n\n  shouldDisplayForm(fields: FieldObject[]) {\n    const fieldsWithVisibleProp = fields.filter(\n      field => typeof field !== 'function' && defined(field?.visible)\n    ) as Array<Omit<Field, 'visible'> & Required<Pick<Field, 'visible'>>>;\n\n    if (fields.length === fieldsWithVisibleProp.length) {\n      const {additionalFieldProps, ...props} = this.props;\n\n      const areAllFieldsHidden = fieldsWithVisibleProp.every(field => {\n        if (typeof field.visible === 'function') {\n          return !field.visible({...props, ...additionalFieldProps});\n        }\n        return !field.visible;\n      });\n\n      return !areAllFieldsHidden;\n    }\n\n    return true;\n  }\n\n  renderForm({\n    fields,\n    formPanelProps,\n    title,\n  }: {\n    fields: FieldObject[];\n    formPanelProps: Pick<\n      Props,\n      | 'access'\n      | 'disabled'\n      | 'features'\n      | 'additionalFieldProps'\n      | 'renderFooter'\n      | 'renderHeader'\n    > &\n      Pick<State, 'highlighted'>;\n    title?: React.ReactNode;\n  }) {\n    const shouldDisplayForm = this.shouldDisplayForm(fields);\n\n    if (\n      !shouldDisplayForm &&\n      !formPanelProps?.renderFooter &&\n      !formPanelProps?.renderHeader\n    ) {\n      return null;\n    }\n\n    return <FormPanel title={title} fields={fields} {...formPanelProps} />;\n  }\n\n  render() {\n    const {\n      access,\n      fields,\n      title,\n      forms,\n      disabled,\n      features,\n      additionalFieldProps,\n      renderFooter,\n      renderHeader,\n      location: _location,\n      ...otherProps\n    } = this.props;\n\n    const formPanelProps = {\n      access,\n      disabled,\n      features,\n      additionalFieldProps,\n      renderFooter,\n      renderHeader,\n      highlighted: this.state.highlighted,\n    };\n\n    return (\n      <div {...otherProps}>\n        {typeof forms !== 'undefined' &&\n          forms.map((formGroup, i) => (\n            <React.Fragment key={i}>\n              {this.renderForm({formPanelProps, ...formGroup})}\n            </React.Fragment>\n          ))}\n        {typeof forms === 'undefined' &&\n          typeof fields !== 'undefined' &&\n          this.renderForm({fields, formPanelProps, title})}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(JsonForm);\n","import * as React from 'react';\n\nimport Access from 'app/components/acl/access';\nimport Alert from 'app/components/alert';\nimport {IconWarning} from 'app/icons';\nimport {t} from 'app/locale';\n\ntype Props = React.ComponentPropsWithoutRef<typeof Alert> &\n  Pick<React.ComponentProps<typeof Access>, 'access'>;\n\nconst PermissionAlert = ({access = ['project:write'], ...props}: Props) => (\n  <Access access={access}>\n    {({hasAccess}) =>\n      !hasAccess && (\n        <Alert type=\"warning\" icon={<IconWarning size=\"xs\" />} {...props}>\n          {t(\n            'These settings can only be edited by users with the organization owner, manager, or admin role.'\n          )}\n        </Alert>\n      )\n    }\n  </Access>\n);\n\nexport default PermissionAlert;\n","import {Component, Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport {ModalRenderProps} from 'app/actionCreators/modal';\nimport {Client} from 'app/api';\nimport Alert from 'app/components/alert';\nimport Button from 'app/components/button';\nimport Link from 'app/components/links/link';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport {Panel, PanelBody} from 'app/components/panels';\nimport {IconCheckmark, IconNot} from 'app/icons';\nimport {t, tct} from 'app/locale';\nimport space from 'app/styles/space';\nimport {\n  CodeOwners,\n  Integration,\n  Organization,\n  Project,\n  RepositoryProjectPathConfig,\n} from 'app/types';\nimport {getIntegrationIcon} from 'app/utils/integrationUtil';\nimport withApi from 'app/utils/withApi';\nimport Form from 'app/views/settings/components/forms/form';\nimport SelectField from 'app/views/settings/components/forms/selectField';\n\ntype Props = {\n  api: Client;\n  organization: Organization;\n  project: Project;\n  codeMappings: RepositoryProjectPathConfig[];\n  integrations: Integration[];\n  onSave: (data: CodeOwners) => void;\n} & ModalRenderProps;\n\ntype State = {\n  codeownerFile: CodeOwnerFile | null;\n  codeMappingId: string | null;\n  isLoading: boolean;\n  error: boolean;\n  errorJSON: {raw?: string} | null;\n};\n\ntype CodeOwnerFile = {\n  raw: string;\n  filepath: string;\n  html_url: string;\n};\n\nclass AddCodeOwnerModal extends Component<Props, State> {\n  state: State = {\n    codeownerFile: null,\n    codeMappingId: null,\n    isLoading: false,\n    error: false,\n    errorJSON: null,\n  };\n\n  fetchFile = async (codeMappingId: string) => {\n    const {organization} = this.props;\n    this.setState({\n      codeMappingId,\n      codeownerFile: null,\n      error: false,\n      errorJSON: null,\n      isLoading: true,\n    });\n    try {\n      const data: CodeOwnerFile = await this.props.api.requestPromise(\n        `/organizations/${organization.slug}/code-mappings/${codeMappingId}/codeowners/`,\n        {\n          method: 'GET',\n        }\n      );\n      this.setState({codeownerFile: data, isLoading: false});\n    } catch (_err) {\n      this.setState({isLoading: false});\n    }\n  };\n\n  addFile = async () => {\n    const {organization, project, codeMappings} = this.props;\n    const {codeownerFile, codeMappingId} = this.state;\n    if (codeownerFile) {\n      try {\n        const data = await this.props.api.requestPromise(\n          `/projects/${organization.slug}/${project.slug}/codeowners/`,\n          {\n            method: 'POST',\n            data: {\n              codeMappingId,\n              raw: codeownerFile.raw,\n            },\n          }\n        );\n        const codeMapping = codeMappings.find(\n          mapping => mapping.id === codeMappingId?.toString()\n        );\n        this.handleAddedFile({...data, codeMapping});\n      } catch (_err) {\n        this.setState({error: true, errorJSON: _err.responseJSON, isLoading: false});\n      }\n    }\n  };\n\n  handleAddedFile(data: CodeOwners) {\n    this.props.onSave(data);\n    this.props.closeModal();\n  }\n\n  sourceFile(codeownerFile: CodeOwnerFile) {\n    return (\n      <Panel>\n        <SourceFileBody>\n          <IconCheckmark size=\"md\" isCircled color=\"green200\" />\n          {codeownerFile.filepath}\n          <Button size=\"small\" href={codeownerFile.html_url} target=\"_blank\">\n            {t('Preview File')}\n          </Button>\n        </SourceFileBody>\n      </Panel>\n    );\n  }\n\n  errorMessage(baseUrl) {\n    const {errorJSON, codeMappingId} = this.state;\n    const {codeMappings} = this.props;\n    const codeMapping = codeMappings.find(mapping => mapping.id === codeMappingId);\n    const {integrationId, provider} = codeMapping as RepositoryProjectPathConfig;\n    return (\n      <Alert type=\"error\" icon={<IconNot size=\"md\" />}>\n        <p>{errorJSON?.raw?.[0]}</p>\n        {codeMapping && (\n          <p>\n            {tct(\n              'Configure [userMappingsLink:User Mappings] or [teamMappingsLink:Team Mappings] for any missing associations.',\n              {\n                userMappingsLink: (\n                  <Link\n                    to={`${baseUrl}/${provider?.key}/${integrationId}/?tab=userMappings&referrer=add-codeowners`}\n                  />\n                ),\n                teamMappingsLink: (\n                  <Link\n                    to={`${baseUrl}/${provider?.key}/${integrationId}/?tab=teamMappings&referrer=add-codeowners`}\n                  />\n                ),\n              }\n            )}\n          </p>\n        )}\n      </Alert>\n    );\n  }\n\n  noSourceFile() {\n    const {codeMappingId, isLoading} = this.state;\n    if (isLoading) {\n      return (\n        <Container>\n          <LoadingIndicator mini />\n        </Container>\n      );\n    }\n    if (!codeMappingId) {\n      return null;\n    }\n    return (\n      <Panel>\n        <NoSourceFileBody>\n          {codeMappingId ? (\n            <Fragment>\n              <IconNot size=\"md\" color=\"red200\" />\n              {t('No codeowner file found.')}\n            </Fragment>\n          ) : null}\n        </NoSourceFileBody>\n      </Panel>\n    );\n  }\n\n  render() {\n    const {Header, Body, Footer} = this.props;\n    const {codeownerFile, error, errorJSON} = this.state;\n    const {codeMappings, integrations, organization} = this.props;\n    const baseUrl = `/settings/${organization.slug}/integrations`;\n\n    return (\n      <Fragment>\n        <Header closeButton>{t('Add Code Owner File')}</Header>\n        <Body>\n          {!codeMappings.length && (\n            <Fragment>\n              <div>\n                {t(\n                  \"Configure code mapping to add your CODEOWNERS file. Select the integration you'd like to use for mapping:\"\n                )}\n              </div>\n              <IntegrationsList>\n                {integrations.map(integration => (\n                  <Button\n                    key={integration.id}\n                    type=\"button\"\n                    to={`${baseUrl}/${integration.provider.key}/${integration.id}/?tab=codeMappings&referrer=add-codeowners`}\n                  >\n                    {getIntegrationIcon(integration.provider.key)}\n                    <IntegrationName>{integration.name}</IntegrationName>\n                  </Button>\n                ))}\n              </IntegrationsList>\n            </Fragment>\n          )}\n          {codeMappings.length > 0 && (\n            <Form\n              apiMethod=\"POST\"\n              apiEndpoint=\"/code-mappings/\"\n              hideFooter\n              initialData={{}}\n            >\n              <StyledSelectField\n                name=\"codeMappingId\"\n                label={t('Apply an existing code mapping')}\n                choices={codeMappings.map((cm: RepositoryProjectPathConfig) => [\n                  cm.id,\n                  cm.repoName,\n                ])}\n                onChange={this.fetchFile}\n                required\n                inline={false}\n                flexibleControlStateSize\n                stacked\n              />\n\n              <FileResult>\n                {codeownerFile ? this.sourceFile(codeownerFile) : this.noSourceFile()}\n                {error && errorJSON && this.errorMessage(baseUrl)}\n              </FileResult>\n            </Form>\n          )}\n        </Body>\n        <Footer>\n          <Button\n            disabled={codeownerFile ? false : true}\n            label={t('Add File')}\n            priority=\"primary\"\n            onClick={this.addFile}\n          >\n            {t('Add File')}\n          </Button>\n        </Footer>\n      </Fragment>\n    );\n  }\n}\n\nexport default withApi(AddCodeOwnerModal);\nexport {AddCodeOwnerModal};\n\nconst StyledSelectField = styled(SelectField)`\n  border-bottom: None;\n  padding-right: 16px;\n`;\nconst FileResult = styled('div')`\n  width: inherit;\n`;\nconst NoSourceFileBody = styled(PanelBody)`\n  display: grid;\n  padding: 12px;\n  grid-template-columns: 30px 1fr;\n  align-items: center;\n`;\nconst SourceFileBody = styled(PanelBody)`\n  display: grid;\n  padding: 12px;\n  grid-template-columns: 30px 1fr 100px;\n  align-items: center;\n`;\n\nconst IntegrationsList = styled('div')`\n  display: grid;\n  grid-gap: ${space(1)};\n  justify-items: center;\n  margin-top: ${space(2)};\n`;\n\nconst IntegrationName = styled('p')`\n  padding-left: 10px;\n`;\n\nconst Container = styled('div')`\n  display: flex;\n  justify-content: center;\n`;\n","import * as React from 'react';\nimport TextareaAutosize from 'react-autosize-textarea';\nimport {withTheme} from '@emotion/react';\nimport styled from '@emotion/styled';\nimport moment from 'moment';\n\nimport {Panel, PanelBody, PanelHeader} from 'app/components/panels';\nimport Tag from 'app/components/tag';\nimport {IconGithub, IconGitlab, IconSentry} from 'app/icons';\nimport {inputStyles} from 'app/styles/input';\nimport space from 'app/styles/space';\n\ntype Props = {\n  raw: string;\n  dateUpdated: string | null;\n  provider?: string;\n  repoName?: string;\n  readOnly?: boolean;\n  type: 'codeowners' | 'issueowners';\n  placeholder?: string;\n  detail?: React.ReactNode;\n  controls?: React.ReactNode[];\n  'data-test-id': string;\n};\n\ntype State = {};\n\nclass RulesPanel extends React.Component<Props, State> {\n  renderIcon(provider: string) {\n    switch (provider) {\n      case 'github':\n        return <IconGithub size=\"md\" />;\n      case 'gitlab':\n        return <IconGitlab size=\"md\" />;\n      default:\n        return <IconSentry size=\"md\" />;\n    }\n  }\n  renderTitle() {\n    switch (this.props.type) {\n      case 'codeowners':\n        return 'CODEOWNERS';\n      case 'issueowners':\n        return 'Ownership Rules';\n      default:\n        return null;\n    }\n  }\n\n  render() {\n    const {\n      raw,\n      dateUpdated,\n      provider,\n      repoName,\n      readOnly,\n      placeholder,\n      detail,\n      controls,\n      ['data-test-id']: dataTestId,\n    } = this.props;\n    return (\n      <Container data-test-id={dataTestId}>\n        <RulesHeader>\n          <TitleContainer>\n            {this.renderIcon(provider ?? '')}\n            <Title>{this.renderTitle()}</Title>\n          </TitleContainer>\n          {readOnly && <ReadOnlyTag type=\"default\">{'Read Only'}</ReadOnlyTag>}\n          {repoName && <Repository>{repoName}</Repository>}\n          {detail && <Detail>{detail}</Detail>}\n        </RulesHeader>\n        <RulesView>\n          <InnerPanel>\n            <InnerPanelHeader>\n              <SyncDate>\n                {dateUpdated && `Last synced ${moment(dateUpdated).fromNow()}`}\n              </SyncDate>\n              <Controls>\n                {(controls || []).map((c, n) => (\n                  <span key={n}> {c}</span>\n                ))}\n              </Controls>\n            </InnerPanelHeader>\n            <InnerPanelBody>\n              <StyledTextArea\n                value={raw}\n                spellCheck=\"false\"\n                autoComplete=\"off\"\n                autoCorrect=\"off\"\n                autoCapitalize=\"off\"\n                placeholder={placeholder}\n              />\n            </InnerPanelBody>\n          </InnerPanel>\n        </RulesView>\n      </Container>\n    );\n  }\n}\n\nexport default withTheme(RulesPanel);\n\nconst Container = styled('div')`\n  display: grid;\n  grid-template-columns: 1fr 2fr;\n  grid-template-areas: 'rules-header rules-view';\n  margin-bottom: ${space(3)};\n`;\n\nconst RulesHeader = styled('div')`\n  grid-area: rules-header;\n  display: grid;\n  grid-template-columns: 2fr 1fr;\n  grid-template-rows: 45px 1fr 1fr 1fr 1fr;\n  grid-template-areas: 'title tag' 'repository repository' '. .' '. .' 'detail detail';\n  border: 1px solid #c6becf;\n  border-radius: 4px 0 0 4px;\n  border-right: none;\n  box-shadow: 0 2px 0 rgb(37 11 54 / 4%);\n  background-color: #ffffff;\n`;\nconst TitleContainer = styled('div')`\n  grid-area: title;\n  align-self: center;\n  padding-left: ${space(2)};\n  display: flex;\n  * {\n    padding-right: ${space(0.5)};\n  }\n`;\nconst Title = styled('div')`\n  align-self: center;\n`;\nconst ReadOnlyTag = styled(Tag)`\n  grid-area: tag;\n  align-self: center;\n  justify-self: end;\n  padding-right: ${space(1)};\n`;\nconst Repository = styled('div')`\n  grid-area: repository;\n  padding-left: calc(${space(2)} + ${space(3)});\n  color: #9386a0;\n  font-size: 14px;\n`;\nconst Detail = styled('div')`\n  grid-area: detail;\n  align-self: end;\n  padding: 0 ${space(2)} ${space(2)} ${space(2)};\n  color: #9386a0;\n  font-size: 14px;\n  line-height: 1.4;\n`;\n\nconst RulesView = styled('div')`\n  grid-area: rules-view;\n`;\n\nconst InnerPanel = styled(Panel)`\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0px;\n  margin: 0px;\n  height: 100%;\n`;\n\nconst InnerPanelHeader = styled(PanelHeader)`\n  display: grid;\n  grid-template-columns: 2fr 1fr;\n  grid-template-areas: 'sync-date controis';\n  text-transform: none;\n  font-size: 16px;\n  font-weight: 400;\n`;\n\nconst InnerPanelBody = styled(PanelBody)`\n  height: auto;\n`;\n\nconst StyledTextArea = styled(TextareaAutosize)`\n  ${p => inputStyles(p)};\n  height: 350px !important;\n  overflow: auto;\n  outline: 0;\n  width: 100%;\n  resize: none;\n  margin: 0;\n  font-family: ${p => p.theme.text.familyMono};\n  word-break: break-all;\n  white-space: pre-wrap;\n  line-height: ${space(3)};\n  border: none;\n  box-shadow: none;\n  padding: ${space(2)};\n  color: transparent;\n  text-shadow: 0 0 0 #9386a0;\n\n  &:hover,\n  &:focus,\n  &:active {\n    border: none;\n    box-shadow: none;\n  }\n`;\n\nconst SyncDate = styled('div')`\n  grid-area: sync-date;\n`;\nconst Controls = styled('div')`\n  display: grid;\n  align-items: center;\n  grid-gap: ${space(1)};\n  grid-auto-flow: column;\n  justify-content: flex-end;\n`;\n","import {Component, Fragment} from 'react';\n\nimport {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';\nimport {Client} from 'app/api';\nimport Button from 'app/components/button';\nimport Confirm from 'app/components/confirm';\nimport {IconDelete} from 'app/icons';\nimport {t} from 'app/locale';\nimport {CodeOwners, Organization, Project} from 'app/types';\nimport withApi from 'app/utils/withApi';\nimport RulesPanel from 'app/views/settings/project/projectOwnership/rulesPanel';\n\ntype Props = {\n  api: Client;\n  organization: Organization;\n  project: Project;\n  codeowners: any;\n  onDelete: (data: any) => void;\n};\n\nclass CodeOwnersPanel extends Component<Props> {\n  handleDelete = async (codeowner: CodeOwners) => {\n    const {api, organization, project, onDelete} = this.props;\n    const endpoint = `/api/0/projects/${organization.slug}/${project.slug}/codeowners/${codeowner.id}/`;\n    try {\n      await api.requestPromise(endpoint, {\n        method: 'DELETE',\n      });\n      onDelete(codeowner);\n      addSuccessMessage(t('Deletion successful'));\n    } catch {\n      //no 4xx errors should happen on delete\n      addErrorMessage(t('An error occurred'));\n    }\n  };\n\n  render() {\n    const {codeowners} = this.props;\n    return (codeowners || []).map(codeowner => {\n      const {\n        dateUpdated,\n        provider,\n        codeMapping: {repoName},\n        ownershipSyntax,\n      } = codeowner;\n      return (\n        <Fragment key={codeowner.id}>\n          <RulesPanel\n            data-test-id=\"codeowners-panel\"\n            type=\"codeowners\"\n            raw={ownershipSyntax}\n            dateUpdated={dateUpdated}\n            provider={provider}\n            repoName={repoName}\n            readOnly\n            controls={[\n              <Confirm\n                onConfirm={() => this.handleDelete(codeowner)}\n                message={t('Are you sure you want to remove this CODEOWNERS file?')}\n                key=\"confirm-delete\"\n              >\n                <Button key=\"delete\" icon={<IconDelete size=\"xs\" />} size=\"xsmall\" />\n              </Confirm>,\n            ]}\n          />\n        </Fragment>\n      );\n    });\n  }\n}\n\nexport default withApi(CodeOwnersPanel);\n","import {Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport {openEditOwnershipRules, openModal} from 'app/actionCreators/modal';\nimport Feature from 'app/components/acl/feature';\nimport Button from 'app/components/button';\nimport ExternalLink from 'app/components/links/externalLink';\nimport {t, tct} from 'app/locale';\nimport space from 'app/styles/space';\nimport {\n  CodeOwners,\n  Integration,\n  Organization,\n  Project,\n  RepositoryProjectPathConfig,\n} from 'app/types';\nimport routeTitleGen from 'app/utils/routeTitle';\nimport AsyncView from 'app/views/asyncView';\nimport Form from 'app/views/settings/components/forms/form';\nimport JsonForm from 'app/views/settings/components/forms/jsonForm';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport PermissionAlert from 'app/views/settings/project/permissionAlert';\nimport AddCodeOwnerModal from 'app/views/settings/project/projectOwnership/addCodeOwnerModal';\nimport CodeOwnersPanel from 'app/views/settings/project/projectOwnership/codeowners';\nimport RulesPanel from 'app/views/settings/project/projectOwnership/rulesPanel';\n\ntype Props = {\n  organization: Organization;\n  project: Project;\n} & RouteComponentProps<{orgId: string; projectId: string}, {}>;\n\ntype State = {\n  ownership: null | any;\n  codeMappings: RepositoryProjectPathConfig[];\n  codeowners?: CodeOwners[];\n  integrations: Integration[];\n} & AsyncView['state'];\n\nclass ProjectOwnership extends AsyncView<Props, State> {\n  getTitle() {\n    const {project} = this.props;\n    return routeTitleGen(t('Issue Owners'), project.slug, false);\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {organization, project} = this.props;\n    const endpoints: ReturnType<AsyncView['getEndpoints']> = [\n      ['ownership', `/projects/${organization.slug}/${project.slug}/ownership/`],\n      [\n        'codeMappings',\n        `/organizations/${organization.slug}/code-mappings/`,\n        {query: {projectId: project.id}},\n      ],\n      [\n        'integrations',\n        `/organizations/${organization.slug}/integrations/`,\n        {query: {features: ['codeowners']}},\n      ],\n    ];\n    if (organization.features.includes('integrations-codeowners')) {\n      endpoints.push([\n        'codeowners',\n        `/projects/${organization.slug}/${project.slug}/codeowners/`,\n        {query: {expand: ['codeMapping', 'ownershipSyntax']}},\n      ]);\n    }\n    return endpoints;\n  }\n\n  handleAddCodeOwner = () => {\n    const {codeMappings, integrations} = this.state;\n    openModal(modalProps => (\n      <AddCodeOwnerModal\n        {...modalProps}\n        organization={this.props.organization}\n        project={this.props.project}\n        codeMappings={codeMappings}\n        integrations={integrations}\n        onSave={this.handleCodeownerAdded}\n      />\n    ));\n  };\n\n  getPlaceholder() {\n    return `#example usage\npath:src/example/pipeline/* person@sentry.io #infra\nurl:http://example.com/settings/* #product\ntags.sku_class:enterprise #enterprise`;\n  }\n\n  getDetail() {\n    return tct(\n      `Automatically assign issues and send alerts to the right people based on issue properties. [link:Learn more].`,\n      {\n        link: (\n          <ExternalLink href=\"https://docs.sentry.io/product/error-monitoring/issue-owners/\" />\n        ),\n      }\n    );\n  }\n\n  handleOwnershipSave = (text: string | null) => {\n    this.setState(prevState => ({\n      ownership: {\n        ...prevState.ownership,\n        raw: text,\n      },\n    }));\n  };\n\n  handleCodeownerAdded = (data: CodeOwners) => {\n    const {codeowners} = this.state;\n    const newCodeowners = codeowners?.concat(data);\n    this.setState({codeowners: newCodeowners});\n  };\n\n  handleCodeownerDeleted = (data: CodeOwners) => {\n    const {codeowners} = this.state;\n    const newCodeowners = codeowners?.filter(codeowner => codeowner.id !== data.id);\n    this.setState({codeowners: newCodeowners});\n  };\n\n  renderBody() {\n    const {project, organization} = this.props;\n    const {ownership, codeowners} = this.state;\n\n    const disabled = !organization.access.includes('project:write');\n\n    return (\n      <Fragment>\n        <SettingsPageHeader\n          title={t('Issue Owners')}\n          action={\n            <Fragment>\n              <Button\n                to={{\n                  pathname: `/organizations/${organization.slug}/issues/`,\n                  query: {project: project.id},\n                }}\n                size=\"small\"\n              >\n                {t('View Issues')}\n              </Button>\n              <Feature features={['integrations-codeowners']}>\n                <CodeOwnerButton\n                  onClick={this.handleAddCodeOwner}\n                  size=\"small\"\n                  priority=\"primary\"\n                  data-test-id=\"add-codeowner-button\"\n                >\n                  {t('Add Codeowner File')}\n                </CodeOwnerButton>\n              </Feature>\n            </Fragment>\n          }\n        />\n        <PermissionAlert />\n        <RulesPanel\n          data-test-id=\"issueowners-panel\"\n          type=\"issueowners\"\n          raw={ownership.raw || ''}\n          dateUpdated={ownership.lastUpdated}\n          placeholder={this.getPlaceholder()}\n          detail={this.getDetail()}\n          controls={[\n            <Button\n              key=\"edit\"\n              size=\"small\"\n              onClick={() =>\n                openEditOwnershipRules({\n                  organization,\n                  project,\n                  ownership,\n                  onSave: this.handleOwnershipSave,\n                })\n              }\n              disabled={disabled}\n            >\n              {t('Edit')}\n            </Button>,\n          ]}\n        />\n        <Feature features={['integrations-codeowners']}>\n          <CodeOwnersPanel\n            codeowners={codeowners}\n            onDelete={this.handleCodeownerDeleted}\n            {...this.props}\n          />\n        </Feature>\n        <Form\n          apiEndpoint={`/projects/${organization.slug}/${project.slug}/ownership/`}\n          apiMethod=\"PUT\"\n          saveOnBlur\n          initialData={{\n            fallthrough: ownership.fallthrough,\n            autoAssignment: ownership.autoAssignment,\n          }}\n          hideFooter\n        >\n          <JsonForm\n            forms={[\n              {\n                title: t('Issue Owners'),\n                fields: [\n                  {\n                    name: 'autoAssignment',\n                    type: 'boolean',\n                    label: t('Automatically assign issues'),\n                    help: t('Assign issues when a new event matches the rules above.'),\n                    disabled,\n                  },\n                  {\n                    name: 'fallthrough',\n                    type: 'boolean',\n                    label: t(\n                      'Send alert to project members if there’s no assigned owner'\n                    ),\n                    help: t(\n                      'Alerts will be sent to all users who have access to this project.'\n                    ),\n                    disabled,\n                  },\n                ],\n              },\n            ]}\n          />\n        </Form>\n      </Fragment>\n    );\n  }\n}\n\nexport default ProjectOwnership;\n\nconst CodeOwnerButton = styled(Button)`\n  margin-left: ${space(1)};\n`;\n"],"sourceRoot":""}