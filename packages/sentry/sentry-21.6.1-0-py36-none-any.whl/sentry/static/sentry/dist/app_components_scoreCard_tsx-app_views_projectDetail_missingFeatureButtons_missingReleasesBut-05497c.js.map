{"version":3,"sources":["webpack:///./app/components/onboardingPanel.tsx","webpack:///./app/components/scoreCard.tsx","webpack:///./app/views/projectDetail/missingFeatureButtons/missingReleasesButtons.tsx","webpack:///./app/views/releases/list/releasePromo.tsx","webpack:///./app/views/releases/list/utils.tsx","webpack:///./app/views/releases/utils/index.tsx","webpack:///./images/spot/releases-empty-state.svg","webpack:///./images/spot/releases-tour-commits.svg","webpack:///./images/spot/releases-tour-email.svg","webpack:///./images/spot/releases-tour-resolution.svg","webpack:///./images/spot/releases-tour-stats.svg"],"names":["OnboardingPanel","className","image","children","Container","IlloBox","StyledBox","space","p","theme","breakpoints","ScoreCard","title","score","help","trend","trendStatus","StyledPanel","HeaderTitle","Title","size","position","ScoreWrapper","Score","defined","Trend","getTrendColor","green300","red300","gray300","Panel","overflowEllipsis","DOCS_URL","DOCS_HEALTH_URL","MissingReleasesButtons","organization","health","projectId","StyledButtonBar","gap","priority","external","href","t","steps","RELEASES_TOUR_STEPS","onAdvance","step","duration","trackAnalyticsEvent","eventKey","eventName","organization_id","parseInt","id","project_id","onCloseModal","doneText","doneUrl","showModal","onClick","ButtonBar","releasesSetupUrl","docsLink","src","commitImage","body","actions","statsImage","resolutionImage","emailImage","ReleasePromo","props","this","emptyStateImg","ButtonList","handleTourAdvance","handleClose","Component","SortOption","DisplayOption","StatusOption","CRASH_FREE_DECIMAL_THRESHOLD","roundDuration","seconds","round","getCrashFreePercent","percent","decimalThreshold","decimalPlaces","displayCrashFreePercent","isNaN","rounded","toLocaleString","getReleaseNewIssuesUrl","orgSlug","version","pathname","query","project","statsPeriod","undefined","start","end","stringifyQueryObject","QueryResults","sort","IssueSortOptions","getReleaseUnhandledIssuesUrl","isReleaseArchived","release","status","ReleaseStatus","releaseDisplayLabel","displayOption","count","tn","module","exports"],"mappings":"8gBAWA,SAASA,EAAT,GAA8D,IAApCC,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,SAC1C,OACE,QAAC,KAAD,CAAOF,UAAWA,EAAlB,UACE,QAACG,EAAD,YACE,QAACC,EAAD,UAAUH,KACV,QAACI,EAAD,UAAYH,SALXH,E,8BAWT,IAAMI,GAAY,OAAO,MAAP,sBAAH,YACFG,OAAM,GADJ,0CAIQ,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,YAAY,KAJjC,mKAeQ,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,YAAY,KAfjC,wBAoBTJ,GAAY,OAAO,MAAP,sBAAH,iCAGQ,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,YAAY,KAHjC,cAQTL,GAAU,OAAOC,EAAP,sBAAH,8DAIDC,OAAM,GAJL,6BAMU,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,YAAY,KANnC,oBAQCH,OAAM,GARP,qBAab,W,ijBC3CA,SAASI,EAAT,GAA+E,IAA3DC,EAA2D,EAA3DA,MAAOC,EAAoD,EAApDA,MAAOC,EAA6C,EAA7CA,KAAMC,EAAuC,EAAvCA,MAAOC,EAAgC,EAAhCA,YAAaf,EAAmB,EAAnBA,UAC1D,OACE,QAACgB,EAAD,CAAahB,UAAWA,EAAxB,WACE,QAACiB,EAAD,YACE,QAACC,EAAD,UAAQP,IACPE,IAAQ,QAAC,IAAD,CAAiBF,MAAOE,EAAMM,KAAK,KAAKC,SAAS,YAG5D,QAACC,EAAD,YACE,QAACC,EAAD,UAAQV,UAAS,OAChBW,QAAQT,KACP,QAACU,EAAD,CAAOT,YAAaA,EAApB,UACE,QAAC,IAAD,UAAeD,YAQ3B,SAASW,EAAclB,GACrB,OAAQA,EAAEQ,aACR,IAAK,OACH,OAAOR,EAAEC,MAAMkB,SACjB,IAAK,MACH,OAAOnB,EAAEC,MAAMmB,OACjB,QACE,OAAOpB,EAAEC,MAAMoB,SA3BZlB,E,wBA+BT,IAAMM,GAAc,OAAOa,KAAP,sBAAH,6EAIJvB,OAAM,GAJF,KAIQA,OAAM,GAJd,qBAQXW,GAAc,OAAO,MAAP,sBAAH,uDAGHX,OAAM,GAHH,0CAQXY,GAAQ,OAAO,MAAP,sBACVY,IADO,KAILT,GAAe,OAAO,MAAP,sBAAH,8FAOZC,GAAQ,OAAO,OAAP,sBAAH,yFASLE,GAAQ,OAAO,MAAP,sBAAH,SACAC,EADA,iBAEMnB,OAAM,GAFZ,mCAQX,W,olBCrFMyB,EAAW,2CACXC,EAAkB,kDAQxB,SAASC,EAAT,GAA0E,IAAzCC,EAAyC,EAAzCA,aAAcC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,UAuBrD,OACE,QAACC,EAAD,CAAiBC,IAAK,EAAtB,WACE,QAAC,KAAD,CACEnB,KAAK,QACLoB,SAAS,UACTC,UAAQ,EACRC,KAAMN,EAASH,EAAkBD,EAJnC,UAMGW,OAAE,kBAEHP,IACA,QAAC,KAAD,CACEQ,MAAOC,IACPC,UAnCR,SAA2BC,EAAcC,IACvCC,QAAoB,CAClBC,SAAU,uCACVC,UAAW,wCACXC,gBAAiBC,SAASlB,EAAamB,GAAI,IAC3CC,WAAYlB,GAAagB,SAAShB,EAAW,IAC7CU,OACAC,cA6BIQ,aAzBR,SAAqBT,EAAcC,IACjCC,QAAoB,CAClBC,SAAU,qCACVC,UAAW,sCACXC,gBAAiBC,SAASlB,EAAamB,GAAI,IAC3CC,WAAYlB,GAAagB,SAAShB,EAAW,IAC7CU,OACAC,cAmBIS,UAAUd,OAAE,eACZe,QAAStB,EAASH,EAAkBD,EALtC,SAOG,gBAAE2B,EAAF,EAAEA,UAAF,OACC,QAAC,KAAD,CAAQvC,KAAK,QAAQwC,QAASD,EAA9B,UACGhB,OAAE,sBA3CRT,E,qCAoDT,IAAMI,GAAkB,OAAOuB,IAAP,qBAAH,qGAKrB,W,o8CCvDA,IAAMC,EAAmB,2CAEnBC,GACJ,QAAC,KAAD,CAAQtB,UAAQ,EAACC,KAAMoB,EAAvB,UACGnB,OAAE,WAIME,EAAkC,CAC7C,CACEjC,OAAO+B,OAAE,mBACTzC,OAAO,QAAC,KAAD,CAAW8D,IAAKC,MACvBC,MACE,QAAC,KAAD,WACGvB,OACC,mGAINwB,QAASJ,GAEX,CACEnD,OAAO+B,OAAE,iBACTzC,OAAO,QAAC,KAAD,CAAW8D,IAAKI,MACvBF,MACE,QAAC,KAAD,WACGvB,OACC,gGAINwB,QAASJ,GAEX,CACEnD,OAAO+B,OAAE,kBACTzC,OAAO,QAAC,KAAD,CAAW8D,IAAKK,MACvBH,MACE,QAAC,KAAD,WACGvB,OACC,wFAINwB,QAASJ,GAEX,CACEnD,OAAO+B,OAAE,iBACTzC,OAAO,QAAC,KAAD,CAAW8D,IAAKM,MACvBJ,MACE,QAAC,KAAD,WACGvB,OACC,2GAYJ4B,E,qoBAYgB,SAACxB,EAAcC,GAAqB,MACpB,EAAKwB,MAAhCrC,EAD+C,EAC/CA,aAAcE,EADiC,EACjCA,WAErBY,QAAoB,CAClBC,SAAU,wBACVC,UAAW,yBACXC,gBAAiBC,SAASlB,EAAamB,GAAI,IAC3CC,WAAYlB,EACZU,OACAC,iB,iCAIU,SAACD,EAAcC,GAAqB,MACd,EAAKwB,MAAhCrC,EADyC,EACzCA,aAAcE,EAD2B,EAC3BA,WAErBY,QAAoB,CAClBC,SAAU,sBACVC,UAAW,uBACXC,gBAAiBC,SAASlB,EAAamB,GAAI,IAC3CC,WAAYlB,EACZU,OACAC,gB,kDAjCJ,WAAoB,MACgByB,KAAKD,MAAhCrC,EADW,EACXA,aAAcE,EADH,EACGA,WAErBY,QAAoB,CAClBC,SAAU,+BACVC,UAAW,gCACXC,gBAAiBC,SAASlB,EAAamB,GAAI,IAC3CC,WAAYlB,M,oBA8BhB,WACE,OACE,QAAC,IAAD,CAAiBnC,OAAO,eAAK8D,IAAKU,MAAlC,WACE,wBAAK/B,OAAE,yBACP,uBACGA,OACC,wFAGJ,QAACgC,EAAD,CAAYpC,IAAK,EAAjB,WACE,QAAC,KAAD,CACEK,MAAOC,EACPC,UAAW2B,KAAKG,kBAChBpB,aAAciB,KAAKI,YACnBpB,UAAUd,OAAE,eACZe,QAASI,EALX,SAOG,gBAAEH,EAAF,EAAEA,UAAF,OACC,QAAC,KAAD,CAAQnB,SAAS,UAAUoB,QAASD,EAApC,UACGhB,OAAE,qBAIT,QAAC,KAAD,CAAQH,SAAS,UAAUE,KAAMoB,EAAkBrB,UAAQ,EAA3D,UACGE,OAAE,2B,GA9DYmC,aAArBP,E,2BAsEN,IAAMI,GAAa,OAAOd,IAAP,qBAAH,6FAIhB,W,6DC9JO,IAAKkB,EAWAC,EAKAC,E,6CAhBAF,K,oCAAAA,E,0CAAAA,E,2BAAAA,E,oBAAAA,E,YAAAA,E,cAAAA,E,gBAAAA,E,qBAAAA,M,cAWAC,K,cAAAA,E,qBAAAA,M,cAKAC,K,gBAAAA,E,qBAAAA,M,sXCPCC,EAA+B,GAE/BC,EAAgB,SAACC,GAC5B,OAAOC,IAAMD,EAASA,EAAU,GAAK,EAAI,IAG9BE,EAAsB,SACjCC,GAGW,IAFXC,EAEW,uDAFQN,EACnBO,EACW,uDADK,EAEhB,OAAOJ,IAAME,EAASA,EAAUC,EAAmBC,EAAgB,IAGxDC,EAA0B,SACrCH,GAGW,IAFXC,EAEW,uDAFQN,EACnBO,EACW,uDADK,EAEhB,GAAIE,MAAMJ,GACR,MAAO,IAGT,GAAIA,EAAU,GAAKA,EAAU,EAC3B,YAGF,IAAMK,EAAUN,EACdC,EACAC,EACAC,GACAI,iBAEF,gBAAUD,EAAV,MAGWE,EAAyB,SACpCC,EACA1D,EACA2D,GAEA,MAAO,CACLC,SAAU,kBAAF,OAAoBF,EAApB,YACRG,MAAO,CACLC,QAAS9D,EAET+D,iBAAaC,EACbC,WAAOD,EACPE,SAAKF,EACLH,OAAOM,QAAqB,IAAIC,KAAa,CAAC,gBAAD,OAAiBT,MAC9DU,KAAMC,aAKCC,EAA+B,SAC1Cb,EACA1D,EACA2D,GAEA,MAAO,CACLC,SAAU,kBAAF,OAAoBF,EAApB,YACRG,MAAO,CACLC,QAAS9D,EACT6D,OAAOM,QACL,IAAIC,KAAa,CAAC,WAAD,OAAYT,GAAW,0BAE1CU,KAAMC,aAKCE,EAAoB,SAACC,GAAD,OAC/BA,EAAQC,SAAWC,eAEd,SAASC,EAAoBC,EAA8BC,GAChE,OAAID,IAAkBlC,YACboC,QAAG,OAAQ,QAASD,IAGtBC,QAAG,UAAW,WAAYD,K,mDCzFnCE,EAAOC,QAAU,IAA0B,wC,oDCA3CD,EAAOC,QAAU,IAA0B,yC,kDCA3CD,EAAOC,QAAU,IAA0B,uC,uDCA3CD,EAAOC,QAAU,IAA0B,4C,kDCA3CD,EAAOC,QAAU,IAA0B","file":"app_components_scoreCard_tsx-app_views_projectDetail_missingFeatureButtons_missingReleasesBut-05497c.2ad10ec34271e3393e02.js","sourcesContent":["import * as React from 'react';\nimport styled from '@emotion/styled';\n\nimport {Panel} from 'app/components/panels';\nimport space from 'app/styles/space';\n\ntype Props = React.PropsWithChildren<{\n  image: React.ReactNode;\n  className?: string;\n}>;\n\nfunction OnboardingPanel({className, image, children}: Props) {\n  return (\n    <Panel className={className}>\n      <Container>\n        <IlloBox>{image}</IlloBox>\n        <StyledBox>{children}</StyledBox>\n      </Container>\n    </Panel>\n  );\n}\n\nconst Container = styled('div')`\n  padding: ${space(3)};\n  position: relative;\n\n  @media (min-width: ${p => p.theme.breakpoints[0]}) {\n    display: flex;\n    align-items: center;\n    flex-direction: row;\n    justify-content: center;\n    flex-wrap: wrap;\n    min-height: 300px;\n    max-width: 1000px;\n    margin: 0 auto;\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints[1]}) {\n    min-height: 350px;\n  }\n`;\n\nconst StyledBox = styled('div')`\n  z-index: 1;\n\n  @media (min-width: ${p => p.theme.breakpoints[0]}) {\n    flex: 2;\n  }\n`;\n\nconst IlloBox = styled(StyledBox)`\n  position: relative;\n  min-height: 100px;\n  max-width: 300px;\n  margin: ${space(2)} auto;\n\n  @media (min-width: ${p => p.theme.breakpoints[0]}) {\n    flex: 1;\n    margin: ${space(3)};\n    max-width: auto;\n  }\n`;\n\nexport default OnboardingPanel;\n","import * as React from 'react';\nimport styled from '@emotion/styled';\n\nimport {Panel} from 'app/components/panels';\nimport QuestionTooltip from 'app/components/questionTooltip';\nimport TextOverflow from 'app/components/textOverflow';\nimport overflowEllipsis from 'app/styles/overflowEllipsis';\nimport space from 'app/styles/space';\nimport {defined} from 'app/utils';\nimport {Theme} from 'app/utils/theme';\n\ntype Props = {\n  title: React.ReactNode;\n  score?: React.ReactNode;\n  help?: React.ReactNode;\n  trend?: React.ReactNode;\n  trendStatus?: 'good' | 'bad';\n  className?: string;\n};\n\nfunction ScoreCard({title, score, help, trend, trendStatus, className}: Props) {\n  return (\n    <StyledPanel className={className}>\n      <HeaderTitle>\n        <Title>{title}</Title>\n        {help && <QuestionTooltip title={help} size=\"sm\" position=\"top\" />}\n      </HeaderTitle>\n\n      <ScoreWrapper>\n        <Score>{score ?? '\\u2014'}</Score>\n        {defined(trend) && (\n          <Trend trendStatus={trendStatus}>\n            <TextOverflow>{trend}</TextOverflow>\n          </Trend>\n        )}\n      </ScoreWrapper>\n    </StyledPanel>\n  );\n}\n\nfunction getTrendColor(p: TrendProps & {theme: Theme}) {\n  switch (p.trendStatus) {\n    case 'good':\n      return p.theme.green300;\n    case 'bad':\n      return p.theme.red300;\n    default:\n      return p.theme.gray300;\n  }\n}\n\nconst StyledPanel = styled(Panel)`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  padding: ${space(2)} ${space(3)};\n  min-height: 96px;\n`;\n\nconst HeaderTitle = styled('div')`\n  display: inline-grid;\n  grid-auto-flow: column;\n  grid-gap: ${space(1)};\n  align-items: center;\n  width: fit-content;\n`;\n\nconst Title = styled('div')`\n  ${overflowEllipsis};\n`;\n\nconst ScoreWrapper = styled('div')`\n  display: flex;\n  flex-direction: row;\n  align-items: flex-end;\n  max-width: 100%;\n`;\n\nconst Score = styled('span')`\n  flex-shrink: 1;\n  font-size: 32px;\n  line-height: 1;\n  white-space: nowrap;\n`;\n\ntype TrendProps = {trendStatus: Props['trendStatus']};\n\nconst Trend = styled('div')<TrendProps>`\n  color: ${getTrendColor};\n  margin-left: ${space(1)};\n  line-height: 1;\n  overflow: hidden;\n`;\n\nexport {HeaderTitle, StyledPanel, Score, ScoreWrapper, Trend};\nexport default ScoreCard;\n","import styled from '@emotion/styled';\n\nimport Button from 'app/components/button';\nimport ButtonBar from 'app/components/buttonBar';\nimport FeatureTourModal from 'app/components/modals/featureTourModal';\nimport {t} from 'app/locale';\nimport {Organization} from 'app/types';\nimport {trackAnalyticsEvent} from 'app/utils/analytics';\nimport {RELEASES_TOUR_STEPS} from 'app/views/releases/list/releasePromo';\n\nconst DOCS_URL = 'https://docs.sentry.io/product/releases/';\nconst DOCS_HEALTH_URL = 'https://docs.sentry.io/product/releases/health/';\n\ntype Props = {\n  organization: Organization;\n  health?: boolean;\n  projectId?: string;\n};\n\nfunction MissingReleasesButtons({organization, health, projectId}: Props) {\n  function handleTourAdvance(step: number, duration: number) {\n    trackAnalyticsEvent({\n      eventKey: 'project_detail.releases_tour.advance',\n      eventName: 'Project Detail: Releases Tour Advance',\n      organization_id: parseInt(organization.id, 10),\n      project_id: projectId && parseInt(projectId, 10),\n      step,\n      duration,\n    });\n  }\n\n  function handleClose(step: number, duration: number) {\n    trackAnalyticsEvent({\n      eventKey: 'project_detail.releases_tour.close',\n      eventName: 'Project Detail: Releases Tour Close',\n      organization_id: parseInt(organization.id, 10),\n      project_id: projectId && parseInt(projectId, 10),\n      step,\n      duration,\n    });\n  }\n\n  return (\n    <StyledButtonBar gap={1}>\n      <Button\n        size=\"small\"\n        priority=\"primary\"\n        external\n        href={health ? DOCS_HEALTH_URL : DOCS_URL}\n      >\n        {t('Start Setup')}\n      </Button>\n      {!health && (\n        <FeatureTourModal\n          steps={RELEASES_TOUR_STEPS}\n          onAdvance={handleTourAdvance}\n          onCloseModal={handleClose}\n          doneText={t('Start Setup')}\n          doneUrl={health ? DOCS_HEALTH_URL : DOCS_URL}\n        >\n          {({showModal}) => (\n            <Button size=\"small\" onClick={showModal}>\n              {t('Get a tour')}\n            </Button>\n          )}\n        </FeatureTourModal>\n      )}\n    </StyledButtonBar>\n  );\n}\n\nconst StyledButtonBar = styled(ButtonBar)`\n  grid-template-columns: minmax(auto, max-content) minmax(auto, max-content);\n`;\n\nexport {StyledButtonBar};\nexport default MissingReleasesButtons;\n","import {Component} from 'react';\nimport styled from '@emotion/styled';\n\nimport emptyStateImg from 'sentry-images/spot/releases-empty-state.svg';\nimport commitImage from 'sentry-images/spot/releases-tour-commits.svg';\nimport emailImage from 'sentry-images/spot/releases-tour-email.svg';\nimport resolutionImage from 'sentry-images/spot/releases-tour-resolution.svg';\nimport statsImage from 'sentry-images/spot/releases-tour-stats.svg';\n\nimport Button from 'app/components/button';\nimport ButtonBar from 'app/components/buttonBar';\nimport FeatureTourModal, {\n  TourImage,\n  TourStep,\n  TourText,\n} from 'app/components/modals/featureTourModal';\nimport OnboardingPanel from 'app/components/onboardingPanel';\nimport {t} from 'app/locale';\nimport {Organization} from 'app/types';\nimport {trackAnalyticsEvent} from 'app/utils/analytics';\n\nconst releasesSetupUrl = 'https://docs.sentry.io/product/releases/';\n\nconst docsLink = (\n  <Button external href={releasesSetupUrl}>\n    {t('Setup')}\n  </Button>\n);\n\nexport const RELEASES_TOUR_STEPS: TourStep[] = [\n  {\n    title: t('Suspect Commits'),\n    image: <TourImage src={commitImage} />,\n    body: (\n      <TourText>\n        {t(\n          'Sentry suggests which commit caused an issue and who is likely responsible so you can triage.'\n        )}\n      </TourText>\n    ),\n    actions: docsLink,\n  },\n  {\n    title: t('Release Stats'),\n    image: <TourImage src={statsImage} />,\n    body: (\n      <TourText>\n        {t(\n          'Get an overview of the commits in each release, and which issues were introduced or fixed.'\n        )}\n      </TourText>\n    ),\n    actions: docsLink,\n  },\n  {\n    title: t('Easily Resolve'),\n    image: <TourImage src={resolutionImage} />,\n    body: (\n      <TourText>\n        {t(\n          'Automatically resolve issues by including the issue number in your commit message.'\n        )}\n      </TourText>\n    ),\n    actions: docsLink,\n  },\n  {\n    title: t('Deploy Emails'),\n    image: <TourImage src={emailImage} />,\n    body: (\n      <TourText>\n        {t(\n          'Receive email notifications about when your code gets deployed. This can be customized in settings.'\n        )}\n      </TourText>\n    ),\n  },\n];\n\ntype Props = {\n  organization: Organization;\n  projectId?: number;\n};\n\nclass ReleasePromo extends Component<Props> {\n  componentDidMount() {\n    const {organization, projectId} = this.props;\n\n    trackAnalyticsEvent({\n      eventKey: 'releases.landing_card_viewed',\n      eventName: 'Releases: Landing Card Viewed',\n      organization_id: parseInt(organization.id, 10),\n      project_id: projectId,\n    });\n  }\n\n  handleTourAdvance = (step: number, duration: number) => {\n    const {organization, projectId} = this.props;\n\n    trackAnalyticsEvent({\n      eventKey: 'releases.tour.advance',\n      eventName: 'Releases: Tour Advance',\n      organization_id: parseInt(organization.id, 10),\n      project_id: projectId,\n      step,\n      duration,\n    });\n  };\n\n  handleClose = (step: number, duration: number) => {\n    const {organization, projectId} = this.props;\n\n    trackAnalyticsEvent({\n      eventKey: 'releases.tour.close',\n      eventName: 'Releases: Tour Close',\n      organization_id: parseInt(organization.id, 10),\n      project_id: projectId,\n      step,\n      duration,\n    });\n  };\n\n  render() {\n    return (\n      <OnboardingPanel image={<img src={emptyStateImg} />}>\n        <h3>{t('Demystify Releases')}</h3>\n        <p>\n          {t(\n            'Did you know how many errors your latest release triggered? We do. And more, too.'\n          )}\n        </p>\n        <ButtonList gap={1}>\n          <FeatureTourModal\n            steps={RELEASES_TOUR_STEPS}\n            onAdvance={this.handleTourAdvance}\n            onCloseModal={this.handleClose}\n            doneText={t('Start Setup')}\n            doneUrl={releasesSetupUrl}\n          >\n            {({showModal}) => (\n              <Button priority=\"default\" onClick={showModal}>\n                {t('Take a Tour')}\n              </Button>\n            )}\n          </FeatureTourModal>\n          <Button priority=\"primary\" href={releasesSetupUrl} external>\n            {t('Start Setup')}\n          </Button>\n        </ButtonList>\n      </OnboardingPanel>\n    );\n  }\n}\n\nconst ButtonList = styled(ButtonBar)`\n  grid-template-columns: repeat(auto-fit, minmax(130px, max-content));\n`;\n\nexport default ReleasePromo;\n","export enum SortOption {\n  CRASH_FREE_USERS = 'crash_free_users',\n  CRASH_FREE_SESSIONS = 'crash_free_sessions',\n  USERS_24_HOURS = 'users_24h',\n  SESSIONS = 'sessions',\n  DATE = 'date',\n  BUILD = 'build',\n  SEMVER = 'semver',\n  ADOPTION = 'adoption',\n}\n\nexport enum DisplayOption {\n  USERS = 'users',\n  SESSIONS = 'sessions',\n}\n\nexport enum StatusOption {\n  ACTIVE = 'active',\n  ARCHIVED = 'archived',\n}\n","import round from 'lodash/round';\n\nimport {tn} from 'app/locale';\nimport {Release, ReleaseStatus} from 'app/types';\nimport {QueryResults, stringifyQueryObject} from 'app/utils/tokenizeSearch';\nimport {IssueSortOptions} from 'app/views/issueList/utils';\n\nimport {DisplayOption} from '../list/utils';\n\nexport const CRASH_FREE_DECIMAL_THRESHOLD = 95;\n\nexport const roundDuration = (seconds: number) => {\n  return round(seconds, seconds > 60 ? 0 : 3);\n};\n\nexport const getCrashFreePercent = (\n  percent: number,\n  decimalThreshold = CRASH_FREE_DECIMAL_THRESHOLD,\n  decimalPlaces = 3\n): number => {\n  return round(percent, percent > decimalThreshold ? decimalPlaces : 0);\n};\n\nexport const displayCrashFreePercent = (\n  percent: number,\n  decimalThreshold = CRASH_FREE_DECIMAL_THRESHOLD,\n  decimalPlaces = 3\n): string => {\n  if (isNaN(percent)) {\n    return '\\u2015';\n  }\n\n  if (percent < 1 && percent > 0) {\n    return `<1\\u0025`;\n  }\n\n  const rounded = getCrashFreePercent(\n    percent,\n    decimalThreshold,\n    decimalPlaces\n  ).toLocaleString();\n\n  return `${rounded}\\u0025`;\n};\n\nexport const getReleaseNewIssuesUrl = (\n  orgSlug: string,\n  projectId: string | number | null,\n  version: string\n) => {\n  return {\n    pathname: `/organizations/${orgSlug}/issues/`,\n    query: {\n      project: projectId,\n      // we are resetting time selector because releases' new issues count doesn't take time selector into account\n      statsPeriod: undefined,\n      start: undefined,\n      end: undefined,\n      query: stringifyQueryObject(new QueryResults([`firstRelease:${version}`])),\n      sort: IssueSortOptions.FREQ,\n    },\n  };\n};\n\nexport const getReleaseUnhandledIssuesUrl = (\n  orgSlug: string,\n  projectId: string | number | null,\n  version: string\n) => {\n  return {\n    pathname: `/organizations/${orgSlug}/issues/`,\n    query: {\n      project: projectId,\n      query: stringifyQueryObject(\n        new QueryResults([`release:${version}`, 'error.unhandled:true'])\n      ),\n      sort: IssueSortOptions.FREQ,\n    },\n  };\n};\n\nexport const isReleaseArchived = (release: Release) =>\n  release.status === ReleaseStatus.Archived;\n\nexport function releaseDisplayLabel(displayOption: DisplayOption, count?: number | null) {\n  if (displayOption === DisplayOption.USERS) {\n    return tn('user', 'users', count);\n  }\n\n  return tn('session', 'sessions', count);\n}\n","module.exports = __webpack_public_path__ + \"spot/releases-empty-state.957883.svg\";","module.exports = __webpack_public_path__ + \"spot/releases-tour-commits.da8e6d.svg\";","module.exports = __webpack_public_path__ + \"spot/releases-tour-email.95829e.svg\";","module.exports = __webpack_public_path__ + \"spot/releases-tour-resolution.5f727e.svg\";","module.exports = __webpack_public_path__ + \"spot/releases-tour-stats.239b9d.svg\";"],"sourceRoot":""}