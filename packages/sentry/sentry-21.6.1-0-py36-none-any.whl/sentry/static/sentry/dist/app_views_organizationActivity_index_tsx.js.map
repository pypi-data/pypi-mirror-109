{"version":3,"sources":["webpack:///./app/components/activity/item/avatar.tsx","webpack:///./app/components/commitLink.tsx","webpack:///./app/components/pullRequestLink.tsx","webpack:///./app/utils/routeTitle.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/components/issueLink.tsx","webpack:///./app/views/organizationActivity/activityFeedItem.tsx","webpack:///./app/views/organizationActivity/index.tsx"],"names":["ActivityAvatar","className","type","user","size","SystemAvatar","StyledIconSentry","width","height","shape","p","theme","textColor","background","IconSentry","SUPPORTED_PROVIDERS","icon","providerIds","commitUrl","baseUrl","commitId","inline","repository","t","shortId","getShortCommitHash","providerData","find","provider","includes","id","undefined","url","href","external","renderIcon","repo","split","pop","pullRequest","displayId","name","title","externalUrl","routeName","orgSlug","withSentry","projectSlug","tmplBase","tmpl","AsyncView","this","getTitle","renderComponent","AsyncComponent","IssueLink","children","orgId","issue","to","card","Link","message","getMessage","classNames","isBookmarked","hasSeen","isResolved","status","streamPath","hovercardBody","Section","Title","data","HovercardEventMessage","level","levelIndicatorSize","annotations","logger","pathname","query","map","annotation","i","dangerouslySetInnerHTML","__html","Grid","GridHeader","StyledTimeSince","date","firstSeen","lastSeen","value","count","userCount","body","header","fontSizeMedium","space","overflowEllipsis","gray300","EventMessage","TimeSince","ActivityItem","clipped","props","defaultClipped","createRef","author","item","organization","slug","project","basePath","issueLink","versionLink","version","releaseVersion","projectId","tct","commit","ignoreDuration","duration","seconds","ignoreCount","ignoreWindow","ignoreUserCount","ignoreUserWindow","tn","fingerprints","length","source","assignee","assigneeType","team","TeamStore","MemberListStore","email","assigneeEmail","help","issues","link","environment","activityBubbleRef","current","offsetHeight","clipHeight","setState","avatar","hasBubble","bubbleProps","marked","text","location","formatProjectActivity","ActivityAuthor","Bubble","ref","state","Meta","Project","dateCreated","Component","innerBorder","fontSizeRelativeSmall","backgroundSecondary","border","OrganizationActivity","params","routeTitle","renderBody","error","disableLog","disableReport","errors","notFound","Object","values","resp","loading","activity","activityPageLinks","withMargins","renderEmpty","data-test-id","mini","css","marginBottom","borderRadius","pageLinks","withOrganization"],"mappings":"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","file":"app_views_organizationActivity_index_tsx.7ef5cd9f32e024232ec6.js","sourcesContent":["import styled from '@emotion/styled';\n\nimport UserAvatar from 'app/components/avatar/userAvatar';\nimport Placeholder from 'app/components/placeholder';\nimport {IconSentry} from 'app/icons';\nimport {AvatarUser} from 'app/types';\n\ntype Props = {\n  type: 'system' | 'user';\n  user?: AvatarUser;\n  className?: string;\n  size?: number;\n};\n\nfunction ActivityAvatar({className, type, user, size = 38}: Props) {\n  if (user) {\n    return <UserAvatar user={user} size={size} className={className} />;\n  }\n\n  if (type === 'system') {\n    // Return Sentry avatar\n    return (\n      <SystemAvatar className={className} size={size}>\n        <StyledIconSentry size=\"md\" />\n      </SystemAvatar>\n    );\n  }\n\n  return (\n    <Placeholder\n      className={className}\n      width={`${size}px`}\n      height={`${size}px`}\n      shape=\"circle\"\n    />\n  );\n}\n\nexport default ActivityAvatar;\n\ntype SystemAvatarProps = {\n  size: number;\n};\n\nconst SystemAvatar = styled('span')<SystemAvatarProps>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: ${p => p.size}px;\n  height: ${p => p.size}px;\n  background-color: ${p => p.theme.textColor};\n  color: ${p => p.theme.background};\n  border-radius: 50%;\n`;\n\nconst StyledIconSentry = styled(IconSentry)`\n  padding-bottom: 3px;\n`;\n","import * as React from 'react';\n\nimport Button from 'app/components/button';\nimport ExternalLink from 'app/components/links/externalLink';\nimport {IconBitbucket, IconGithub, IconGitlab, IconVsts} from 'app/icons';\nimport {t} from 'app/locale';\nimport {Repository} from 'app/types';\nimport {getShortCommitHash} from 'app/utils';\n\ntype CommitFormatterParameters = {\n  baseUrl: string;\n  commitId: string;\n};\n\ntype CommitProvider = {\n  icon: React.ReactNode;\n  providerIds: string[];\n  commitUrl: (CommitFormatterParameters) => string;\n};\n\n// TODO(epurkhiser, jess): This should be moved into plugins.\nconst SUPPORTED_PROVIDERS: Readonly<CommitProvider[]> = [\n  {\n    icon: <IconGithub size=\"xs\" />,\n    providerIds: ['github', 'integrations:github', 'integrations:github_enterprise'],\n    commitUrl: ({baseUrl, commitId}) => `${baseUrl}/commit/${commitId}`,\n  },\n  {\n    icon: <IconBitbucket size=\"xs\" />,\n    providerIds: ['bitbucket', 'integrations:bitbucket'],\n    commitUrl: ({baseUrl, commitId}) => `${baseUrl}/commits/${commitId}`,\n  },\n  {\n    icon: <IconVsts size=\"xs\" />,\n    providerIds: ['visualstudio', 'integrations:vsts'],\n    commitUrl: ({baseUrl, commitId}) => `${baseUrl}/commit/${commitId}`,\n  },\n  {\n    icon: <IconGitlab size=\"xs\" />,\n    providerIds: ['gitlab', 'integrations:gitlab'],\n    commitUrl: ({baseUrl, commitId}) => `${baseUrl}/commit/${commitId}`,\n  },\n];\n\ntype Props = {\n  commitId: string;\n  repository?: Repository;\n  inline?: boolean;\n};\n\nfunction CommitLink({inline, commitId, repository}: Props) {\n  if (!commitId || !repository) {\n    return <span>{t('Unknown Commit')}</span>;\n  }\n\n  const shortId = getShortCommitHash(commitId);\n\n  const providerData = SUPPORTED_PROVIDERS.find(provider => {\n    if (!repository.provider) {\n      return false;\n    }\n    return provider.providerIds.includes(repository.provider.id);\n  });\n\n  if (providerData === undefined) {\n    return <span>{shortId}</span>;\n  }\n\n  const commitUrl =\n    repository.url &&\n    providerData.commitUrl({\n      commitId,\n      baseUrl: repository.url,\n    });\n\n  return !inline ? (\n    <Button external href={commitUrl} size=\"small\" icon={providerData.icon}>\n      {shortId}\n    </Button>\n  ) : (\n    <ExternalLink className=\"inline-commit\" href={commitUrl}>\n      {providerData.icon}\n      {' ' + shortId}\n    </ExternalLink>\n  );\n}\n\nexport default CommitLink;\n","import ExternalLink from 'app/components/links/externalLink';\nimport {IconBitbucket, IconGithub, IconGitlab} from 'app/icons';\nimport {PullRequest, Repository} from 'app/types';\n\nfunction renderIcon(repo: Repository) {\n  if (!repo.provider) {\n    return null;\n  }\n\n  const {id} = repo.provider;\n  const providerId = id.includes(':') ? id.split(':').pop() : id;\n\n  switch (providerId) {\n    case 'github':\n      return <IconGithub size=\"xs\" />;\n    case 'gitlab':\n      return <IconGitlab size=\"xs\" />;\n    case 'bitbucket':\n      return <IconBitbucket size=\"xs\" />;\n    default:\n      return null;\n  }\n}\n\ntype Props = {\n  pullRequest: PullRequest;\n  repository: Repository;\n  inline?: boolean;\n};\n\nconst PullRequestLink = ({pullRequest, repository, inline}: Props) => {\n  const displayId = `${repository.name} #${pullRequest.id}: ${pullRequest.title}`;\n\n  return pullRequest.externalUrl ? (\n    <ExternalLink\n      className={inline ? 'inline-commit' : 'btn btn-default btn-sm'}\n      href={pullRequest.externalUrl}\n    >\n      {renderIcon(repository)}\n      {inline ? '' : ' '}\n      {displayId}\n    </ExternalLink>\n  ) : (\n    <span>{displayId}</span>\n  );\n};\n\nexport default PullRequestLink;\n","function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true,\n  projectSlug?: string\n): string {\n  const tmplBase = `${routeName} - ${orgSlug}`;\n  const tmpl = projectSlug ? `${tmplBase} - ${projectSlug}` : tmplBase;\n\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import * as React from 'react';\nimport DocumentTitle from 'react-document-title';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent() as React.ReactChild}\n      </DocumentTitle>\n    );\n  }\n}\n","import * as React from 'react';\nimport {Link} from 'react-router';\nimport styled from '@emotion/styled';\nimport classNames from 'classnames';\n\nimport Count from 'app/components/count';\nimport EventOrGroupTitle from 'app/components/eventOrGroupTitle';\nimport EventAnnotation from 'app/components/events/eventAnnotation';\nimport EventMessage from 'app/components/events/eventMessage';\nimport Hovercard from 'app/components/hovercard';\nimport TimeSince from 'app/components/timeSince';\nimport {t} from 'app/locale';\nimport overflowEllipsis from 'app/styles/overflowEllipsis';\nimport space from 'app/styles/space';\nimport {Group} from 'app/types';\nimport {getMessage} from 'app/utils/events';\n\ntype Props = {\n  orgId: string;\n  issue: Group;\n  to: string;\n  card: boolean;\n  children: React.ReactNode;\n};\n\nconst IssueLink = ({children, orgId, issue, to, card = true}: Props) => {\n  if (!card) {\n    return <Link to={to}>{children}</Link>;\n  }\n\n  const message = getMessage(issue);\n\n  const className = classNames({\n    isBookmarked: issue.isBookmarked,\n    hasSeen: issue.hasSeen,\n    isResolved: issue.status === 'resolved',\n  });\n\n  const streamPath = `/organizations/${orgId}/issues/`;\n\n  const hovercardBody = (\n    <div className={className}>\n      <Section>\n        <Title>\n          <EventOrGroupTitle data={issue} />\n        </Title>\n\n        <HovercardEventMessage\n          level={issue.level}\n          levelIndicatorSize=\"9px\"\n          message={message}\n          annotations={\n            <React.Fragment>\n              {issue.logger && (\n                <EventAnnotation>\n                  <Link\n                    to={{\n                      pathname: streamPath,\n                      query: {query: `logger:${issue.logger}`},\n                    }}\n                  >\n                    {issue.logger}\n                  </Link>\n                </EventAnnotation>\n              )}\n              {issue.annotations.map((annotation, i) => (\n                <EventAnnotation key={i} dangerouslySetInnerHTML={{__html: annotation}} />\n              ))}\n            </React.Fragment>\n          }\n        />\n      </Section>\n\n      <Grid>\n        <div>\n          <GridHeader>{t('First Seen')}</GridHeader>\n          <StyledTimeSince date={issue.firstSeen} />\n        </div>\n        <div>\n          <GridHeader>{t('Last Seen')}</GridHeader>\n          <StyledTimeSince date={issue.lastSeen} />\n        </div>\n        <div>\n          <GridHeader>{t('Occurrences')}</GridHeader>\n          <Count value={issue.count} />\n        </div>\n        <div>\n          <GridHeader>{t('Users Affected')}</GridHeader>\n          <Count value={issue.userCount} />\n        </div>\n      </Grid>\n    </div>\n  );\n\n  return (\n    <Hovercard body={hovercardBody} header={issue.shortId}>\n      <Link to={to}>{children}</Link>\n    </Hovercard>\n  );\n};\n\nexport default IssueLink;\n\nconst Title = styled('h3')`\n  font-size: ${p => p.theme.fontSizeMedium};\n  margin: 0 0 ${space(0.5)};\n  ${overflowEllipsis};\n\n  em {\n    font-style: normal;\n    font-weight: 400;\n    color: ${p => p.theme.gray300};\n    font-size: 90%;\n  }\n`;\n\nconst Section = styled('section')`\n  margin-bottom: ${space(2)};\n`;\n\nconst Grid = styled('div')`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-gap: ${space(2)};\n`;\nconst HovercardEventMessage = styled(EventMessage)`\n  font-size: 12px;\n`;\n\nconst GridHeader = styled('h5')`\n  color: ${p => p.theme.gray300};\n  font-size: 11px;\n  margin-bottom: ${space(0.5)};\n  text-transform: uppercase;\n`;\n\nconst StyledTimeSince = styled(TimeSince)`\n  color: inherit;\n`;\n","import {Component, createRef} from 'react';\nimport {Link} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport ActivityAvatar from 'app/components/activity/item/avatar';\nimport CommitLink from 'app/components/commitLink';\nimport Duration from 'app/components/duration';\nimport IssueLink from 'app/components/issueLink';\nimport ExternalLink from 'app/components/links/externalLink';\nimport PullRequestLink from 'app/components/pullRequestLink';\nimport TimeSince from 'app/components/timeSince';\nimport Version from 'app/components/version';\nimport VersionHoverCard from 'app/components/versionHoverCard';\nimport {t, tct, tn} from 'app/locale';\nimport MemberListStore from 'app/stores/memberListStore';\nimport TeamStore from 'app/stores/teamStore';\nimport space from 'app/styles/space';\nimport {Activity, Organization} from 'app/types';\nimport marked from 'app/utils/marked';\n\nconst defaultProps = {\n  defaultClipped: false,\n  clipHeight: 68,\n};\ntype DefaultProps = typeof defaultProps;\n\ntype Props = {\n  className?: string;\n  organization: Organization;\n  item: Activity;\n} & DefaultProps;\n\ntype State = {\n  clipped: Props['defaultClipped'];\n};\n\nclass ActivityItem extends Component<Props, State> {\n  static defaultProps = defaultProps;\n\n  state: State = {\n    clipped: this.props.defaultClipped,\n  };\n\n  componentDidMount() {\n    if (this.activityBubbleRef.current) {\n      const bubbleHeight = this.activityBubbleRef.current.offsetHeight;\n\n      if (bubbleHeight > this.props.clipHeight) {\n        // okay if this causes re-render; cannot determine until\n        // rendered first anyways\n        // eslint-disable-next-line react/no-did-mount-set-state\n        this.setState({clipped: true});\n      }\n    }\n  }\n\n  activityBubbleRef = createRef<HTMLDivElement>();\n\n  formatProjectActivity = (author, item) => {\n    const data = item.data;\n    const {organization} = this.props;\n    const orgId = organization.slug;\n    const project = item.project;\n    const issue = item.issue;\n    const basePath = `/organizations/${orgId}/issues/`;\n\n    const issueLink = issue ? (\n      <IssueLink orgId={orgId} issue={issue} to={`${basePath}${issue.id}/`} card>\n        {issue.shortId}\n      </IssueLink>\n    ) : null;\n\n    const versionLink = data.version ? (\n      <VersionHoverCard\n        organization={organization}\n        projectSlug={project.slug}\n        releaseVersion={data.version}\n      >\n        <Version version={data.version} projectId={project.id} />\n      </VersionHoverCard>\n    ) : null;\n\n    switch (item.type) {\n      case 'note':\n        return tct('[author] commented on [issue]', {\n          author,\n          issue: (\n            <IssueLink\n              card\n              orgId={orgId}\n              issue={issue}\n              to={`${basePath}${issue.id}/activity/#event_${item.id}`}\n            >\n              {issue.shortId}\n            </IssueLink>\n          ),\n        });\n      case 'set_resolved':\n        return tct('[author] marked [issue] as resolved', {\n          author,\n          issue: issueLink,\n        });\n      case 'set_resolved_by_age':\n        return tct('[author] marked [issue] as resolved due to age', {\n          author,\n          issue: issueLink,\n        });\n      case 'set_resolved_in_release':\n        if (data.version) {\n          return tct('[author] marked [issue] as resolved in [version]', {\n            author,\n            version: versionLink,\n            issue: issueLink,\n          });\n        }\n        return tct('[author] marked [issue] as resolved in the upcoming release', {\n          author,\n          issue: issueLink,\n        });\n      case 'set_resolved_in_commit':\n        return tct('[author] marked [issue] as resolved in [version]', {\n          author,\n          version: (\n            <CommitLink\n              inline\n              commitId={data.commit && data.commit.id}\n              repository={data.commit && data.commit.repository}\n            />\n          ),\n          issue: issueLink,\n        });\n      case 'set_resolved_in_pull_request':\n        return tct('[author] marked [issue] as resolved in [version]', {\n          author,\n          version: (\n            <PullRequestLink\n              inline\n              pullRequest={data.pullRequest}\n              repository={data.pullRequest && data.pullRequest.repository}\n            />\n          ),\n          issue: issueLink,\n        });\n      case 'set_unresolved':\n        return tct('[author] marked [issue] as unresolved', {\n          author,\n          issue: issueLink,\n        });\n      case 'set_ignored':\n        if (data.ignoreDuration) {\n          return tct('[author] ignored [issue] for [duration]', {\n            author,\n            duration: <Duration seconds={data.ignoreDuration * 60} />,\n            issue: issueLink,\n          });\n        } else if (data.ignoreCount && data.ignoreWindow) {\n          return tct(\n            '[author] ignored [issue] until it happens [count] time(s) in [duration]',\n            {\n              author,\n              count: data.ignoreCount,\n              duration: <Duration seconds={data.ignoreWindow * 60} />,\n              issue: issueLink,\n            }\n          );\n        } else if (data.ignoreCount) {\n          return tct('[author] ignored [issue] until it happens [count] time(s)', {\n            author,\n            count: data.ignoreCount,\n            issue: issueLink,\n          });\n        } else if (data.ignoreUserCount && data.ignoreUserWindow) {\n          return tct(\n            '[author] ignored [issue] until it affects [count] user(s) in [duration]',\n            {\n              author,\n              count: data.ignoreUserCount,\n              duration: <Duration seconds={data.ignoreUserWindow * 60} />,\n              issue: issueLink,\n            }\n          );\n        } else if (data.ignoreUserCount) {\n          return tct('[author] ignored [issue] until it affects [count] user(s)', {\n            author,\n            count: data.ignoreUserCount,\n            issue: issueLink,\n          });\n        }\n        return tct('[author] ignored [issue]', {\n          author,\n          issue: issueLink,\n        });\n      case 'set_public':\n        return tct('[author] made [issue] public', {\n          author,\n          issue: issueLink,\n        });\n      case 'set_private':\n        return tct('[author] made [issue] private', {\n          author,\n          issue: issueLink,\n        });\n      case 'set_regression':\n        if (data.version) {\n          return tct('[author] marked [issue] as a regression in [version]', {\n            author,\n            version: versionLink,\n            issue: issueLink,\n          });\n        }\n        return tct('[author] marked [issue] as a regression', {\n          author,\n          issue: issueLink,\n        });\n      case 'create_issue':\n        return tct('[author] linked [issue] on [provider]', {\n          author,\n          provider: data.provider,\n          issue: issueLink,\n        });\n      case 'unmerge_destination':\n        return tn(\n          '%2$s migrated %1$s fingerprint from %3$s to %4$s',\n          '%2$s migrated %1$s fingerprints from %3$s to %4$s',\n          data.fingerprints.length,\n          author,\n          data.source ? (\n            <a href={`${basePath}${data.source.id}`}>{data.source.shortId}</a>\n          ) : (\n            t('a group')\n          ),\n          issueLink\n        );\n      case 'first_seen':\n        return tct('[author] saw [link:issue]', {\n          author,\n          issue: issueLink,\n        });\n      case 'assigned':\n        let assignee;\n\n        if (data.assigneeType === 'team') {\n          const team = TeamStore.getById(data.assignee);\n          assignee = team ? team.slug : '<unknown-team>';\n\n          return tct('[author] assigned [issue] to #[assignee]', {\n            author,\n            issue: issueLink,\n            assignee,\n          });\n        }\n\n        if (item.user && data.assignee === item.user.id) {\n          return tct('[author] assigned [issue] to themselves', {\n            author,\n            issue: issueLink,\n          });\n        }\n        assignee = MemberListStore.getById(data.assignee);\n        if (assignee && assignee.email) {\n          return tct('[author] assigned [issue] to [assignee]', {\n            author,\n            assignee: <span title={assignee.email}>{assignee.name}</span>,\n            issue: issueLink,\n          });\n        } else if (data.assigneeEmail) {\n          return tct('[author] assigned [issue] to [assignee]', {\n            author,\n            assignee: data.assigneeEmail,\n            issue: issueLink,\n          });\n        }\n        return tct('[author] assigned [issue] to an [help:unknown user]', {\n          author,\n          help: <span title={data.assignee} />,\n          issue: issueLink,\n        });\n      case 'unassigned':\n        return tct('[author] unassigned [issue]', {\n          author,\n          issue: issueLink,\n        });\n      case 'merge':\n        return tct('[author] merged [count] [link:issues]', {\n          author,\n          count: data.issues.length + 1,\n          link: <Link to={`${basePath}${issue.id}/`} />,\n        });\n      case 'release':\n        return tct('[author] released version [version]', {\n          author,\n          version: versionLink,\n        });\n      case 'deploy':\n        return tct('[author] deployed version [version] to [environment].', {\n          author,\n          version: versionLink,\n          environment: data.environment || 'Default Environment',\n        });\n      case 'mark_reviewed':\n        return tct('[author] marked [issue] as reviewed', {\n          author,\n          issue: issueLink,\n        });\n      default:\n        return ''; // should never hit (?)\n    }\n  };\n\n  render() {\n    const {className, item} = this.props;\n\n    const avatar = (\n      <ActivityAvatar\n        type={!item.user ? 'system' : 'user'}\n        user={item.user ?? undefined}\n        size={36}\n      />\n    );\n    const author = {\n      name: item.user ? item.user.name : 'Sentry',\n      avatar,\n    };\n\n    const hasBubble = ['note', 'create_issue'].includes(item.type);\n    const bubbleProps = {\n      ...(item.type === 'note'\n        ? {dangerouslySetInnerHTML: {__html: marked(item.data.text)}}\n        : {}),\n      ...(item.type === 'create_issue'\n        ? {\n            children: (\n              <ExternalLink href={item.data.location}>{item.data.title}</ExternalLink>\n            ),\n          }\n        : {}),\n    };\n\n    return (\n      <div className={className}>\n        {author.avatar}\n        <div>\n          {this.formatProjectActivity(\n            <span>\n              <ActivityAuthor>{author.name}</ActivityAuthor>\n            </span>,\n            item\n          )}\n          {hasBubble && (\n            <Bubble\n              ref={this.activityBubbleRef}\n              clipped={this.state.clipped}\n              {...bubbleProps}\n            />\n          )}\n          <Meta>\n            <Project>{item.project.slug}</Project>\n            <StyledTimeSince date={item.dateCreated} />\n          </Meta>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default styled(ActivityItem)`\n  display: grid;\n  grid-gap: ${space(1)};\n  grid-template-columns: max-content auto;\n  position: relative;\n  margin: 0;\n  padding: ${space(1)};\n  border-bottom: 1px solid ${p => p.theme.innerBorder};\n  line-height: 1.4;\n  font-size: ${p => p.theme.fontSizeMedium};\n`;\n\nconst ActivityAuthor = styled('span')`\n  font-weight: 600;\n`;\n\nconst Meta = styled('div')`\n  color: ${p => p.theme.textColor};\n  font-size: ${p => p.theme.fontSizeRelativeSmall};\n`;\nconst Project = styled('span')`\n  font-weight: bold;\n`;\n\nconst Bubble = styled('div')<{clipped: boolean}>`\n  background: ${p => p.theme.backgroundSecondary};\n  margin: ${space(0.5)} 0;\n  padding: ${space(1)} ${space(2)};\n  border: 1px solid ${p => p.theme.border};\n  border-radius: 3px;\n  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.04);\n  position: relative;\n  overflow: hidden;\n\n  a {\n    max-width: 100%;\n    overflow-x: hidden;\n    text-overflow: ellipsis;\n  }\n\n  p {\n    &:last-child {\n      margin-bottom: 0;\n    }\n  }\n\n  ${p =>\n    p.clipped &&\n    `\n    max-height: 68px;\n\n    &:after {\n      position: absolute;\n      content: '';\n      display: block;\n      bottom: 0;\n      right: 0;\n      left: 0;\n      height: 36px;\n      background-image: linear-gradient(180deg, rgba(255, 255, 255, 0.15), rgba(255, 255, 255, 1));\n      border-bottom: 6px solid #fff;\n      border-radius: 0 0 3px 3px;\n      pointer-events: none;\n    }\n  `}\n`;\n\nconst StyledTimeSince = styled(TimeSince)`\n  color: ${p => p.theme.gray300};\n  padding-left: ${space(1)};\n`;\n","import * as React from 'react';\nimport {RouteComponentProps} from 'react-router';\n\nimport EmptyStateWarning from 'app/components/emptyStateWarning';\nimport ErrorBoundary from 'app/components/errorBoundary';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport PageHeading from 'app/components/pageHeading';\nimport Pagination from 'app/components/pagination';\nimport {Panel} from 'app/components/panels';\nimport {t} from 'app/locale';\nimport {PageContent} from 'app/styles/organization';\nimport space from 'app/styles/space';\nimport {Activity, Organization} from 'app/types';\nimport routeTitle from 'app/utils/routeTitle';\nimport withOrganization from 'app/utils/withOrganization';\nimport AsyncView from 'app/views/asyncView';\n\nimport ActivityFeedItem from './activityFeedItem';\n\ntype Props = {\n  organization: Organization;\n} & RouteComponentProps<{orgId: string}, {}> &\n  AsyncView['props'];\n\ntype State = {\n  activity: Activity[];\n} & AsyncView['state'];\n\nclass OrganizationActivity extends AsyncView<Props, State> {\n  getTitle() {\n    const {orgId} = this.props.params;\n    return routeTitle(t('Activity'), orgId);\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    return [['activity', `/organizations/${this.props.params.orgId}/activity/`]];\n  }\n\n  renderLoading() {\n    return this.renderBody();\n  }\n\n  renderEmpty() {\n    return (\n      <EmptyStateWarning>\n        <p>{t('Nothing to show here, move along.')}</p>\n      </EmptyStateWarning>\n    );\n  }\n\n  renderError(error?: Error, disableLog = false, disableReport = false): React.ReactNode {\n    const {errors} = this.state;\n    const notFound = Object.values(errors).find(resp => resp && resp.status === 404);\n    if (notFound) {\n      return this.renderBody();\n    }\n    return super.renderError(error, disableLog, disableReport);\n  }\n\n  renderBody() {\n    const {loading, activity, activityPageLinks} = this.state;\n\n    return (\n      <PageContent>\n        <PageHeading withMargins>{t('Activity')}</PageHeading>\n        <Panel>\n          {loading && <LoadingIndicator />}\n          {!loading && !activity?.length && this.renderEmpty()}\n          {!loading && activity?.length > 0 && (\n            <div data-test-id=\"activity-feed-list\">\n              {activity.map(item => (\n                <ErrorBoundary\n                  mini\n                  css={{marginBottom: space(1), borderRadius: 0}}\n                  key={item.id}\n                >\n                  <ActivityFeedItem organization={this.props.organization} item={item} />\n                </ErrorBoundary>\n              ))}\n            </div>\n          )}\n        </Panel>\n        {activityPageLinks && (\n          <Pagination pageLinks={activityPageLinks} {...this.props} />\n        )}\n      </PageContent>\n    );\n  }\n}\n\nexport default withOrganization(OrganizationActivity);\n"],"sourceRoot":""}