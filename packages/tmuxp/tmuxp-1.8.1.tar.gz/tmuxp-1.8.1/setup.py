# -*- coding: utf-8 -*-
from setuptools import setup

packages = \
['tmuxp']

package_data = \
{'': ['*']}

install_requires = \
['click>=7,<8', 'colorama>=0.3.9', 'kaptan>=0.5.10', 'libtmux<0.10']

entry_points = \
{'console_scripts': ['tmuxp = tmuxp:cli.cli']}

setup_kwargs = {
    'name': 'tmuxp',
    'version': '1.8.1',
    'description': 'tmux session manager',
    'long_description': 'tmuxp, tmux session manager. built on `libtmux`_.\n\n|pypi| |docs| |build-status| |coverage| |license|\n\n**We need help!** tmuxp is a trusted session manager for tmux. If you\ncould lend your time to helping answer issues and QA pull requests, please\ndo! See `issue #290 <https://github.com/tmux-python/tmuxp/issues/290>`__!\n\n**New to tmux?** `The Tao of tmux <https://leanpub.com/the-tao-of-tmux>`_ is\navailable on Leanpub and `Amazon Kindle`_. Read and browse the book for free\n`on the web`_.\n\nInstallation\n------------\n\nPip\n^^^\n\n.. code-block:: shell\n\n   $ pip install --user tmuxp\n\nHomebrew\n^^^^^^^^\n\n.. code-block:: shell\n\n   $ brew install tmuxp\n\nLoad a tmux session\n-------------------\n\nLoad tmux sessions via json and YAML, `tmuxinator`_ and\n`teamocil`_ style.\n\n.. code-block:: yaml\n\n   session_name: 4-pane-split\n   windows:\n   - window_name: dev window\n     layout: tiled\n     shell_command_before:\n       - cd ~/                    # run as a first command in all panes\n     panes:\n       - shell_command:           # pane no. 1\n           - cd /var/log          # run multiple commands in this pane\n           - ls -al | grep \\.log\n       - echo second pane         # pane no. 2\n       - echo third pane          # pane no. 3\n       - echo forth pane          # pane no. 4\n\nSave as *mysession.yaml*, and load:\n\n.. code-block:: sh\n\n   $ tmuxp load ./mysession.yaml\n\nProjects with *.tmuxp.yaml* or *.tmuxp.json* load via directory:\n\n.. code-block:: sh\n\n    $ tmuxp load path/to/my/project/\n\nLoad multiple at once (in bg, offer to attach last):\n\n.. code-block:: sh\n\n    $ tmuxp load mysession ./another/project/ \n\nName a session:\n\n.. code-block:: bash\n\n    $ tmxup load -s session_name ./mysession.yaml\n\n`simple`_ and `very elaborate`_ config examples\n\nUser-level configurations\n-------------------------\ntmuxp checks for configs in user directories:\n\n- ``$TMUXP_CONFIGDIR``, if set\n- ``$XDG_CONFIG_HOME``, usually *$HOME/.config/tmuxp/*\n- ``$HOME/.tmuxp/``\n\nLoad your tmuxp config from anywhere by using the filename, assuming\n*~/.config/tmuxp/mysession.yaml* (or *.json*):\n\n.. code-block:: sh\n\n    $ tmuxp load mysession\n\nSee `author\'s tmuxp configs`_ and the projects\' `tmuxp.yaml`_.\n\nShell\n-----\n*New in 1.6.0*:\n\n``tmuxp shell`` launches into a python console preloaded with the attached server,\nsession, and window in `libtmux`_ objects.\n\n.. code-block:: shell\n\n   $ tmuxp shell\n\n   (Pdb) server\n   <libtmux.server.Server object at 0x7f7dc8e69d10>\n   (Pdb) server.sessions\n   [Session($1 your_project)]\n   (Pdb) session\n   Session($1 your_project)\n   (Pdb) session.name\n   \'your_project\'\n   (Pdb) window\n   Window(@3 1:your_window, Session($1 your_project))\n   (Pdb) window.name\n   \'your_window\'\n   (Pdb) window.panes\n   [Pane(%6 Window(@3 1:your_window, Session($1 your_project)))\n   (Pdb) pane\n   Pane(%6 Window(@3 1:your_window, Session($1 your_project))\n\nPython 3.7+ supports `PEP 553`_ ``breakpoint()`` (including\n``PYTHONBREAKPOINT``). Also supports direct commands via ``-c``:\n\n.. code-block:: shell\n\n   $ tmuxp shell -c \'print(window.name)\'\n   my_window\n\n   $ tmuxp shell -c \'print(window.name.upper())\'\n   MY_WINDOW\n\nRead more on `tmuxp shell`_ in the CLI docs.\n\n.. _PEP 553: https://www.python.org/dev/peps/pep-0553/\n.. _tmuxp shell: https://tmuxp.git-pull.com/cli.html#shell\n\nPre-load hook\n-------------\nRun custom startup scripts (such as installing project dependencies before\nloading tmux. See the `bootstrap_env.py`_ and `before_script`_ example\n\nLoad in detached state\n----------------------\nYou can also load sessions in the background by passing ``-d`` flag\n\nScreenshot\n----------\n\n.. image:: https://raw.githubusercontent.com/tmux-python/tmuxp/master/docs/_static/tmuxp-demo.gif\n    :scale: 100%\n    :width: 45%\n    :align: center\n \n\nFreeze a tmux session\n---------------------\n\nSnapshot your tmux layout, pane paths, and window/session names. \n\n.. code-block:: sh\n\n   $ tmuxp freeze session-name\n\nSee more about `freezing tmux`_ sessions.\n\nConvert a session file\n----------------------\n\nConvert a session file from yaml to json and vice versa.\n\n.. code-block:: sh\n\n   $ tmuxp convert filename\n\nThis will prompt you for confirmation and shows you the new file that is going\nto be written.\n\n\nYou can auto confirm the prompt. In this case no preview will be shown.\n\n.. code-block:: sh\n\n   $ tmuxp convert -y filename\n   $ tmuxp convert --yes filename\n\nPlugin System\n-------------\n\ntmuxp has a plugin system to allow for custom behavior. See more about the \n`Plugin System`_. \n\nDebugging Helpers\n-----------------\n\nThe ``load`` command provides a way to log output to a log file for debugging \npurposes.\n\n.. code-block:: sh\n\n   $ tmuxp load --log-file <log-file-name> .\n\nCollect system info to submit with a Github issue:\n\n.. code-block:: sh\n\n   $ tmuxp debug-info\n   ------------------\n   environment:\n       system: Linux\n       arch: x86_64\n\n   # ... so on\n\n\nDocs / Reading material\n-----------------------\n\nSee the `Quickstart`_.\n\n`Documentation`_ homepage (also in `中文`_)\n\nWant to learn more about tmux itself? `Read The Tao of Tmux online`_.\n\n.. _Documentation: http://tmuxp.git-pull.com\n.. _Source: https://github.com/tmux-python/tmuxp\n.. _中文: http://tmuxp-zh.rtfd.org/\n.. _before_script: http://tmuxp.git-pull.com/examples.html#bootstrap-project-before-launch\n.. _virtualenv: https://virtualenv.git-pull.com/\n.. _Read The Tao of tmux online: http://tmuxp.git-pull.com/about_tmux.html\n.. _author\'s tmuxp configs: https://github.com/tony/tmuxp-config\n.. _python library: https://tmuxp.git-pull.com/api.html\n.. _python API quickstart: https://tmuxp.git-pull.com/quickstart_python.html\n.. _tmux(1): http://tmux.sourceforge.net/\n.. _tmuxinator: https://github.com/aziz/tmuxinator\n.. _teamocil: https://github.com/remiprev/teamocil\n.. _Examples: http://tmuxp.git-pull.com/examples.html\n.. _freezing tmux: http://tmuxp.git-pull.com/cli.html#freeze-sessions\n.. _Plugin System: http://tmuxp.git-pull.com/plugin_system.html\n.. _bootstrap_env.py: https://github.com/tmux-python/tmuxp/blob/master/bootstrap_env.py\n.. _testing: http://tmuxp.git-pull.com/developing.html#test-runner\n.. _python objects: http://tmuxp.git-pull.com/api.html#api\n.. _tmuxp.yaml: https://github.com/tmux-python/tmuxp/blob/master/.tmuxp.yaml \n.. _simple: http://tmuxp.git-pull.com/examples.html#short-hand-inline\n.. _very elaborate: http://tmuxp.git-pull.com/examples.html#super-advanced-dev-environment\n.. _Quickstart: http://tmuxp.git-pull.com/quickstart.html\n.. _Commands: http://tmuxp.git-pull.com/cli.html\n.. _libtmux: https://github.com/tmux-python/libtmux\n.. _on the web: https://leanpub.com/the-tao-of-tmux/read\n\nDonations\n---------\n\nYour donations fund development of new features, testing and support.\nYour money will go directly to maintenance and development of the project.\nIf you are an individual, feel free to give whatever feels right for the\nvalue you get out of the project.\n\nSee donation options at https://git-pull.com/support.html.\n\nProject details\n---------------\n- tmux support: 1.8, 1.9a, 2.0, 2.1, 2.2, 2.3, 2.4, 2.5, 2.6\n- python support: >= 3.6, pypy, pypy3\n- Source: https://github.com/tmux-python/tmuxp\n- Docs: https://tmuxp.git-pull.com\n- API: https://tmuxp.git-pull.com/api.html\n- Changelog: https://tmuxp.git-pull.com/history.html\n- Issues: https://github.com/tmux-python/tmuxp/issues\n- Test Coverage: https://codecov.io/gh/tmux-python/tmuxp\n- pypi: https://pypi.python.org/pypi/tmuxp\n- Open Hub: https://www.openhub.net/p/tmuxp-python\n- License: `MIT`_.\n\n.. _MIT: http://opensource.org/licenses/MIT\n.. _developing and testing: http://tmuxp.git-pull.com/developing.html\n.. _Amazon Kindle: http://amzn.to/2gPfRhC\n\n.. |pypi| image:: https://img.shields.io/pypi/v/tmuxp.svg\n    :alt: Python Package\n    :target: http://badge.fury.io/py/tmuxp\n\n.. |docs| image:: https://github.com/tmux-python/tmuxp/workflows/Publish%20Docs/badge.svg\n   :alt: Docs\n   :target: https://github.com/tmux-python/tmuxp/actions?query=workflow%3A"Publish+Docs"\n\n.. |build-status| image:: https://github.com/tmux-python/tmuxp/workflows/tests/badge.svg\n   :alt: Build status\n   :target: https://github.com/tmux-python/tmuxp/actions?query=workflow%3A"tests"\n\n.. |coverage| image:: https://codecov.io/gh/tmux-python/tmuxp/branch/master/graph/badge.svg\n    :alt: Code Coverage\n    :target: https://codecov.io/gh/tmux-python/tmuxp\n\n.. |license| image:: https://img.shields.io/github/license/tmux-python/tmuxp.svg\n    :alt: License \n',
    'author': 'Tony Narlock',
    'author_email': 'tony@git-pull.com',
    'maintainer': None,
    'maintainer_email': None,
    'url': 'http://github.com/tmux-python/tmuxp/',
    'packages': packages,
    'package_data': package_data,
    'install_requires': install_requires,
    'entry_points': entry_points,
    'python_requires': '>=3.6,<4.0',
}


setup(**setup_kwargs)
